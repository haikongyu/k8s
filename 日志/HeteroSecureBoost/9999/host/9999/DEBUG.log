[INFO] [2020-11-20 07:07:25,726] [18802:139627058091840] - task_executor.py[line:302]: report task 202011200707112994524_reader_1 0 host 9999 to driver
[INFO] [2020-11-20 07:07:25,730] [18802:139627058091840] - control_client.py[line:42]: request update job 202011200707112994524 task 202011200707112994524_reader_1 0 on host 9999
[DEBUG] [2020-11-20 07:07:38,881] [18802:139627058091840] - _federation.py[line:35]: [federation.eggroll]init federation: rp_session_id=202011200707112994524_reader_1_0_host_9999, rs_session_id=202011200707112994524_reader_1_0, party=Party(role=host, party_id=9999), proxy_endpoint=rollsite:9370
[DEBUG] [2020-11-20 07:07:38,885] [18802:139627058091840] - _federation.py[line:45]: [federation.eggroll]init federation context done
[INFO] [2020-11-20 07:07:38,886] [18802:139627058091840] - task_executor.py[line:156]: Run 202011200707112994524 reader_1 202011200707112994524_reader_1 host 9999 task
[INFO] [2020-11-20 07:07:38,887] [18802:139627058091840] - task_executor.py[line:157]: Component parameters on party {'ReaderParam': {'table': {'name': 'breast_hetero_host', 'namespace': 'experiment'}}, 'dsl_version': 2, 'initiator': {'role': 'guest', 'party_id': 10000}, 'role': {'host': [9999], 'guest': [10000]}, 'job_parameters': {'job_type': 'train', 'work_mode': 1, 'backend': 0, 'computing_engine': 'EGGROLL', 'federation_engine': 'EGGROLL', 'storage_engine': 'EGGROLL', 'engines_address': {'computing': {'cores_per_node': 20, 'nodes': 1}, 'federation': {'host': 'rollsite', 'port': 9370}, 'storage': {'cores_per_node': 20, 'nodes': 1}}, 'federated_mode': 'MULTIPLE', 'task_parallelism': 1, 'computing_partitions': 4, 'federated_status_collect_type': 'PUSH', 'model_id': 'guest-10000#host-9999#model', 'model_version': '202011200707112994524', 'eggroll_run': {'eggroll.session.processors.per.node': 4}, 'spark_run': {}, 'rabbitmq_run': {}, 'adaptation_parameters': {'task_nodes': 1, 'task_cores_per_node': 4, 'task_memory_per_node': 0}}, 'component_parameters': {'common': {'hetero_secure_boost_0': {'task_type': 'classification', 'objective_param': {'objective': 'cross_entropy'}, 'num_trees': 3, 'validation_freqs': 1, 'encrypt_param': {'method': 'iterativeAffine'}, 'tree_param': {'max_depth': 3}}, 'evaluation_0': {'eval_type': 'binary'}}, 'role': {'guest': {'0': {'reader_1': {'table': {'name': 'breast_hetero_guest', 'namespace': 'experiment'}}, 'reader_0': {'table': {'name': 'breast_hetero_guest', 'namespace': 'experiment'}}, 'dataio_0': {'with_label': True, 'output_format': 'dense'}, 'dataio_1': {'with_label': True, 'output_format': 'dense'}}}, 'host': {'0': {'reader_1': {'table': {'name': 'breast_hetero_host', 'namespace': 'experiment'}}, 'reader_0': {'table': {'name': 'breast_hetero_host', 'namespace': 'experiment'}}, 'dataio_0': {'with_label': False}, 'dataio_1': {'with_label': False}}}}}, 'config': '/data/projects/fate/python/fate_flow/examples/hetero_secureboost_conf.json', 'dsl': 'examples/hetero_secureboost_dsl.json', 'function': 'submit_job', 'local': {'role': 'host', 'party_id': 9999}, 'CodePath': 'fate_flow/components/reader.py/Reader', 'module': 'Reader', 'output_data_name': ['data']}
[INFO] [2020-11-20 07:07:38,889] [18802:139627058091840] - task_executor.py[line:158]: Task input dsl {}
[DEBUG] [2020-11-20 07:07:39,174] [18802:139627058091840] - pool.py[line:129]: No connection available in pool.
[DEBUG] [2020-11-20 07:07:39,219] [18802:139627058091840] - pool.py[line:158]: Created new connection 139626742398480.
[DEBUG] [2020-11-20 07:07:39,232] [18802:139627058091840] - peewee.py[line:2863]: ('SELECT `t1`.`f_create_date`, `t1`.`f_update_date`, `t1`.`f_name`, `t1`.`f_namespace`, `t1`.`f_address`, `t1`.`f_engine`, `t1`.`f_type`, `t1`.`f_options`, `t1`.`f_partitions`, `t1`.`f_id_delimiter`, `t1`.`f_in_serialized`, `t1`.`f_have_head`, `t1`.`f_schema`, `t1`.`f_count`, `t1`.`f_part_of_data`, `t1`.`f_description`, `t1`.`f_create_time`, `t1`.`f_update_time` FROM `t_storage_table_meta` AS `t1` WHERE ((`t1`.`f_name` = %s) AND (`t1`.`f_namespace` = %s))', ['breast_hetero_host', 'experiment'])
[DEBUG] [2020-11-20 07:07:39,246] [18802:139627058091840] - pool.py[line:185]: Returning 139626742398480 to pool.
[DEBUG] [2020-11-20 07:07:39,280] [18802:139627058091840] - peewee.py[line:2863]: ('INSERT INTO `t_session_record` (`f_session_id`, `f_create_date`, `f_update_time`, `f_update_date`, `f_engine_name`, `f_engine_type`, `f_engine_address`, `f_create_time`) VALUES (%s, %s, %s, %s, %s, %s, %s, %s)', ['202011200707112994524_reader_1_0_host_9999_storage_133942282aff11eb97b63ea3df35c0a6', datetime.datetime(2020, 11, 20, 7, 7, 39), 1605856059255, datetime.datetime(2020, 11, 20, 7, 7, 39), 'EGGROLL', 'storage', '{}', 1605856059255])
[DEBUG] [2020-11-20 07:07:39,296] [18802:139627058091840] - _session.py[line:144]: save session 202011200707112994524_reader_1_0_host_9999_storage_133942282aff11eb97b63ea3df35c0a6 record
[DEBUG] [2020-11-20 07:07:39,297] [18802:139627058091840] - pool.py[line:185]: Returning 139626742398480 to pool.
[DEBUG] [2020-11-20 07:07:47,493] [18802:139627058091840] - peewee.py[line:2863]: ('SELECT `t1`.`f_create_date`, `t1`.`f_update_date`, `t1`.`f_name`, `t1`.`f_namespace`, `t1`.`f_address`, `t1`.`f_engine`, `t1`.`f_type`, `t1`.`f_options`, `t1`.`f_partitions`, `t1`.`f_id_delimiter`, `t1`.`f_in_serialized`, `t1`.`f_have_head`, `t1`.`f_schema`, `t1`.`f_count`, `t1`.`f_part_of_data`, `t1`.`f_description`, `t1`.`f_create_time`, `t1`.`f_update_time` FROM `t_storage_table_meta` AS `t1` WHERE ((`t1`.`f_name` = %s) AND (`t1`.`f_namespace` = %s))', ['breast_hetero_host', 'experiment'])
[DEBUG] [2020-11-20 07:07:47,508] [18802:139627058091840] - pool.py[line:185]: Returning 139626742398480 to pool.
[DEBUG] [2020-11-20 07:07:47,908] [18802:139627058091840] - peewee.py[line:2863]: ('UPDATE `t_storage_table_meta` SET `f_count` = %s WHERE ((`t_storage_table_meta`.`f_name` = %s) AND (`t_storage_table_meta`.`f_namespace` = %s))', [569, 'breast_hetero_host', 'experiment'])
[DEBUG] [2020-11-20 07:07:47,915] [18802:139627058091840] - pool.py[line:185]: Returning 139626742398480 to pool.
[INFO] [2020-11-20 07:07:47,915] [18802:139627058091840] - reader.py[line:84]: the EGGROLL engine input table does not require conversion to support computing engine EGGROLL
[DEBUG] [2020-11-20 07:07:50,141] [18802:139627058091840] - peewee.py[line:2863]: ('DELETE FROM `t_session_record` WHERE (`t_session_record`.`f_session_id` = %s)', ['202011200707112994524_reader_1_0_host_9999_storage_133942282aff11eb97b63ea3df35c0a6'])
[DEBUG] [2020-11-20 07:07:50,159] [18802:139627058091840] - _session.py[line:153]: delete session 202011200707112994524_reader_1_0_host_9999_storage_133942282aff11eb97b63ea3df35c0a6 record
[DEBUG] [2020-11-20 07:07:50,160] [18802:139627058091840] - pool.py[line:185]: Returning 139626742398480 to pool.
[INFO] [2020-11-20 07:07:50,161] [18802:139627058091840] - tracker_client.py[line:127]: Request save job 202011200707112994524 task 202011200707112994524_reader_1 0 on host 9999 data data info
[INFO] [2020-11-20 07:07:50,269] [18802:139627058091840] - tracker_client.py[line:103]: Request save job 202011200707112994524 task 202011200707112994524_reader_1 0 on host 9999 metric reader_namespace reader_name meta
[INFO] [2020-11-20 07:07:50,452] [18802:139627058091840] - profile.py[line:249]: 
Computing:
+----------+------------------------------------------+
| function |                                          |
+----------+------------------------------------------+
|  total   | n=0, sum=0.0000, mean=0.0000, max=0.0000 |
+----------+------------------------------------------+

Federation:
+--------+------------------------------------------+
|  get   |                                          |
+--------+------------------------------------------+
| remote |                                          |
+--------+------------------------------------------+
| total  | n=0, sum=0.0000, mean=0.0000, max=0.0000 |
+--------+------------------------------------------+

[DEBUG] [2020-11-20 07:07:50,455] [18802:139627058091840] - profile.py[line:250]: 
Detailed Computing:
+-------+------------------------------------------+
| stack |                                          |
+-------+------------------------------------------+
| total | n=0, sum=0.0000, mean=0.0000, max=0.0000 |
+-------+------------------------------------------+

[INFO] [2020-11-20 07:07:50,457] [18802:139627058091840] - task_executor.py[line:302]: report task 202011200707112994524_reader_1 0 host 9999 to driver
[INFO] [2020-11-20 07:07:50,459] [18802:139627058091840] - control_client.py[line:42]: request update job 202011200707112994524 task 202011200707112994524_reader_1 0 on host 9999
[INFO] [2020-11-20 07:07:51,815] [18802:139627058091840] - task_executor.py[line:207]: task 202011200707112994524_reader_1 host 9999 start time: 2020-11-20 07:07:25
[INFO] [2020-11-20 07:07:51,816] [18802:139627058091840] - task_executor.py[line:209]: task 202011200707112994524_reader_1 host 9999 end time: 2020-11-20 07:07:50
[INFO] [2020-11-20 07:07:51,818] [18802:139627058091840] - task_executor.py[line:211]: task 202011200707112994524_reader_1 host 9999 takes 25.199s
[INFO] [2020-11-20 07:07:51,820] [18802:139627058091840] - task_executor.py[line:214]: Finish 202011200707112994524 reader_1 202011200707112994524_reader_1 0 host 9999 task success
[INFO] [2020-11-20 07:07:51,822] [18802:139627058091840] - task_executor.py[line:302]: report task 202011200707112994524_reader_1 0 host 9999 to driver
[INFO] [2020-11-20 07:07:51,823] [18802:139627058091840] - control_client.py[line:42]: request update job 202011200707112994524 task 202011200707112994524_reader_1 0 on host 9999
[INFO] [2020-11-20 07:08:19,023] [19259:140634121942848] - task_executor.py[line:302]: report task 202011200707112994524_reader_0 0 host 9999 to driver
[INFO] [2020-11-20 07:08:19,025] [19259:140634121942848] - control_client.py[line:42]: request update job 202011200707112994524 task 202011200707112994524_reader_0 0 on host 9999
[DEBUG] [2020-11-20 07:08:31,965] [19259:140634121942848] - _federation.py[line:35]: [federation.eggroll]init federation: rp_session_id=202011200707112994524_reader_0_0_host_9999, rs_session_id=202011200707112994524_reader_0_0, party=Party(role=host, party_id=9999), proxy_endpoint=rollsite:9370
[DEBUG] [2020-11-20 07:08:31,968] [19259:140634121942848] - _federation.py[line:45]: [federation.eggroll]init federation context done
[INFO] [2020-11-20 07:08:31,969] [19259:140634121942848] - task_executor.py[line:156]: Run 202011200707112994524 reader_0 202011200707112994524_reader_0 host 9999 task
[INFO] [2020-11-20 07:08:31,970] [19259:140634121942848] - task_executor.py[line:157]: Component parameters on party {'ReaderParam': {'table': {'name': 'breast_hetero_host', 'namespace': 'experiment'}}, 'dsl_version': 2, 'initiator': {'role': 'guest', 'party_id': 10000}, 'role': {'host': [9999], 'guest': [10000]}, 'job_parameters': {'job_type': 'train', 'work_mode': 1, 'backend': 0, 'computing_engine': 'EGGROLL', 'federation_engine': 'EGGROLL', 'storage_engine': 'EGGROLL', 'engines_address': {'computing': {'cores_per_node': 20, 'nodes': 1}, 'federation': {'host': 'rollsite', 'port': 9370}, 'storage': {'cores_per_node': 20, 'nodes': 1}}, 'federated_mode': 'MULTIPLE', 'task_parallelism': 1, 'computing_partitions': 4, 'federated_status_collect_type': 'PUSH', 'model_id': 'guest-10000#host-9999#model', 'model_version': '202011200707112994524', 'eggroll_run': {'eggroll.session.processors.per.node': 4}, 'spark_run': {}, 'rabbitmq_run': {}, 'adaptation_parameters': {'task_nodes': 1, 'task_cores_per_node': 4, 'task_memory_per_node': 0}}, 'component_parameters': {'common': {'hetero_secure_boost_0': {'task_type': 'classification', 'objective_param': {'objective': 'cross_entropy'}, 'num_trees': 3, 'validation_freqs': 1, 'encrypt_param': {'method': 'iterativeAffine'}, 'tree_param': {'max_depth': 3}}, 'evaluation_0': {'eval_type': 'binary'}}, 'role': {'guest': {'0': {'reader_1': {'table': {'name': 'breast_hetero_guest', 'namespace': 'experiment'}}, 'reader_0': {'table': {'name': 'breast_hetero_guest', 'namespace': 'experiment'}}, 'dataio_0': {'with_label': True, 'output_format': 'dense'}, 'dataio_1': {'with_label': True, 'output_format': 'dense'}}}, 'host': {'0': {'reader_1': {'table': {'name': 'breast_hetero_host', 'namespace': 'experiment'}}, 'reader_0': {'table': {'name': 'breast_hetero_host', 'namespace': 'experiment'}}, 'dataio_0': {'with_label': False}, 'dataio_1': {'with_label': False}}}}}, 'config': '/data/projects/fate/python/fate_flow/examples/hetero_secureboost_conf.json', 'dsl': 'examples/hetero_secureboost_dsl.json', 'function': 'submit_job', 'local': {'role': 'host', 'party_id': 9999}, 'CodePath': 'fate_flow/components/reader.py/Reader', 'module': 'Reader', 'output_data_name': ['data']}
[INFO] [2020-11-20 07:08:31,972] [19259:140634121942848] - task_executor.py[line:158]: Task input dsl {}
[DEBUG] [2020-11-20 07:08:32,282] [19259:140634121942848] - pool.py[line:129]: No connection available in pool.
[DEBUG] [2020-11-20 07:08:32,358] [19259:140634121942848] - pool.py[line:158]: Created new connection 140633840332192.
[DEBUG] [2020-11-20 07:08:32,377] [19259:140634121942848] - peewee.py[line:2863]: ('SELECT `t1`.`f_create_date`, `t1`.`f_update_date`, `t1`.`f_name`, `t1`.`f_namespace`, `t1`.`f_address`, `t1`.`f_engine`, `t1`.`f_type`, `t1`.`f_options`, `t1`.`f_partitions`, `t1`.`f_id_delimiter`, `t1`.`f_in_serialized`, `t1`.`f_have_head`, `t1`.`f_schema`, `t1`.`f_count`, `t1`.`f_part_of_data`, `t1`.`f_description`, `t1`.`f_create_time`, `t1`.`f_update_time` FROM `t_storage_table_meta` AS `t1` WHERE ((`t1`.`f_name` = %s) AND (`t1`.`f_namespace` = %s))', ['breast_hetero_host', 'experiment'])
[DEBUG] [2020-11-20 07:08:32,430] [19259:140634121942848] - pool.py[line:185]: Returning 140633840332192 to pool.
[DEBUG] [2020-11-20 07:08:32,469] [19259:140634121942848] - peewee.py[line:2863]: ('INSERT INTO `t_session_record` (`f_session_id`, `f_create_date`, `f_update_time`, `f_update_date`, `f_engine_name`, `f_engine_type`, `f_engine_address`, `f_create_time`) VALUES (%s, %s, %s, %s, %s, %s, %s, %s)', ['202011200707112994524_reader_0_0_host_9999_storage_32ecaace2aff11ebbbcf3ea3df35c0a6', datetime.datetime(2020, 11, 20, 7, 8, 32), 1605856112440, datetime.datetime(2020, 11, 20, 7, 8, 32), 'EGGROLL', 'storage', '{}', 1605856112440])
[DEBUG] [2020-11-20 07:08:32,514] [19259:140634121942848] - _session.py[line:144]: save session 202011200707112994524_reader_0_0_host_9999_storage_32ecaace2aff11ebbbcf3ea3df35c0a6 record
[DEBUG] [2020-11-20 07:08:32,515] [19259:140634121942848] - pool.py[line:185]: Returning 140633840332192 to pool.
[DEBUG] [2020-11-20 07:08:39,462] [19259:140634121942848] - peewee.py[line:2863]: ('SELECT `t1`.`f_create_date`, `t1`.`f_update_date`, `t1`.`f_name`, `t1`.`f_namespace`, `t1`.`f_address`, `t1`.`f_engine`, `t1`.`f_type`, `t1`.`f_options`, `t1`.`f_partitions`, `t1`.`f_id_delimiter`, `t1`.`f_in_serialized`, `t1`.`f_have_head`, `t1`.`f_schema`, `t1`.`f_count`, `t1`.`f_part_of_data`, `t1`.`f_description`, `t1`.`f_create_time`, `t1`.`f_update_time` FROM `t_storage_table_meta` AS `t1` WHERE ((`t1`.`f_name` = %s) AND (`t1`.`f_namespace` = %s))', ['breast_hetero_host', 'experiment'])
[DEBUG] [2020-11-20 07:08:39,477] [19259:140634121942848] - pool.py[line:185]: Returning 140633840332192 to pool.
[DEBUG] [2020-11-20 07:08:39,982] [19259:140634121942848] - peewee.py[line:2863]: ('UPDATE `t_storage_table_meta` SET `f_count` = %s WHERE ((`t_storage_table_meta`.`f_name` = %s) AND (`t_storage_table_meta`.`f_namespace` = %s))', [569, 'breast_hetero_host', 'experiment'])
[DEBUG] [2020-11-20 07:08:39,989] [19259:140634121942848] - pool.py[line:185]: Returning 140633840332192 to pool.
[INFO] [2020-11-20 07:08:39,991] [19259:140634121942848] - reader.py[line:84]: the EGGROLL engine input table does not require conversion to support computing engine EGGROLL
[DEBUG] [2020-11-20 07:08:41,581] [19259:140634121942848] - peewee.py[line:2863]: ('DELETE FROM `t_session_record` WHERE (`t_session_record`.`f_session_id` = %s)', ['202011200707112994524_reader_0_0_host_9999_storage_32ecaace2aff11ebbbcf3ea3df35c0a6'])
[DEBUG] [2020-11-20 07:08:41,599] [19259:140634121942848] - _session.py[line:153]: delete session 202011200707112994524_reader_0_0_host_9999_storage_32ecaace2aff11ebbbcf3ea3df35c0a6 record
[DEBUG] [2020-11-20 07:08:41,601] [19259:140634121942848] - pool.py[line:185]: Returning 140633840332192 to pool.
[INFO] [2020-11-20 07:08:41,603] [19259:140634121942848] - tracker_client.py[line:127]: Request save job 202011200707112994524 task 202011200707112994524_reader_0 0 on host 9999 data data info
[INFO] [2020-11-20 07:08:41,696] [19259:140634121942848] - tracker_client.py[line:103]: Request save job 202011200707112994524 task 202011200707112994524_reader_0 0 on host 9999 metric reader_namespace reader_name meta
[INFO] [2020-11-20 07:08:41,818] [19259:140634121942848] - profile.py[line:249]: 
Computing:
+----------+------------------------------------------+
| function |                                          |
+----------+------------------------------------------+
|  total   | n=0, sum=0.0000, mean=0.0000, max=0.0000 |
+----------+------------------------------------------+

Federation:
+--------+------------------------------------------+
|  get   |                                          |
+--------+------------------------------------------+
| remote |                                          |
+--------+------------------------------------------+
| total  | n=0, sum=0.0000, mean=0.0000, max=0.0000 |
+--------+------------------------------------------+

[DEBUG] [2020-11-20 07:08:41,822] [19259:140634121942848] - profile.py[line:250]: 
Detailed Computing:
+-------+------------------------------------------+
| stack |                                          |
+-------+------------------------------------------+
| total | n=0, sum=0.0000, mean=0.0000, max=0.0000 |
+-------+------------------------------------------+

[INFO] [2020-11-20 07:08:41,824] [19259:140634121942848] - task_executor.py[line:302]: report task 202011200707112994524_reader_0 0 host 9999 to driver
[INFO] [2020-11-20 07:08:41,825] [19259:140634121942848] - control_client.py[line:42]: request update job 202011200707112994524 task 202011200707112994524_reader_0 0 on host 9999
[INFO] [2020-11-20 07:08:43,101] [19259:140634121942848] - task_executor.py[line:207]: task 202011200707112994524_reader_0 host 9999 start time: 2020-11-20 07:08:18
[INFO] [2020-11-20 07:08:43,104] [19259:140634121942848] - task_executor.py[line:209]: task 202011200707112994524_reader_0 host 9999 end time: 2020-11-20 07:08:41
[INFO] [2020-11-20 07:08:43,106] [19259:140634121942848] - task_executor.py[line:211]: task 202011200707112994524_reader_0 host 9999 takes 23.285s
[INFO] [2020-11-20 07:08:43,107] [19259:140634121942848] - task_executor.py[line:214]: Finish 202011200707112994524 reader_0 202011200707112994524_reader_0 0 host 9999 task success
[INFO] [2020-11-20 07:08:43,109] [19259:140634121942848] - task_executor.py[line:302]: report task 202011200707112994524_reader_0 0 host 9999 to driver
[INFO] [2020-11-20 07:08:43,110] [19259:140634121942848] - control_client.py[line:42]: request update job 202011200707112994524 task 202011200707112994524_reader_0 0 on host 9999
[INFO] [2020-11-20 07:09:09,169] [19507:140606740244288] - task_executor.py[line:302]: report task 202011200707112994524_dataio_0 0 host 9999 to driver
[INFO] [2020-11-20 07:09:09,172] [19507:140606740244288] - control_client.py[line:42]: request update job 202011200707112994524 task 202011200707112994524_dataio_0 0 on host 9999
[DEBUG] [2020-11-20 07:09:22,392] [19507:140606740244288] - _federation.py[line:35]: [federation.eggroll]init federation: rp_session_id=202011200707112994524_dataio_0_0_host_9999, rs_session_id=202011200707112994524_dataio_0_0, party=Party(role=host, party_id=9999), proxy_endpoint=rollsite:9370
[DEBUG] [2020-11-20 07:09:22,395] [19507:140606740244288] - _federation.py[line:45]: [federation.eggroll]init federation context done
[INFO] [2020-11-20 07:09:22,396] [19507:140606740244288] - task_executor.py[line:156]: Run 202011200707112994524 dataio_0 202011200707112994524_dataio_0 host 9999 task
[INFO] [2020-11-20 07:09:22,398] [19507:140606740244288] - task_executor.py[line:157]: Component parameters on party {'DataIOParam': {'input_format': 'dense', 'delimitor': ',', 'data_type': 'float64', 'exclusive_data_type': None, 'tag_with_value': False, 'tag_value_delimitor': ':', 'missing_fill': False, 'default_value': 0, 'missing_fill_method': None, 'missing_impute': None, 'outlier_replace': False, 'outlier_replace_method': None, 'outlier_impute': None, 'outlier_replace_value': 0, 'with_label': False, 'label_name': 'y', 'label_type': 'int', 'output_format': 'dense', 'need_run': True}, 'dsl_version': 2, 'initiator': {'role': 'guest', 'party_id': 10000}, 'role': {'host': [9999], 'guest': [10000]}, 'job_parameters': {'job_type': 'train', 'work_mode': 1, 'backend': 0, 'computing_engine': 'EGGROLL', 'federation_engine': 'EGGROLL', 'storage_engine': 'EGGROLL', 'engines_address': {'computing': {'cores_per_node': 20, 'nodes': 1}, 'federation': {'host': 'rollsite', 'port': 9370}, 'storage': {'cores_per_node': 20, 'nodes': 1}}, 'federated_mode': 'MULTIPLE', 'task_parallelism': 1, 'computing_partitions': 4, 'federated_status_collect_type': 'PUSH', 'model_id': 'guest-10000#host-9999#model', 'model_version': '202011200707112994524', 'eggroll_run': {'eggroll.session.processors.per.node': 4}, 'spark_run': {}, 'rabbitmq_run': {}, 'adaptation_parameters': {'task_nodes': 1, 'task_cores_per_node': 4, 'task_memory_per_node': 0}}, 'component_parameters': {'common': {'hetero_secure_boost_0': {'task_type': 'classification', 'objective_param': {'objective': 'cross_entropy'}, 'num_trees': 3, 'validation_freqs': 1, 'encrypt_param': {'method': 'iterativeAffine'}, 'tree_param': {'max_depth': 3}}, 'evaluation_0': {'eval_type': 'binary'}}, 'role': {'guest': {'0': {'reader_1': {'table': {'name': 'breast_hetero_guest', 'namespace': 'experiment'}}, 'reader_0': {'table': {'name': 'breast_hetero_guest', 'namespace': 'experiment'}}, 'dataio_0': {'with_label': True, 'output_format': 'dense'}, 'dataio_1': {'with_label': True, 'output_format': 'dense'}}}, 'host': {'0': {'reader_1': {'table': {'name': 'breast_hetero_host', 'namespace': 'experiment'}}, 'reader_0': {'table': {'name': 'breast_hetero_host', 'namespace': 'experiment'}}, 'dataio_0': {'with_label': False}, 'dataio_1': {'with_label': False}}}}}, 'config': '/data/projects/fate/python/fate_flow/examples/hetero_secureboost_conf.json', 'dsl': 'examples/hetero_secureboost_dsl.json', 'function': 'submit_job', 'local': {'role': 'host', 'party_id': 9999}, 'CodePath': 'federatedml/util/data_io.py/DataIO', 'module': 'DataIO', 'output_data_name': ['data']}
[INFO] [2020-11-20 07:09:22,400] [19507:140606740244288] - task_executor.py[line:158]: Task input dsl {'data': {'data': ['reader_0.data']}}
[INFO] [2020-11-20 07:09:22,402] [19507:140606740244288] - tracker_client.py[line:150]: Request read job 202011200707112994524 task None None on host 9999 data data info
[DEBUG] [2020-11-20 07:09:22,475] [19507:140606740244288] - pool.py[line:129]: No connection available in pool.
[DEBUG] [2020-11-20 07:09:22,528] [19507:140606740244288] - pool.py[line:158]: Created new connection 140606424886016.
[DEBUG] [2020-11-20 07:09:22,546] [19507:140606740244288] - peewee.py[line:2863]: ('SELECT `t1`.`f_create_date`, `t1`.`f_update_date`, `t1`.`f_name`, `t1`.`f_namespace`, `t1`.`f_address`, `t1`.`f_engine`, `t1`.`f_type`, `t1`.`f_options`, `t1`.`f_partitions`, `t1`.`f_id_delimiter`, `t1`.`f_in_serialized`, `t1`.`f_have_head`, `t1`.`f_schema`, `t1`.`f_count`, `t1`.`f_part_of_data`, `t1`.`f_description`, `t1`.`f_create_time`, `t1`.`f_update_time` FROM `t_storage_table_meta` AS `t1` WHERE ((`t1`.`f_name` = %s) AND (`t1`.`f_namespace` = %s))', ['breast_hetero_host', 'experiment'])
[DEBUG] [2020-11-20 07:09:22,561] [19507:140606740244288] - pool.py[line:185]: Returning 140606424886016 to pool.
[INFO] [2020-11-20 07:09:22,563] [19507:140606740244288] - task_executor.py[line:260]: load computing table use 4
[DEBUG] [2020-11-20 07:09:29,225] [19507:140606740244288] - component_properties.py[line:73]: {'DataIOParam': {'input_format': 'dense', 'delimitor': ',', 'data_type': 'float64', 'exclusive_data_type': None, 'tag_with_value': False, 'tag_value_delimitor': ':', 'missing_fill': False, 'default_value': 0, 'missing_fill_method': None, 'missing_impute': None, 'outlier_replace': False, 'outlier_replace_method': None, 'outlier_impute': None, 'outlier_replace_value': 0, 'with_label': False, 'label_name': 'y', 'label_type': 'int', 'output_format': 'dense', 'need_run': True}, 'dsl_version': 2, 'initiator': {'role': 'guest', 'party_id': 10000}, 'role': {'host': [9999], 'guest': [10000]}, 'job_parameters': {'job_type': 'train', 'work_mode': 1, 'backend': 0, 'computing_engine': 'EGGROLL', 'federation_engine': 'EGGROLL', 'storage_engine': 'EGGROLL', 'engines_address': {'computing': {'cores_per_node': 20, 'nodes': 1}, 'federation': {'host': 'rollsite', 'port': 9370}, 'storage': {'cores_per_node': 20, 'nodes': 1}}, 'federated_mode': 'MULTIPLE', 'task_parallelism': 1, 'computing_partitions': 4, 'federated_status_collect_type': 'PUSH', 'model_id': 'guest-10000#host-9999#model', 'model_version': '202011200707112994524', 'eggroll_run': {'eggroll.session.processors.per.node': 4}, 'spark_run': {}, 'rabbitmq_run': {}, 'adaptation_parameters': {'task_nodes': 1, 'task_cores_per_node': 4, 'task_memory_per_node': 0}}, 'component_parameters': {'common': {'hetero_secure_boost_0': {'task_type': 'classification', 'objective_param': {'objective': 'cross_entropy'}, 'num_trees': 3, 'validation_freqs': 1, 'encrypt_param': {'method': 'iterativeAffine'}, 'tree_param': {'max_depth': 3}}, 'evaluation_0': {'eval_type': 'binary'}}, 'role': {'guest': {'0': {'reader_1': {'table': {'name': 'breast_hetero_guest', 'namespace': 'experiment'}}, 'reader_0': {'table': {'name': 'breast_hetero_guest', 'namespace': 'experiment'}}, 'dataio_0': {'with_label': True, 'output_format': 'dense'}, 'dataio_1': {'with_label': True, 'output_format': 'dense'}}}, 'host': {'0': {'reader_1': {'table': {'name': 'breast_hetero_host', 'namespace': 'experiment'}}, 'reader_0': {'table': {'name': 'breast_hetero_host', 'namespace': 'experiment'}}, 'dataio_0': {'with_label': False}, 'dataio_1': {'with_label': False}}}}}, 'config': '/data/projects/fate/python/fate_flow/examples/hetero_secureboost_conf.json', 'dsl': 'examples/hetero_secureboost_dsl.json', 'function': 'submit_job', 'local': {'role': 'host', 'party_id': 9999}, 'CodePath': 'federatedml/util/data_io.py/DataIO', 'module': 'DataIO', 'output_data_name': ['data']}
[DEBUG] [2020-11-20 07:09:29,229] [19507:140606740244288] - component_properties.py[line:80]: need_run: True, need_cv: False
[DEBUG] [2020-11-20 07:09:29,230] [19507:140606740244288] - component_properties.py[line:102]: parse_dsl_args data_sets: {'reader_0': {'data': [<fate_arch.computing.eggroll._table.Table object at 0x7fe175366e10>]}}
[DEBUG] [2020-11-20 07:09:29,231] [19507:140606740244288] - component_properties.py[line:112]: [Data Parser], has_train_data: False
[DEBUG] [2020-11-20 07:09:29,232] [19507:140606740244288] - component_properties.py[line:112]: [Data Parser], has_eval_data: False
[DEBUG] [2020-11-20 07:09:29,233] [19507:140606740244288] - component_properties.py[line:112]: [Data Parser], has_validate_data: False
[DEBUG] [2020-11-20 07:09:29,234] [19507:140606740244288] - component_properties.py[line:112]: [Data Parser], has_test_data: False
[DEBUG] [2020-11-20 07:09:29,235] [19507:140606740244288] - component_properties.py[line:118]: [Data Parser], has_normal_data: True
[DEBUG] [2020-11-20 07:09:29,237] [19507:140606740244288] - component_properties.py[line:179]: Input data_sets: {'reader_0': {'data': [<fate_arch.computing.eggroll._table.Table object at 0x7fe175366e10>]}}
[DEBUG] [2020-11-20 07:09:29,238] [19507:140606740244288] - component_properties.py[line:189]: data_dict: {'data': [<fate_arch.computing.eggroll._table.Table object at 0x7fe175366e10>]}
[DEBUG] [2020-11-20 07:09:29,238] [19507:140606740244288] - component_properties.py[line:192]: data_list: <fate_arch.computing.eggroll._table.Table object at 0x7fe175366e10>
[DEBUG] [2020-11-20 07:09:29,265] [19507:140606740244288] - profile.py[line:84]: [computing#41d092c3c4]function_stack: [component_properties.py:225]extract_input_data <-[component_properties.py:238]extract_running_rules <-[model_base.py:87]run
[DEBUG] [2020-11-20 07:09:29,267] [19507:140606740244288] - profile.py[line:87]: [computing#41d092c3c4]start
[DEBUG] [2020-11-20 07:09:29,743] [19507:140606740244288] - profile.py[line:93]: [computing#41d092c3c4]done, elapse: 0.47873711585998535, function: count(self: Table(partition=4)) -> int
[DEBUG] [2020-11-20 07:09:29,745] [19507:140606740244288] - component_properties.py[line:231]: train_data: None, validate_data: None, test_data: None, data: {'reader_0.data': <fate_arch.computing.eggroll._table.Table object at 0x7fe175366e10>}
[DEBUG] [2020-11-20 07:09:29,745] [19507:140606740244288] - model_base.py[line:88]: running_funcs: [<function ModelBase.extract_data at 0x7fe1753479d8>, <bound method ModelBase.set_flowid of <federatedml.util.data_io.DataIO object at 0x7fe17c0724a8>>, <bound method DataIO.fit of <federatedml.util.data_io.DataIO object at 0x7fe17c0724a8>>]
[DEBUG] [2020-11-20 07:09:29,746] [19507:140606740244288] - model_base.py[line:340]: In extract_data, data input: {'reader_0.data': <fate_arch.computing.eggroll._table.Table object at 0x7fe175366e10>}
[DEBUG] [2020-11-20 07:09:29,747] [19507:140606740244288] - model_base.py[line:97]: func: <bound method DataIO.fit of <federatedml.util.data_io.DataIO object at 0x7fe17c0724a8>>
[INFO] [2020-11-20 07:09:29,747] [19507:140606740244288] - data_io.py[line:118]: start to read dense data and change data to instance
[DEBUG] [2020-11-20 07:09:29,752] [19507:140606740244288] - profile.py[line:84]: [computing#4a2ab9dfb5]function_stack: [abnormal_detection.py:27]empty_table_detection <-[data_io.py:120]read_data <-[data_io.py:885]fit <-[model_base.py:98]run
[DEBUG] [2020-11-20 07:09:29,753] [19507:140606740244288] - profile.py[line:87]: [computing#4a2ab9dfb5]start
[DEBUG] [2020-11-20 07:09:29,807] [19507:140606740244288] - profile.py[line:93]: [computing#4a2ab9dfb5]done, elapse: 0.0544891357421875, function: count(self: Table(partition=4)) -> int
[DEBUG] [2020-11-20 07:09:29,809] [19507:140606740244288] - data_io.py[line:75]: header is x0,x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12,x13,x14,x15,x16,x17,x18,x19
[DEBUG] [2020-11-20 07:09:29,809] [19507:140606740244288] - data_io.py[line:76]: sid_name is id
[DEBUG] [2020-11-20 07:09:29,813] [19507:140606740244288] - profile.py[line:84]: [computing#1a421ecb8d]function_stack: [data_io.py:143]read_data <-[data_io.py:885]fit <-[model_base.py:98]run
[DEBUG] [2020-11-20 07:09:29,814] [19507:140606740244288] - profile.py[line:87]: [computing#1a421ecb8d]start
[DEBUG] [2020-11-20 07:09:31,347] [19507:140606740244288] - profile.py[line:93]: [computing#1a421ecb8d]done, elapse: 1.5337696075439453, function: mapValues(self: Table(partition=4), func: function) -> Table(partition=4)
[DEBUG] [2020-11-20 07:09:31,348] [19507:140606740244288] - abnormal_detection.py[line:81]: schema is {'header': ['x0', 'x1', 'x2', 'x3', 'x4', 'x5', 'x6', 'x7', 'x8', 'x9', 'x10', 'x11', 'x12', 'x13', 'x14', 'x15', 'x16', 'x17', 'x18', 'x19'], 'sid_name': 'id', 'label_name': 'y'}
[DEBUG] [2020-11-20 07:09:31,350] [19507:140606740244288] - abnormal_detection.py[line:85]: header is ['x0', 'x1', 'x2', 'x3', 'x4', 'x5', 'x6', 'x7', 'x8', 'x9', 'x10', 'x11', 'x12', 'x13', 'x14', 'x15', 'x16', 'x17', 'x18', 'x19']
[DEBUG] [2020-11-20 07:09:31,352] [19507:140606740244288] - abnormal_detection.py[line:95]: sid_name is id
[DEBUG] [2020-11-20 07:09:31,352] [19507:140606740244288] - abnormal_detection.py[line:100]: label_name is y
[DEBUG] [2020-11-20 07:09:31,356] [19507:140606740244288] - profile.py[line:84]: [computing#3d890bd53f]function_stack: [data_io.py:227]gen_data_instance <-[data_io.py:161]fit <-[data_io.py:146]read_data <-[data_io.py:885]fit <-[model_base.py:98]run
[DEBUG] [2020-11-20 07:09:31,357] [19507:140606740244288] - profile.py[line:87]: [computing#3d890bd53f]start
[DEBUG] [2020-11-20 07:09:31,898] [19507:140606740244288] - profile.py[line:93]: [computing#3d890bd53f]done, elapse: 0.5417017936706543, function: mapValues(self: Table(partition=4), func: function) -> Table(partition=4)
[DEBUG] [2020-11-20 07:09:31,899] [19507:140606740244288] - model_base.py[line:109]: saved_result is : [<fate_arch.computing.eggroll._table.Table object at 0x7fe17532a240>], data_output: <fate_arch.computing.eggroll._table.Table object at 0x7fe17532a240>
[INFO] [2020-11-20 07:09:31,900] [19507:140606740244288] - tracker_client.py[line:173]: Request save job 202011200707112994524 task 202011200707112994524_dataio_0 0 on host 9999 component summary
[INFO] [2020-11-20 07:09:32,588] [19507:140606740244288] - profile.py[line:249]: 
Computing:
+----------+---------------------------------------------+
| function |  function    n   sum(s)   mean(s)   max(s)  |
|          | ----------- --- -------- --------- -------- |
|          |    load      1    6.63     6.63      6.63   |
|          |  mapValues   2   2.075     1.038    1.534   |
|          |    count     2   0.533     0.267    0.479   |
+----------+---------------------------------------------+
|  total   |  n=5, sum=9.2391, mean=1.8478, max=6.6304   |
+----------+---------------------------------------------+

Federation:
+--------+------------------------------------------+
|  get   |                                          |
+--------+------------------------------------------+
| remote |                                          |
+--------+------------------------------------------+
| total  | n=0, sum=0.0000, mean=0.0000, max=0.0000 |
+--------+------------------------------------------+

[DEBUG] [2020-11-20 07:09:33,413] [19507:140606740244288] - peewee.py[line:2863]: ('INSERT INTO `t_storage_table_meta` (`f_create_date`, `f_update_date`, `f_name`, `f_namespace`, `f_address`, `f_engine`, `f_type`, `f_options`, `f_partitions`, `f_in_serialized`, `f_have_head`, `f_schema`, `f_count`, `f_part_of_data`, `f_description`, `f_create_time`, `f_update_time`) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)', [datetime.datetime(2020, 11, 20, 7, 9, 33), datetime.datetime(2020, 11, 20, 7, 9, 33), '56c960f42aff11ebaabe3ea3df35c0a6', 'output_data_202011200707112994524_dataio_0_0', '{"host": null, "port": null, "name": "56c960f42aff11ebaabe3ea3df35c0a6", "namespace": "output_data_202011200707112994524_dataio_0_0", "storage_type": "LMDB", "home": null}', 'EGGROLL', 'LMDB', '{}', 4, True, True, 'gAN9cQAoWAYAAABoZWFkZXJxAV1xAihYAgAAAHgwcQNYAgAAAHgxcQRYAgAAAHgycQVYAgAAAHgzcQZYAgAAAHg0cQdYAgAAAHg1cQhYAgAAAHg2cQlYAgAAAHg3cQpYAgAAAHg4cQtYAgAAAHg5cQxYAwAAAHgxMHENWAMAAAB4MTFxDlgDAAAAeDEycQ9YAwAAAHgxM3EQWAMAAAB4MTRxEVgDAAAAeDE1cRJYAwAAAHgxNnETWAMAAAB4MTdxFFgDAAAAeDE4cRVYAwAAAHgxOXEWZVgIAAAAc2lkX25hbWVxF1gCAAAAaWRxGFgKAAAAbGFiZWxfbmFtZXEZWAEAAAB5cRp1Lg==', 569, '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', '', 1605856173372, 1605856173373])
[DEBUG] [2020-11-20 07:09:33,466] [19507:140606740244288] - pool.py[line:185]: Returning 140606424886016 to pool.
[DEBUG] [2020-11-20 07:09:33,467] [19507:140606740244288] - pool.py[line:129]: No connection available in pool.
[DEBUG] [2020-11-20 07:09:33,491] [19507:140606740244288] - pool.py[line:158]: Created new connection 140606424983984.
[DEBUG] [2020-11-20 07:09:33,494] [19507:140606740244288] - peewee.py[line:2863]: ('SELECT table_name FROM information_schema.tables WHERE table_schema = DATABASE() AND table_type != %s ORDER BY table_name', ('VIEW',))
[DEBUG] [2020-11-20 07:09:33,510] [19507:140606740244288] - peewee.py[line:2863]: ('INSERT INTO `t_tracking_output_data_info_20201120` (`f_create_time`, `f_job_id`, `f_component_name`, `f_task_id`, `f_task_version`, `f_data_name`, `f_role`, `f_party_id`, `f_table_name`, `f_table_namespace`, `f_description`) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)', [1605856173493, '202011200707112994524', 'dataio_0', '202011200707112994524_dataio_0', 0, 'data', 'host', '9999', '56c960f42aff11ebaabe3ea3df35c0a6', 'output_data_202011200707112994524_dataio_0_0', ''])
[DEBUG] [2020-11-20 07:09:33,523] [19507:140606740244288] - pool.py[line:185]: Returning 140606424983984 to pool.
[INFO] [2020-11-20 07:09:33,529] [19507:140606740244288] - pipelined_model.py[line:73]: Save dataio_0 model DataIOMeta buffer
[INFO] [2020-11-20 07:09:33,532] [19507:140606740244288] - pipelined_model.py[line:73]: Save dataio_0 model DataIOParam buffer
[INFO] [2020-11-20 07:09:33,553] [19507:140606740244288] - pipelined_model.py[line:78]: Save dataio_0 model successfully
[INFO] [2020-11-20 07:09:33,555] [19507:140606740244288] - task_executor.py[line:302]: report task 202011200707112994524_dataio_0 0 host 9999 to driver
[INFO] [2020-11-20 07:09:33,557] [19507:140606740244288] - control_client.py[line:42]: request update job 202011200707112994524 task 202011200707112994524_dataio_0 0 on host 9999
[INFO] [2020-11-20 07:09:34,679] [19507:140606740244288] - task_executor.py[line:207]: task 202011200707112994524_dataio_0 host 9999 start time: 2020-11-20 07:09:08
[INFO] [2020-11-20 07:09:34,680] [19507:140606740244288] - task_executor.py[line:209]: task 202011200707112994524_dataio_0 host 9999 end time: 2020-11-20 07:09:33
[INFO] [2020-11-20 07:09:34,682] [19507:140606740244288] - task_executor.py[line:211]: task 202011200707112994524_dataio_0 host 9999 takes 24.805s
[INFO] [2020-11-20 07:09:34,684] [19507:140606740244288] - task_executor.py[line:214]: Finish 202011200707112994524 dataio_0 202011200707112994524_dataio_0 0 host 9999 task success
[INFO] [2020-11-20 07:09:34,686] [19507:140606740244288] - task_executor.py[line:302]: report task 202011200707112994524_dataio_0 0 host 9999 to driver
[INFO] [2020-11-20 07:09:34,688] [19507:140606740244288] - control_client.py[line:42]: request update job 202011200707112994524 task 202011200707112994524_dataio_0 0 on host 9999
[INFO] [2020-11-20 07:10:00,852] [19734:140323371067200] - task_executor.py[line:302]: report task 202011200707112994524_dataio_1 0 host 9999 to driver
[INFO] [2020-11-20 07:10:00,856] [19734:140323371067200] - control_client.py[line:42]: request update job 202011200707112994524 task 202011200707112994524_dataio_1 0 on host 9999
[DEBUG] [2020-11-20 07:10:12,855] [19734:140323371067200] - _federation.py[line:35]: [federation.eggroll]init federation: rp_session_id=202011200707112994524_dataio_1_0_host_9999, rs_session_id=202011200707112994524_dataio_1_0, party=Party(role=host, party_id=9999), proxy_endpoint=rollsite:9370
[DEBUG] [2020-11-20 07:10:12,858] [19734:140323371067200] - _federation.py[line:45]: [federation.eggroll]init federation context done
[INFO] [2020-11-20 07:10:12,859] [19734:140323371067200] - task_executor.py[line:156]: Run 202011200707112994524 dataio_1 202011200707112994524_dataio_1 host 9999 task
[INFO] [2020-11-20 07:10:12,860] [19734:140323371067200] - task_executor.py[line:157]: Component parameters on party {'DataIOParam': {'input_format': 'dense', 'delimitor': ',', 'data_type': 'float64', 'exclusive_data_type': None, 'tag_with_value': False, 'tag_value_delimitor': ':', 'missing_fill': False, 'default_value': 0, 'missing_fill_method': None, 'missing_impute': None, 'outlier_replace': False, 'outlier_replace_method': None, 'outlier_impute': None, 'outlier_replace_value': 0, 'with_label': False, 'label_name': 'y', 'label_type': 'int', 'output_format': 'dense', 'need_run': True}, 'dsl_version': 2, 'initiator': {'role': 'guest', 'party_id': 10000}, 'role': {'host': [9999], 'guest': [10000]}, 'job_parameters': {'job_type': 'train', 'work_mode': 1, 'backend': 0, 'computing_engine': 'EGGROLL', 'federation_engine': 'EGGROLL', 'storage_engine': 'EGGROLL', 'engines_address': {'computing': {'cores_per_node': 20, 'nodes': 1}, 'federation': {'host': 'rollsite', 'port': 9370}, 'storage': {'cores_per_node': 20, 'nodes': 1}}, 'federated_mode': 'MULTIPLE', 'task_parallelism': 1, 'computing_partitions': 4, 'federated_status_collect_type': 'PUSH', 'model_id': 'guest-10000#host-9999#model', 'model_version': '202011200707112994524', 'eggroll_run': {'eggroll.session.processors.per.node': 4}, 'spark_run': {}, 'rabbitmq_run': {}, 'adaptation_parameters': {'task_nodes': 1, 'task_cores_per_node': 4, 'task_memory_per_node': 0}}, 'component_parameters': {'common': {'hetero_secure_boost_0': {'task_type': 'classification', 'objective_param': {'objective': 'cross_entropy'}, 'num_trees': 3, 'validation_freqs': 1, 'encrypt_param': {'method': 'iterativeAffine'}, 'tree_param': {'max_depth': 3}}, 'evaluation_0': {'eval_type': 'binary'}}, 'role': {'guest': {'0': {'reader_1': {'table': {'name': 'breast_hetero_guest', 'namespace': 'experiment'}}, 'reader_0': {'table': {'name': 'breast_hetero_guest', 'namespace': 'experiment'}}, 'dataio_0': {'with_label': True, 'output_format': 'dense'}, 'dataio_1': {'with_label': True, 'output_format': 'dense'}}}, 'host': {'0': {'reader_1': {'table': {'name': 'breast_hetero_host', 'namespace': 'experiment'}}, 'reader_0': {'table': {'name': 'breast_hetero_host', 'namespace': 'experiment'}}, 'dataio_0': {'with_label': False}, 'dataio_1': {'with_label': False}}}}}, 'config': '/data/projects/fate/python/fate_flow/examples/hetero_secureboost_conf.json', 'dsl': 'examples/hetero_secureboost_dsl.json', 'function': 'submit_job', 'local': {'role': 'host', 'party_id': 9999}, 'CodePath': 'federatedml/util/data_io.py/DataIO', 'module': 'DataIO', 'output_data_name': ['data']}
[INFO] [2020-11-20 07:10:12,862] [19734:140323371067200] - task_executor.py[line:158]: Task input dsl {'data': {'data': ['reader_1.data']}, 'model': ['dataio_0.model']}
[INFO] [2020-11-20 07:10:12,863] [19734:140323371067200] - tracker_client.py[line:150]: Request read job 202011200707112994524 task None None on host 9999 data data info
[DEBUG] [2020-11-20 07:10:12,931] [19734:140323371067200] - pool.py[line:129]: No connection available in pool.
[DEBUG] [2020-11-20 07:10:12,956] [19734:140323371067200] - pool.py[line:158]: Created new connection 140323156724480.
[DEBUG] [2020-11-20 07:10:12,973] [19734:140323371067200] - peewee.py[line:2863]: ('SELECT `t1`.`f_create_date`, `t1`.`f_update_date`, `t1`.`f_name`, `t1`.`f_namespace`, `t1`.`f_address`, `t1`.`f_engine`, `t1`.`f_type`, `t1`.`f_options`, `t1`.`f_partitions`, `t1`.`f_id_delimiter`, `t1`.`f_in_serialized`, `t1`.`f_have_head`, `t1`.`f_schema`, `t1`.`f_count`, `t1`.`f_part_of_data`, `t1`.`f_description`, `t1`.`f_create_time`, `t1`.`f_update_time` FROM `t_storage_table_meta` AS `t1` WHERE ((`t1`.`f_name` = %s) AND (`t1`.`f_namespace` = %s))', ['breast_hetero_host', 'experiment'])
[DEBUG] [2020-11-20 07:10:12,985] [19734:140323371067200] - pool.py[line:185]: Returning 140323156724480 to pool.
[INFO] [2020-11-20 07:10:12,986] [19734:140323371067200] - task_executor.py[line:260]: load computing table use 4
[INFO] [2020-11-20 07:10:19,487] [19734:140323371067200] - pipelined_model.py[line:185]: parse DataIOMeta proto object normal
[INFO] [2020-11-20 07:10:19,493] [19734:140323371067200] - pipelined_model.py[line:185]: parse DataIOParam proto object normal
[DEBUG] [2020-11-20 07:10:19,509] [19734:140323371067200] - component_properties.py[line:73]: {'DataIOParam': {'input_format': 'dense', 'delimitor': ',', 'data_type': 'float64', 'exclusive_data_type': None, 'tag_with_value': False, 'tag_value_delimitor': ':', 'missing_fill': False, 'default_value': 0, 'missing_fill_method': None, 'missing_impute': None, 'outlier_replace': False, 'outlier_replace_method': None, 'outlier_impute': None, 'outlier_replace_value': 0, 'with_label': False, 'label_name': 'y', 'label_type': 'int', 'output_format': 'dense', 'need_run': True}, 'dsl_version': 2, 'initiator': {'role': 'guest', 'party_id': 10000}, 'role': {'host': [9999], 'guest': [10000]}, 'job_parameters': {'job_type': 'train', 'work_mode': 1, 'backend': 0, 'computing_engine': 'EGGROLL', 'federation_engine': 'EGGROLL', 'storage_engine': 'EGGROLL', 'engines_address': {'computing': {'cores_per_node': 20, 'nodes': 1}, 'federation': {'host': 'rollsite', 'port': 9370}, 'storage': {'cores_per_node': 20, 'nodes': 1}}, 'federated_mode': 'MULTIPLE', 'task_parallelism': 1, 'computing_partitions': 4, 'federated_status_collect_type': 'PUSH', 'model_id': 'guest-10000#host-9999#model', 'model_version': '202011200707112994524', 'eggroll_run': {'eggroll.session.processors.per.node': 4}, 'spark_run': {}, 'rabbitmq_run': {}, 'adaptation_parameters': {'task_nodes': 1, 'task_cores_per_node': 4, 'task_memory_per_node': 0}}, 'component_parameters': {'common': {'hetero_secure_boost_0': {'task_type': 'classification', 'objective_param': {'objective': 'cross_entropy'}, 'num_trees': 3, 'validation_freqs': 1, 'encrypt_param': {'method': 'iterativeAffine'}, 'tree_param': {'max_depth': 3}}, 'evaluation_0': {'eval_type': 'binary'}}, 'role': {'guest': {'0': {'reader_1': {'table': {'name': 'breast_hetero_guest', 'namespace': 'experiment'}}, 'reader_0': {'table': {'name': 'breast_hetero_guest', 'namespace': 'experiment'}}, 'dataio_0': {'with_label': True, 'output_format': 'dense'}, 'dataio_1': {'with_label': True, 'output_format': 'dense'}}}, 'host': {'0': {'reader_1': {'table': {'name': 'breast_hetero_host', 'namespace': 'experiment'}}, 'reader_0': {'table': {'name': 'breast_hetero_host', 'namespace': 'experiment'}}, 'dataio_0': {'with_label': False}, 'dataio_1': {'with_label': False}}}}}, 'config': '/data/projects/fate/python/fate_flow/examples/hetero_secureboost_conf.json', 'dsl': 'examples/hetero_secureboost_dsl.json', 'function': 'submit_job', 'local': {'role': 'host', 'party_id': 9999}, 'CodePath': 'federatedml/util/data_io.py/DataIO', 'module': 'DataIO', 'output_data_name': ['data']}
[DEBUG] [2020-11-20 07:10:19,511] [19734:140323371067200] - component_properties.py[line:80]: need_run: True, need_cv: False
[DEBUG] [2020-11-20 07:10:19,512] [19734:140323371067200] - component_properties.py[line:102]: parse_dsl_args data_sets: {'reader_1': {'data': [<fate_arch.computing.eggroll._table.Table object at 0x7f9f829cfe10>]}}
[DEBUG] [2020-11-20 07:10:19,512] [19734:140323371067200] - component_properties.py[line:112]: [Data Parser], has_train_data: False
[DEBUG] [2020-11-20 07:10:19,512] [19734:140323371067200] - component_properties.py[line:112]: [Data Parser], has_eval_data: False
[DEBUG] [2020-11-20 07:10:19,513] [19734:140323371067200] - component_properties.py[line:112]: [Data Parser], has_validate_data: False
[DEBUG] [2020-11-20 07:10:19,513] [19734:140323371067200] - component_properties.py[line:112]: [Data Parser], has_test_data: False
[DEBUG] [2020-11-20 07:10:19,513] [19734:140323371067200] - component_properties.py[line:118]: [Data Parser], has_normal_data: True
[DEBUG] [2020-11-20 07:10:19,514] [19734:140323371067200] - component_properties.py[line:179]: Input data_sets: {'reader_1': {'data': [<fate_arch.computing.eggroll._table.Table object at 0x7f9f829cfe10>]}}
[DEBUG] [2020-11-20 07:10:19,514] [19734:140323371067200] - component_properties.py[line:189]: data_dict: {'data': [<fate_arch.computing.eggroll._table.Table object at 0x7f9f829cfe10>]}
[DEBUG] [2020-11-20 07:10:19,514] [19734:140323371067200] - component_properties.py[line:192]: data_list: <fate_arch.computing.eggroll._table.Table object at 0x7f9f829cfe10>
[DEBUG] [2020-11-20 07:10:19,535] [19734:140323371067200] - profile.py[line:84]: [computing#41d092c3c4]function_stack: [component_properties.py:225]extract_input_data <-[component_properties.py:238]extract_running_rules <-[model_base.py:87]run
[DEBUG] [2020-11-20 07:10:19,537] [19734:140323371067200] - profile.py[line:87]: [computing#41d092c3c4]start
[DEBUG] [2020-11-20 07:10:19,590] [19734:140323371067200] - profile.py[line:93]: [computing#41d092c3c4]done, elapse: 0.05493354797363281, function: count(self: Table(partition=4)) -> int
[DEBUG] [2020-11-20 07:10:19,592] [19734:140323371067200] - component_properties.py[line:231]: train_data: None, validate_data: None, test_data: None, data: {'reader_1.data': <fate_arch.computing.eggroll._table.Table object at 0x7f9f829cfe10>}
[DEBUG] [2020-11-20 07:10:19,593] [19734:140323371067200] - model_base.py[line:88]: running_funcs: [<bound method DataIO.load_model of <federatedml.util.data_io.DataIO object at 0x7f9f87ee04a8>>, <function ModelBase.extract_data at 0x7f9f829a5f28>, <bound method ModelBase.set_flowid of <federatedml.util.data_io.DataIO object at 0x7f9f87ee04a8>>, <bound method DataIO.transform of <federatedml.util.data_io.DataIO object at 0x7f9f87ee04a8>>]
[DEBUG] [2020-11-20 07:10:19,595] [19734:140323371067200] - model_base.py[line:340]: In extract_data, data input: {'reader_1.data': <fate_arch.computing.eggroll._table.Table object at 0x7f9f829cfe10>}
[DEBUG] [2020-11-20 07:10:19,596] [19734:140323371067200] - model_base.py[line:97]: func: <bound method DataIO.transform of <federatedml.util.data_io.DataIO object at 0x7f9f87ee04a8>>
[INFO] [2020-11-20 07:10:19,597] [19734:140323371067200] - data_io.py[line:118]: start to read dense data and change data to instance
[DEBUG] [2020-11-20 07:10:19,602] [19734:140323371067200] - profile.py[line:84]: [computing#53262296b2]function_stack: [abnormal_detection.py:27]empty_table_detection <-[data_io.py:120]read_data <-[data_io.py:894]transform <-[model_base.py:98]run
[DEBUG] [2020-11-20 07:10:19,603] [19734:140323371067200] - profile.py[line:87]: [computing#53262296b2]start
[DEBUG] [2020-11-20 07:10:19,755] [19734:140323371067200] - profile.py[line:93]: [computing#53262296b2]done, elapse: 0.15248465538024902, function: count(self: Table(partition=4)) -> int
[DEBUG] [2020-11-20 07:10:19,756] [19734:140323371067200] - data_io.py[line:75]: header is x0,x1,x2,x3,x4,x5,x6,x7,x8,x9,x10,x11,x12,x13,x14,x15,x16,x17,x18,x19
[DEBUG] [2020-11-20 07:10:19,757] [19734:140323371067200] - data_io.py[line:76]: sid_name is id
[DEBUG] [2020-11-20 07:10:19,761] [19734:140323371067200] - profile.py[line:84]: [computing#3090ef87ae]function_stack: [data_io.py:143]read_data <-[data_io.py:894]transform <-[model_base.py:98]run
[DEBUG] [2020-11-20 07:10:19,762] [19734:140323371067200] - profile.py[line:87]: [computing#3090ef87ae]start
[DEBUG] [2020-11-20 07:10:21,684] [19734:140323371067200] - profile.py[line:93]: [computing#3090ef87ae]done, elapse: 1.9229648113250732, function: mapValues(self: Table(partition=4), func: function) -> Table(partition=4)
[DEBUG] [2020-11-20 07:10:21,688] [19734:140323371067200] - profile.py[line:84]: [computing#3f295d236d]function_stack: [io_check.py:28]_func <-[data_io.py:148]read_data <-[data_io.py:894]transform <-[model_base.py:98]run
[DEBUG] [2020-11-20 07:10:21,690] [19734:140323371067200] - profile.py[line:87]: [computing#3f295d236d]start
[DEBUG] [2020-11-20 07:10:21,806] [19734:140323371067200] - profile.py[line:93]: [computing#3f295d236d]done, elapse: 0.11794257164001465, function: count(self: Table(partition=4)) -> int
[DEBUG] [2020-11-20 07:10:21,808] [19734:140323371067200] - abnormal_detection.py[line:81]: schema is {'header': ['x0', 'x1', 'x2', 'x3', 'x4', 'x5', 'x6', 'x7', 'x8', 'x9', 'x10', 'x11', 'x12', 'x13', 'x14', 'x15', 'x16', 'x17', 'x18', 'x19'], 'sid_name': 'id', 'label_name': 'y'}
[DEBUG] [2020-11-20 07:10:21,809] [19734:140323371067200] - abnormal_detection.py[line:85]: header is ['x0', 'x1', 'x2', 'x3', 'x4', 'x5', 'x6', 'x7', 'x8', 'x9', 'x10', 'x11', 'x12', 'x13', 'x14', 'x15', 'x16', 'x17', 'x18', 'x19']
[DEBUG] [2020-11-20 07:10:21,810] [19734:140323371067200] - abnormal_detection.py[line:95]: sid_name is id
[DEBUG] [2020-11-20 07:10:21,811] [19734:140323371067200] - abnormal_detection.py[line:100]: label_name is y
[DEBUG] [2020-11-20 07:10:21,815] [19734:140323371067200] - profile.py[line:84]: [computing#96c6e47577]function_stack: [data_io.py:227]gen_data_instance <-[data_io.py:175]transform <-[io_check.py:31]_func <-[data_io.py:148]read_data <-[data_io.py:894]transform <-[model_base.py:98]run
[DEBUG] [2020-11-20 07:10:21,815] [19734:140323371067200] - profile.py[line:87]: [computing#96c6e47577]start
[DEBUG] [2020-11-20 07:10:22,112] [19734:140323371067200] - profile.py[line:93]: [computing#96c6e47577]done, elapse: 0.29729747772216797, function: mapValues(self: Table(partition=4), func: function) -> Table(partition=4)
[DEBUG] [2020-11-20 07:10:22,115] [19734:140323371067200] - profile.py[line:84]: [computing#05ca5110ba]function_stack: [io_check.py:34]_func <-[data_io.py:148]read_data <-[data_io.py:894]transform <-[model_base.py:98]run
[DEBUG] [2020-11-20 07:10:22,116] [19734:140323371067200] - profile.py[line:87]: [computing#05ca5110ba]start
[DEBUG] [2020-11-20 07:10:22,162] [19734:140323371067200] - profile.py[line:93]: [computing#05ca5110ba]done, elapse: 0.04746603965759277, function: count(self: Table(partition=4)) -> int
[DEBUG] [2020-11-20 07:10:22,163] [19734:140323371067200] - io_check.py[line:35]: num row of input: 569 -> num row of output: 569
[DEBUG] [2020-11-20 07:10:22,164] [19734:140323371067200] - model_base.py[line:109]: saved_result is : [<fate_arch.computing.eggroll._table.Table object at 0x7f9f90b3def0>], data_output: <fate_arch.computing.eggroll._table.Table object at 0x7f9f90b3def0>
[INFO] [2020-11-20 07:10:22,165] [19734:140323371067200] - tracker_client.py[line:173]: Request save job 202011200707112994524 task 202011200707112994524_dataio_1 0 on host 9999 component summary
[INFO] [2020-11-20 07:10:22,814] [19734:140323371067200] - profile.py[line:249]: 
Computing:
+----------+---------------------------------------------+
| function |  function    n   sum(s)   mean(s)   max(s)  |
|          | ----------- --- -------- --------- -------- |
|          |    load      1   6.463     6.463    6.463   |
|          |  mapValues   2    2.22     1.11     1.923   |
|          |    count     4   0.373     0.093    0.152   |
+----------+---------------------------------------------+
|  total   |  n=7, sum=9.0565, mean=1.2938, max=6.4634   |
+----------+---------------------------------------------+

Federation:
+--------+------------------------------------------+
|  get   |                                          |
+--------+------------------------------------------+
| remote |                                          |
+--------+------------------------------------------+
| total  | n=0, sum=0.0000, mean=0.0000, max=0.0000 |
+--------+------------------------------------------+

[DEBUG] [2020-11-20 07:10:23,625] [19734:140323371067200] - peewee.py[line:2863]: ('INSERT INTO `t_storage_table_meta` (`f_create_date`, `f_update_date`, `f_name`, `f_namespace`, `f_address`, `f_engine`, `f_type`, `f_options`, `f_partitions`, `f_in_serialized`, `f_have_head`, `f_schema`, `f_count`, `f_part_of_data`, `f_description`, `f_create_time`, `f_update_time`) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)', [datetime.datetime(2020, 11, 20, 7, 10, 23), datetime.datetime(2020, 11, 20, 7, 10, 23), '74b9bfd22aff11eb8dc13ea3df35c0a6', 'output_data_202011200707112994524_dataio_1_0', '{"host": null, "port": null, "name": "74b9bfd22aff11eb8dc13ea3df35c0a6", "namespace": "output_data_202011200707112994524_dataio_1_0", "storage_type": "LMDB", "home": null}', 'EGGROLL', 'LMDB', '{}', 4, True, True, 'gAN9cQAoWAYAAABoZWFkZXJxAV1xAihYAgAAAHgwcQNYAgAAAHgxcQRYAgAAAHgycQVYAgAAAHgzcQZYAgAAAHg0cQdYAgAAAHg1cQhYAgAAAHg2cQlYAgAAAHg3cQpYAgAAAHg4cQtYAgAAAHg5cQxYAwAAAHgxMHENWAMAAAB4MTFxDlgDAAAAeDEycQ9YAwAAAHgxM3EQWAMAAAB4MTRxEVgDAAAAeDE1cRJYAwAAAHgxNnETWAMAAAB4MTdxFFgDAAAAeDE4cRVYAwAAAHgxOXEWZVgIAAAAc2lkX25hbWVxF1gCAAAAaWRxGFgKAAAAbGFiZWxfbmFtZXEZWAEAAAB5cRp1Lg==', 569, '', '', 1605856223578, 1605856223581])
[DEBUG] [2020-11-20 07:10:24,432] [19734:140323371067200] - pool.py[line:185]: Returning 140323156724480 to pool.
[DEBUG] [2020-11-20 07:10:24,434] [19734:140323371067200] - pool.py[line:129]: No connection available in pool.
[DEBUG] [2020-11-20 07:10:25,487] [19734:140323371067200] - pool.py[line:158]: Created new connection 140323157232552.
[DEBUG] [2020-11-20 07:10:25,490] [19734:140323371067200] - peewee.py[line:2863]: ('SELECT table_name FROM information_schema.tables WHERE table_schema = DATABASE() AND table_type != %s ORDER BY table_name', ('VIEW',))
[DEBUG] [2020-11-20 07:10:25,523] [19734:140323371067200] - peewee.py[line:2863]: ('INSERT INTO `t_tracking_output_data_info_20201120` (`f_create_time`, `f_job_id`, `f_component_name`, `f_task_id`, `f_task_version`, `f_data_name`, `f_role`, `f_party_id`, `f_table_name`, `f_table_namespace`, `f_description`) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)', [1605856225489, '202011200707112994524', 'dataio_1', '202011200707112994524_dataio_1', 0, 'data', 'host', '9999', '74b9bfd22aff11eb8dc13ea3df35c0a6', 'output_data_202011200707112994524_dataio_1_0', ''])
[DEBUG] [2020-11-20 07:10:25,565] [19734:140323371067200] - pool.py[line:185]: Returning 140323157232552 to pool.
[INFO] [2020-11-20 07:10:25,570] [19734:140323371067200] - pipelined_model.py[line:73]: Save dataio_1 model DataIOMeta buffer
[INFO] [2020-11-20 07:10:25,572] [19734:140323371067200] - pipelined_model.py[line:73]: Save dataio_1 model DataIOParam buffer
[INFO] [2020-11-20 07:10:25,600] [19734:140323371067200] - pipelined_model.py[line:78]: Save dataio_1 model successfully
[INFO] [2020-11-20 07:10:25,602] [19734:140323371067200] - task_executor.py[line:302]: report task 202011200707112994524_dataio_1 0 host 9999 to driver
[INFO] [2020-11-20 07:10:25,604] [19734:140323371067200] - control_client.py[line:42]: request update job 202011200707112994524 task 202011200707112994524_dataio_1 0 on host 9999
[INFO] [2020-11-20 07:10:26,618] [19734:140323371067200] - task_executor.py[line:207]: task 202011200707112994524_dataio_1 host 9999 start time: 2020-11-20 07:10:00
[INFO] [2020-11-20 07:10:26,620] [19734:140323371067200] - task_executor.py[line:209]: task 202011200707112994524_dataio_1 host 9999 end time: 2020-11-20 07:10:25
[INFO] [2020-11-20 07:10:26,622] [19734:140323371067200] - task_executor.py[line:211]: task 202011200707112994524_dataio_1 host 9999 takes 25.272s
[INFO] [2020-11-20 07:10:26,623] [19734:140323371067200] - task_executor.py[line:214]: Finish 202011200707112994524 dataio_1 202011200707112994524_dataio_1 0 host 9999 task success
[INFO] [2020-11-20 07:10:26,624] [19734:140323371067200] - task_executor.py[line:302]: report task 202011200707112994524_dataio_1 0 host 9999 to driver
[INFO] [2020-11-20 07:10:26,626] [19734:140323371067200] - control_client.py[line:42]: request update job 202011200707112994524 task 202011200707112994524_dataio_1 0 on host 9999
[INFO] [2020-11-20 07:10:51,949] [19973:139632274605888] - task_executor.py[line:302]: report task 202011200707112994524_intersection_1 0 host 9999 to driver
[INFO] [2020-11-20 07:10:51,952] [19973:139632274605888] - control_client.py[line:42]: request update job 202011200707112994524 task 202011200707112994524_intersection_1 0 on host 9999
[DEBUG] [2020-11-20 07:11:03,645] [19973:139632274605888] - _federation.py[line:35]: [federation.eggroll]init federation: rp_session_id=202011200707112994524_intersection_1_0_host_9999, rs_session_id=202011200707112994524_intersection_1_0, party=Party(role=host, party_id=9999), proxy_endpoint=rollsite:9370
[DEBUG] [2020-11-20 07:11:03,649] [19973:139632274605888] - _federation.py[line:45]: [federation.eggroll]init federation context done
[INFO] [2020-11-20 07:11:03,650] [19973:139632274605888] - task_executor.py[line:156]: Run 202011200707112994524 intersection_1 202011200707112994524_intersection_1 host 9999 task
[INFO] [2020-11-20 07:11:03,652] [19973:139632274605888] - task_executor.py[line:157]: Component parameters on party {'IntersectParam': {'intersect_method': 'raw', 'random_bit': 128, 'sync_intersect_ids': True, 'join_role': 'guest', 'with_encode': False, 'encode_params': {'salt': '', 'encode_method': 'none', 'base64': False}, 'only_output_key': False, 'intersect_cache_param': {'use_cache': False, 'id_type': 'phone', 'encrypt_type': 'sha256'}, 'repeated_id_process': False, 'repeated_id_owner': 'guest', 'allow_info_share': False, 'info_owner': 'guest'}, 'dsl_version': 2, 'initiator': {'role': 'guest', 'party_id': 10000}, 'role': {'host': [9999], 'guest': [10000]}, 'job_parameters': {'job_type': 'train', 'work_mode': 1, 'backend': 0, 'computing_engine': 'EGGROLL', 'federation_engine': 'EGGROLL', 'storage_engine': 'EGGROLL', 'engines_address': {'computing': {'cores_per_node': 20, 'nodes': 1}, 'federation': {'host': 'rollsite', 'port': 9370}, 'storage': {'cores_per_node': 20, 'nodes': 1}}, 'federated_mode': 'MULTIPLE', 'task_parallelism': 1, 'computing_partitions': 4, 'federated_status_collect_type': 'PUSH', 'model_id': 'guest-10000#host-9999#model', 'model_version': '202011200707112994524', 'eggroll_run': {'eggroll.session.processors.per.node': 4}, 'spark_run': {}, 'rabbitmq_run': {}, 'adaptation_parameters': {'task_nodes': 1, 'task_cores_per_node': 4, 'task_memory_per_node': 0}}, 'component_parameters': {'common': {'hetero_secure_boost_0': {'task_type': 'classification', 'objective_param': {'objective': 'cross_entropy'}, 'num_trees': 3, 'validation_freqs': 1, 'encrypt_param': {'method': 'iterativeAffine'}, 'tree_param': {'max_depth': 3}}, 'evaluation_0': {'eval_type': 'binary'}}, 'role': {'guest': {'0': {'reader_1': {'table': {'name': 'breast_hetero_guest', 'namespace': 'experiment'}}, 'reader_0': {'table': {'name': 'breast_hetero_guest', 'namespace': 'experiment'}}, 'dataio_0': {'with_label': True, 'output_format': 'dense'}, 'dataio_1': {'with_label': True, 'output_format': 'dense'}}}, 'host': {'0': {'reader_1': {'table': {'name': 'breast_hetero_host', 'namespace': 'experiment'}}, 'reader_0': {'table': {'name': 'breast_hetero_host', 'namespace': 'experiment'}}, 'dataio_0': {'with_label': False}, 'dataio_1': {'with_label': False}}}}}, 'config': '/data/projects/fate/python/fate_flow/examples/hetero_secureboost_conf.json', 'dsl': 'examples/hetero_secureboost_dsl.json', 'function': 'submit_job', 'local': {'role': 'host', 'party_id': 9999}, 'CodePath': 'federatedml/statistic/intersect/intersect_model.py/IntersectHost', 'module': 'Intersection', 'output_data_name': ['data']}
[INFO] [2020-11-20 07:11:03,654] [19973:139632274605888] - task_executor.py[line:158]: Task input dsl {'data': {'data': ['dataio_1.data']}}
[INFO] [2020-11-20 07:11:03,656] [19973:139632274605888] - tracker_client.py[line:150]: Request read job 202011200707112994524 task None None on host 9999 data data info
[DEBUG] [2020-11-20 07:11:03,786] [19973:139632274605888] - pool.py[line:129]: No connection available in pool.
[DEBUG] [2020-11-20 07:11:03,810] [19973:139632274605888] - pool.py[line:158]: Created new connection 139632051874448.
[DEBUG] [2020-11-20 07:11:03,823] [19973:139632274605888] - peewee.py[line:2863]: ('SELECT `t1`.`f_create_date`, `t1`.`f_update_date`, `t1`.`f_name`, `t1`.`f_namespace`, `t1`.`f_address`, `t1`.`f_engine`, `t1`.`f_type`, `t1`.`f_options`, `t1`.`f_partitions`, `t1`.`f_id_delimiter`, `t1`.`f_in_serialized`, `t1`.`f_have_head`, `t1`.`f_schema`, `t1`.`f_count`, `t1`.`f_part_of_data`, `t1`.`f_description`, `t1`.`f_create_time`, `t1`.`f_update_time` FROM `t_storage_table_meta` AS `t1` WHERE ((`t1`.`f_name` = %s) AND (`t1`.`f_namespace` = %s))', ['74b9bfd22aff11eb8dc13ea3df35c0a6', 'output_data_202011200707112994524_dataio_1_0'])
[DEBUG] [2020-11-20 07:11:03,841] [19973:139632274605888] - pool.py[line:185]: Returning 139632051874448 to pool.
[INFO] [2020-11-20 07:11:03,842] [19973:139632274605888] - task_executor.py[line:260]: load computing table use 4
[DEBUG] [2020-11-20 07:11:09,656] [19973:139632274605888] - intersect_param.py[line:61]: Finish encode parameter check!
[DEBUG] [2020-11-20 07:11:09,659] [19973:139632274605888] - intersect_param.py[line:184]: Finish intersect parameter check!
[DEBUG] [2020-11-20 07:11:09,659] [19973:139632274605888] - component_properties.py[line:73]: {'IntersectParam': {'intersect_method': 'raw', 'random_bit': 128, 'sync_intersect_ids': True, 'join_role': 'guest', 'with_encode': False, 'encode_params': {'salt': '', 'encode_method': 'none', 'base64': False}, 'only_output_key': False, 'intersect_cache_param': {'use_cache': False, 'id_type': 'phone', 'encrypt_type': 'sha256'}, 'repeated_id_process': False, 'repeated_id_owner': 'guest', 'allow_info_share': False, 'info_owner': 'guest'}, 'dsl_version': 2, 'initiator': {'role': 'guest', 'party_id': 10000}, 'role': {'host': [9999], 'guest': [10000]}, 'job_parameters': {'job_type': 'train', 'work_mode': 1, 'backend': 0, 'computing_engine': 'EGGROLL', 'federation_engine': 'EGGROLL', 'storage_engine': 'EGGROLL', 'engines_address': {'computing': {'cores_per_node': 20, 'nodes': 1}, 'federation': {'host': 'rollsite', 'port': 9370}, 'storage': {'cores_per_node': 20, 'nodes': 1}}, 'federated_mode': 'MULTIPLE', 'task_parallelism': 1, 'computing_partitions': 4, 'federated_status_collect_type': 'PUSH', 'model_id': 'guest-10000#host-9999#model', 'model_version': '202011200707112994524', 'eggroll_run': {'eggroll.session.processors.per.node': 4}, 'spark_run': {}, 'rabbitmq_run': {}, 'adaptation_parameters': {'task_nodes': 1, 'task_cores_per_node': 4, 'task_memory_per_node': 0}}, 'component_parameters': {'common': {'hetero_secure_boost_0': {'task_type': 'classification', 'objective_param': {'objective': 'cross_entropy'}, 'num_trees': 3, 'validation_freqs': 1, 'encrypt_param': {'method': 'iterativeAffine'}, 'tree_param': {'max_depth': 3}}, 'evaluation_0': {'eval_type': 'binary'}}, 'role': {'guest': {'0': {'reader_1': {'table': {'name': 'breast_hetero_guest', 'namespace': 'experiment'}}, 'reader_0': {'table': {'name': 'breast_hetero_guest', 'namespace': 'experiment'}}, 'dataio_0': {'with_label': True, 'output_format': 'dense'}, 'dataio_1': {'with_label': True, 'output_format': 'dense'}}}, 'host': {'0': {'reader_1': {'table': {'name': 'breast_hetero_host', 'namespace': 'experiment'}}, 'reader_0': {'table': {'name': 'breast_hetero_host', 'namespace': 'experiment'}}, 'dataio_0': {'with_label': False}, 'dataio_1': {'with_label': False}}}}}, 'config': '/data/projects/fate/python/fate_flow/examples/hetero_secureboost_conf.json', 'dsl': 'examples/hetero_secureboost_dsl.json', 'function': 'submit_job', 'local': {'role': 'host', 'party_id': 9999}, 'CodePath': 'federatedml/statistic/intersect/intersect_model.py/IntersectHost', 'module': 'Intersection', 'output_data_name': ['data']}
[DEBUG] [2020-11-20 07:11:09,663] [19973:139632274605888] - component_properties.py[line:80]: need_run: True, need_cv: False
[DEBUG] [2020-11-20 07:11:09,665] [19973:139632274605888] - component_properties.py[line:102]: parse_dsl_args data_sets: {'dataio_1': {'data': [<fate_arch.computing.eggroll._table.Table object at 0x7efe9e960e10>]}}
[DEBUG] [2020-11-20 07:11:09,666] [19973:139632274605888] - component_properties.py[line:112]: [Data Parser], has_train_data: False
[DEBUG] [2020-11-20 07:11:09,668] [19973:139632274605888] - component_properties.py[line:112]: [Data Parser], has_eval_data: False
[DEBUG] [2020-11-20 07:11:09,669] [19973:139632274605888] - component_properties.py[line:112]: [Data Parser], has_validate_data: False
[DEBUG] [2020-11-20 07:11:09,670] [19973:139632274605888] - component_properties.py[line:112]: [Data Parser], has_test_data: False
[DEBUG] [2020-11-20 07:11:09,670] [19973:139632274605888] - component_properties.py[line:118]: [Data Parser], has_normal_data: True
[DEBUG] [2020-11-20 07:11:09,671] [19973:139632274605888] - component_properties.py[line:179]: Input data_sets: {'dataio_1': {'data': [<fate_arch.computing.eggroll._table.Table object at 0x7efe9e960e10>]}}
[DEBUG] [2020-11-20 07:11:09,672] [19973:139632274605888] - component_properties.py[line:189]: data_dict: {'data': [<fate_arch.computing.eggroll._table.Table object at 0x7efe9e960e10>]}
[DEBUG] [2020-11-20 07:11:09,673] [19973:139632274605888] - component_properties.py[line:192]: data_list: <fate_arch.computing.eggroll._table.Table object at 0x7efe9e960e10>
[DEBUG] [2020-11-20 07:11:09,696] [19973:139632274605888] - profile.py[line:84]: [computing#41d092c3c4]function_stack: [component_properties.py:225]extract_input_data <-[component_properties.py:238]extract_running_rules <-[model_base.py:87]run
[DEBUG] [2020-11-20 07:11:09,698] [19973:139632274605888] - profile.py[line:87]: [computing#41d092c3c4]start
[DEBUG] [2020-11-20 07:11:09,778] [19973:139632274605888] - profile.py[line:93]: [computing#41d092c3c4]done, elapse: 0.08237433433532715, function: count(self: Table(partition=4)) -> int
[DEBUG] [2020-11-20 07:11:09,780] [19973:139632274605888] - component_properties.py[line:231]: train_data: None, validate_data: None, test_data: None, data: {'dataio_1.data': <fate_arch.computing.eggroll._table.Table object at 0x7efe9e960e10>}
[DEBUG] [2020-11-20 07:11:09,781] [19973:139632274605888] - model_base.py[line:88]: running_funcs: [<function ModelBase.extract_data at 0x7efe9bb4c950>, <bound method ModelBase.set_flowid of <federatedml.statistic.intersect.intersect_model.IntersectHost object at 0x7efe9f5ef470>>, <bound method IntersectModelBase.fit of <federatedml.statistic.intersect.intersect_model.IntersectHost object at 0x7efe9f5ef470>>]
[DEBUG] [2020-11-20 07:11:09,782] [19973:139632274605888] - model_base.py[line:340]: In extract_data, data input: {'dataio_1.data': <fate_arch.computing.eggroll._table.Table object at 0x7efe9e960e10>}
[DEBUG] [2020-11-20 07:11:09,783] [19973:139632274605888] - model_base.py[line:162]: set flowid to transfer_variable, flowid: fit
[DEBUG] [2020-11-20 07:11:09,783] [19973:139632274605888] - model_base.py[line:97]: func: <bound method IntersectModelBase.fit of <federatedml.statistic.intersect.intersect_model.IntersectHost object at 0x7efe9f5ef470>>
[INFO] [2020-11-20 07:11:09,784] [19973:139632274605888] - intersect_model.py[line:50]: Using raw intersection, role is host
[INFO] [2020-11-20 07:11:09,786] [19973:139632274605888] - intersect_host.py[line:220]: Start raw intersection
[DEBUG] [2020-11-20 07:11:09,793] [19973:139632274605888] - profile.py[line:84]: [computing#4097bba6a9]function_stack: [intersect.py:132]intersect_send_id <-[intersect_host.py:223]run <-[intersect_model.py:145]fit <-[model_base.py:98]run
[DEBUG] [2020-11-20 07:11:09,795] [19973:139632274605888] - profile.py[line:87]: [computing#4097bba6a9]start
[DEBUG] [2020-11-20 07:11:16,770] [19973:139632274605888] - profile.py[line:93]: [computing#4097bba6a9]done, elapse: 6.977796792984009, function: mapValues(self: Table(partition=4), func: function) -> Table(partition=4)
[INFO] [2020-11-20 07:11:16,772] [19973:139632274605888] - intersect.py[line:134]: Send id role is host
[DEBUG] [2020-11-20 07:11:16,774] [19973:139632274605888] - profile.py[line:232]: [federation.remote.federatedml.transfer_variable.transfer_class.raw_intersect_transfer_variable.RawIntersectTransferVariable.send_ids_host.fit]host->[Party(role=guest, party_id=10000)] start
[DEBUG] [2020-11-20 07:11:16,775] [19973:139632274605888] - _federation.py[line:69]: [federation.eggroll.remote.hash.9c2acfde96e52e8ed947.send_ids_host.fit[('guest', '10000')])]remote RollPair(namespace=202011200707112994524_intersection_1_0_host_9999, name=74b9bfd22aff11eb8dc13ea3df35c0a6_20201120.071109.802169.1, partitions=4)
[DEBUG] [2020-11-20 07:11:16,784] [19973:139632274605888] - profile.py[line:185]: [federation.remote.federatedml.transfer_variable.transfer_class.raw_intersect_transfer_variable.RawIntersectTransferVariable.send_ids_host.fit]host->[Party(role=guest, party_id=10000)] done
[INFO] [2020-11-20 07:11:16,791] [19973:139632274605888] - intersect.py[line:149]: Remote data_sid to role-join
[DEBUG] [2020-11-20 07:11:16,793] [19973:139632274605888] - profile.py[line:237]: [federation.get.federatedml.transfer_variable.transfer_class.raw_intersect_transfer_variable.RawIntersectTransferVariable.intersect_ids_guest.fit]host<-[Party(role=guest, party_id=10000)] start
[DEBUG] [2020-11-20 07:11:17,274] [19973:139631755527936] - _federation.py[line:133]: [federation.eggroll.remote.hash.9c2acfde96e52e8ed947.send_ids_host.fit]future to remote to party: ('guest', '10000') done
[DEBUG] [2020-11-20 07:11:18,447] [19973:139632274605888] - _federation.py[line:176]: [federation.eggroll.get.hash.fb553fba83149a742f66.intersect_ids_guest.fit] got RollPair(namespace=202011200707112994524_intersection_1_0, name=__rsk#202011200707112994524_intersection_1_0#hash.fb553fba83149a742f66.intersect_ids_guest#fit#guest#10000#host#9999, partitions=4)
[DEBUG] [2020-11-20 07:11:18,449] [19973:139632274605888] - profile.py[line:216]: [federation.get.federatedml.transfer_variable.transfer_class.raw_intersect_transfer_variable.RawIntersectTransferVariable.intersect_ids_guest.fit]host<-[Party(role=guest, party_id=10000)] done
[INFO] [2020-11-20 07:11:18,450] [19973:139632274605888] - intersect.py[line:160]: Get intersect ids from role-join!
[INFO] [2020-11-20 07:11:18,452] [19973:139632274605888] - intersect.py[line:163]: recv_intersect_ids_list's size is 1
[DEBUG] [2020-11-20 07:11:18,456] [19973:139632274605888] - profile.py[line:84]: [computing#88c5295fe7]function_stack: [intersect.py:80]_get_value_from_data <-[intersect.py:184]intersect_send_id <-[intersect_host.py:223]run <-[intersect_model.py:145]fit <-[model_base.py:98]run
[DEBUG] [2020-11-20 07:11:18,456] [19973:139632274605888] - profile.py[line:87]: [computing#88c5295fe7]start
[DEBUG] [2020-11-20 07:11:18,774] [19973:139632274605888] - profile.py[line:93]: [computing#88c5295fe7]done, elapse: 0.31798458099365234, function: join(self: Table(partition=4), other: Table(partition=4), func: function) -> Table(partition=4)
[INFO] [2020-11-20 07:11:18,775] [19973:139632274605888] - intersect.py[line:82]: get intersect data_instances!
[INFO] [2020-11-20 07:11:18,777] [19973:139632274605888] - intersect_model.py[line:150]: Finish intersection
[DEBUG] [2020-11-20 07:11:18,781] [19973:139632274605888] - profile.py[line:84]: [computing#5655dc08fa]function_stack: [intersect_model.py:153]fit <-[model_base.py:98]run
[DEBUG] [2020-11-20 07:11:18,782] [19973:139632274605888] - profile.py[line:87]: [computing#5655dc08fa]start
[DEBUG] [2020-11-20 07:11:18,863] [19973:139632274605888] - profile.py[line:93]: [computing#5655dc08fa]done, elapse: 0.08176207542419434, function: count(self: Table(partition=4)) -> int
[DEBUG] [2020-11-20 07:11:18,865] [19973:139632274605888] - profile.py[line:84]: [computing#529d4dedac]function_stack: [intersect_model.py:154]fit <-[model_base.py:98]run
[DEBUG] [2020-11-20 07:11:18,867] [19973:139632274605888] - profile.py[line:87]: [computing#529d4dedac]start
[DEBUG] [2020-11-20 07:11:18,954] [19973:139632274605888] - profile.py[line:93]: [computing#529d4dedac]done, elapse: 0.0889132022857666, function: count(self: Table(partition=4)) -> int
[INFO] [2020-11-20 07:11:18,955] [19973:139632274605888] - tracker_client.py[line:70]: Request save job 202011200707112994524 task 202011200707112994524_intersection_1 0 on host 9999 metric train intersection data
[INFO] [2020-11-20 07:11:19,044] [19973:139632274605888] - tracker_client.py[line:103]: Request save job 202011200707112994524 task 202011200707112994524_intersection_1 0 on host 9999 metric train intersection meta
[DEBUG] [2020-11-20 07:11:19,123] [19973:139632274605888] - model_base.py[line:109]: saved_result is : [None], data_output: None
[INFO] [2020-11-20 07:11:19,124] [19973:139632274605888] - tracker_client.py[line:173]: Request save job 202011200707112994524 task 202011200707112994524_intersection_1 0 on host 9999 component summary
[INFO] [2020-11-20 07:11:19,839] [19973:139632274605888] - profile.py[line:249]: 
Computing:
+----------+---------------------------------------------+
| function |  function    n   sum(s)   mean(s)   max(s)  |
|          | ----------- --- -------- --------- -------- |
|          |  mapValues   1   6.978     6.978    6.978   |
|          |    load      1   0.537     0.537    0.537   |
|          |    join      1   0.318     0.318    0.318   |
|          |    count     3   0.253     0.084    0.089   |
+----------+---------------------------------------------+
|  total   |  n=6, sum=8.0862, mean=1.3477, max=6.9778   |
+----------+---------------------------------------------+

Federation:
+--------+-------------------------------------------------------------------------------------------------------------+
|  get   |                                    name                                    | n | sum(s) | mean(s) | max(s)  |
|        | ---------------------------------------------------------------------------+---+--------+---------+-------- |
|        |  federatedml.transfer_variable.transfer_class.raw_intersect_transfer_varia | 1 | 1.654  |  1.654  | 1.654   |
|        |            ble.RawIntersectTransferVariable.intersect_ids_guest            |   |        |         |         |
+--------+-------------------------------------------------------------------------------------------------------------+
| remote |                                    name                                    | n | sum(s) | mean(s) | max(s)  |
|        | ---------------------------------------------------------------------------+---+--------+---------+-------- |
|        |  federatedml.transfer_variable.transfer_class.raw_intersect_transfer_varia | 1 | 0.009  |  0.009  | 0.009   |
|        |               ble.RawIntersectTransferVariable.send_ids_host               |   |        |         |         |
+--------+-------------------------------------------------------------------------------------------------------------+
| total  |                                  n=2, sum=1.6632, mean=0.8316, max=1.6544                                   |
+--------+-------------------------------------------------------------------------------------------------------------+

[INFO] [2020-11-20 07:11:19,896] [19973:139632274605888] - intersect_model.py[line:168]: intersect_ids count:569
[INFO] [2020-11-20 07:11:19,898] [19973:139632274605888] - intersect_model.py[line:169]: intersect_ids header schema:{'header': ['x0', 'x1', 'x2', 'x3', 'x4', 'x5', 'x6', 'x7', 'x8', 'x9', 'x10', 'x11', 'x12', 'x13', 'x14', 'x15', 'x16', 'x17', 'x18', 'x19'], 'sid_name': 'id', 'label_name': 'y'}
[DEBUG] [2020-11-20 07:11:21,007] [19973:139632274605888] - peewee.py[line:2863]: ('INSERT INTO `t_storage_table_meta` (`f_create_date`, `f_update_date`, `f_name`, `f_namespace`, `f_address`, `f_engine`, `f_type`, `f_options`, `f_partitions`, `f_in_serialized`, `f_have_head`, `f_schema`, `f_count`, `f_part_of_data`, `f_description`, `f_create_time`, `f_update_time`) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)', [datetime.datetime(2020, 11, 20, 7, 11, 20), datetime.datetime(2020, 11, 20, 7, 11, 20), '96be3f402aff11eb99d93ea3df35c0a6', 'output_data_202011200707112994524_intersection_1_0', '{"host": null, "port": null, "name": "96be3f402aff11eb99d93ea3df35c0a6", "namespace": "output_data_202011200707112994524_intersection_1_0", "storage_type": "LMDB", "home": null}', 'EGGROLL', 'LMDB', '{}', 4, True, True, 'gAN9cQAoWAYAAABoZWFkZXJxAV1xAihYAgAAAHgwcQNYAgAAAHgxcQRYAgAAAHgycQVYAgAAAHgzcQZYAgAAAHg0cQdYAgAAAHg1cQhYAgAAAHg2cQlYAgAAAHg3cQpYAgAAAHg4cQtYAgAAAHg5cQxYAwAAAHgxMHENWAMAAAB4MTFxDlgDAAAAeDEycQ9YAwAAAHgxM3EQWAMAAAB4MTRxEVgDAAAAeDE1cRJYAwAAAHgxNnETWAMAAAB4MTdxFFgDAAAAeDE4cRVYAwAAAHgxOXEWZVgIAAAAc2lkX25hbWVxF1gCAAAAaWRxGFgKAAAAbGFiZWxfbmFtZXEZWAEAAAB5cRp1Lg==', 569, '', '', 1605856280973, 1605856280975])
[DEBUG] [2020-11-20 07:11:21,045] [19973:139632274605888] - pool.py[line:185]: Returning 139632051874448 to pool.
[DEBUG] [2020-11-20 07:11:21,114] [19973:139632274605888] - pool.py[line:129]: No connection available in pool.
[DEBUG] [2020-11-20 07:11:21,131] [19973:139632274605888] - pool.py[line:158]: Created new connection 139631794471208.
[DEBUG] [2020-11-20 07:11:21,135] [19973:139632274605888] - peewee.py[line:2863]: ('SELECT table_name FROM information_schema.tables WHERE table_schema = DATABASE() AND table_type != %s ORDER BY table_name', ('VIEW',))
[DEBUG] [2020-11-20 07:11:21,151] [19973:139632274605888] - peewee.py[line:2863]: ('INSERT INTO `t_tracking_output_data_info_20201120` (`f_create_time`, `f_job_id`, `f_component_name`, `f_task_id`, `f_task_version`, `f_data_name`, `f_role`, `f_party_id`, `f_table_name`, `f_table_namespace`, `f_description`) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)', [1605856281134, '202011200707112994524', 'intersection_1', '202011200707112994524_intersection_1', 0, 'data', 'host', '9999', '96be3f402aff11eb99d93ea3df35c0a6', 'output_data_202011200707112994524_intersection_1_0', ''])
[DEBUG] [2020-11-20 07:11:21,170] [19973:139632274605888] - pool.py[line:185]: Returning 139631794471208 to pool.
[INFO] [2020-11-20 07:11:21,171] [19973:139632274605888] - task_executor.py[line:302]: report task 202011200707112994524_intersection_1 0 host 9999 to driver
[INFO] [2020-11-20 07:11:21,172] [19973:139632274605888] - control_client.py[line:42]: request update job 202011200707112994524 task 202011200707112994524_intersection_1 0 on host 9999
[INFO] [2020-11-20 07:11:22,127] [19973:139632274605888] - task_executor.py[line:207]: task 202011200707112994524_intersection_1 host 9999 start time: 2020-11-20 07:10:51
[INFO] [2020-11-20 07:11:22,129] [19973:139632274605888] - task_executor.py[line:209]: task 202011200707112994524_intersection_1 host 9999 end time: 2020-11-20 07:11:21
[INFO] [2020-11-20 07:11:22,130] [19973:139632274605888] - task_executor.py[line:211]: task 202011200707112994524_intersection_1 host 9999 takes 29.678s
[INFO] [2020-11-20 07:11:22,131] [19973:139632274605888] - task_executor.py[line:214]: Finish 202011200707112994524 intersection_1 202011200707112994524_intersection_1 0 host 9999 task success
[INFO] [2020-11-20 07:11:22,132] [19973:139632274605888] - task_executor.py[line:302]: report task 202011200707112994524_intersection_1 0 host 9999 to driver
[INFO] [2020-11-20 07:11:22,133] [19973:139632274605888] - control_client.py[line:42]: request update job 202011200707112994524 task 202011200707112994524_intersection_1 0 on host 9999
[INFO] [2020-11-20 07:11:49,916] [20244:139871588984640] - task_executor.py[line:302]: report task 202011200707112994524_intersection_0 0 host 9999 to driver
[INFO] [2020-11-20 07:11:49,921] [20244:139871588984640] - control_client.py[line:42]: request update job 202011200707112994524 task 202011200707112994524_intersection_0 0 on host 9999
[DEBUG] [2020-11-20 07:12:01,993] [20244:139871588984640] - _federation.py[line:35]: [federation.eggroll]init federation: rp_session_id=202011200707112994524_intersection_0_0_host_9999, rs_session_id=202011200707112994524_intersection_0_0, party=Party(role=host, party_id=9999), proxy_endpoint=rollsite:9370
[DEBUG] [2020-11-20 07:12:01,998] [20244:139871588984640] - _federation.py[line:45]: [federation.eggroll]init federation context done
[INFO] [2020-11-20 07:12:02,000] [20244:139871588984640] - task_executor.py[line:156]: Run 202011200707112994524 intersection_0 202011200707112994524_intersection_0 host 9999 task
[INFO] [2020-11-20 07:12:02,001] [20244:139871588984640] - task_executor.py[line:157]: Component parameters on party {'IntersectParam': {'intersect_method': 'raw', 'random_bit': 128, 'sync_intersect_ids': True, 'join_role': 'guest', 'with_encode': False, 'encode_params': {'salt': '', 'encode_method': 'none', 'base64': False}, 'only_output_key': False, 'intersect_cache_param': {'use_cache': False, 'id_type': 'phone', 'encrypt_type': 'sha256'}, 'repeated_id_process': False, 'repeated_id_owner': 'guest', 'allow_info_share': False, 'info_owner': 'guest'}, 'dsl_version': 2, 'initiator': {'role': 'guest', 'party_id': 10000}, 'role': {'host': [9999], 'guest': [10000]}, 'job_parameters': {'job_type': 'train', 'work_mode': 1, 'backend': 0, 'computing_engine': 'EGGROLL', 'federation_engine': 'EGGROLL', 'storage_engine': 'EGGROLL', 'engines_address': {'computing': {'cores_per_node': 20, 'nodes': 1}, 'federation': {'host': 'rollsite', 'port': 9370}, 'storage': {'cores_per_node': 20, 'nodes': 1}}, 'federated_mode': 'MULTIPLE', 'task_parallelism': 1, 'computing_partitions': 4, 'federated_status_collect_type': 'PUSH', 'model_id': 'guest-10000#host-9999#model', 'model_version': '202011200707112994524', 'eggroll_run': {'eggroll.session.processors.per.node': 4}, 'spark_run': {}, 'rabbitmq_run': {}, 'adaptation_parameters': {'task_nodes': 1, 'task_cores_per_node': 4, 'task_memory_per_node': 0}}, 'component_parameters': {'common': {'hetero_secure_boost_0': {'task_type': 'classification', 'objective_param': {'objective': 'cross_entropy'}, 'num_trees': 3, 'validation_freqs': 1, 'encrypt_param': {'method': 'iterativeAffine'}, 'tree_param': {'max_depth': 3}}, 'evaluation_0': {'eval_type': 'binary'}}, 'role': {'guest': {'0': {'reader_1': {'table': {'name': 'breast_hetero_guest', 'namespace': 'experiment'}}, 'reader_0': {'table': {'name': 'breast_hetero_guest', 'namespace': 'experiment'}}, 'dataio_0': {'with_label': True, 'output_format': 'dense'}, 'dataio_1': {'with_label': True, 'output_format': 'dense'}}}, 'host': {'0': {'reader_1': {'table': {'name': 'breast_hetero_host', 'namespace': 'experiment'}}, 'reader_0': {'table': {'name': 'breast_hetero_host', 'namespace': 'experiment'}}, 'dataio_0': {'with_label': False}, 'dataio_1': {'with_label': False}}}}}, 'config': '/data/projects/fate/python/fate_flow/examples/hetero_secureboost_conf.json', 'dsl': 'examples/hetero_secureboost_dsl.json', 'function': 'submit_job', 'local': {'role': 'host', 'party_id': 9999}, 'CodePath': 'federatedml/statistic/intersect/intersect_model.py/IntersectHost', 'module': 'Intersection', 'output_data_name': ['data']}
[INFO] [2020-11-20 07:12:02,003] [20244:139871588984640] - task_executor.py[line:158]: Task input dsl {'data': {'data': ['dataio_0.data']}}
[INFO] [2020-11-20 07:12:02,004] [20244:139871588984640] - tracker_client.py[line:150]: Request read job 202011200707112994524 task None None on host 9999 data data info
[DEBUG] [2020-11-20 07:12:02,106] [20244:139871588984640] - pool.py[line:129]: No connection available in pool.
[DEBUG] [2020-11-20 07:12:02,123] [20244:139871588984640] - pool.py[line:158]: Created new connection 139871265237704.
[DEBUG] [2020-11-20 07:12:02,146] [20244:139871588984640] - peewee.py[line:2863]: ('SELECT `t1`.`f_create_date`, `t1`.`f_update_date`, `t1`.`f_name`, `t1`.`f_namespace`, `t1`.`f_address`, `t1`.`f_engine`, `t1`.`f_type`, `t1`.`f_options`, `t1`.`f_partitions`, `t1`.`f_id_delimiter`, `t1`.`f_in_serialized`, `t1`.`f_have_head`, `t1`.`f_schema`, `t1`.`f_count`, `t1`.`f_part_of_data`, `t1`.`f_description`, `t1`.`f_create_time`, `t1`.`f_update_time` FROM `t_storage_table_meta` AS `t1` WHERE ((`t1`.`f_name` = %s) AND (`t1`.`f_namespace` = %s))', ['56c960f42aff11ebaabe3ea3df35c0a6', 'output_data_202011200707112994524_dataio_0_0'])
[DEBUG] [2020-11-20 07:12:02,167] [20244:139871588984640] - pool.py[line:185]: Returning 139871265237704 to pool.
[INFO] [2020-11-20 07:12:02,168] [20244:139871588984640] - task_executor.py[line:260]: load computing table use 4
[DEBUG] [2020-11-20 07:12:07,850] [20244:139871588984640] - intersect_param.py[line:61]: Finish encode parameter check!
[DEBUG] [2020-11-20 07:12:07,852] [20244:139871588984640] - intersect_param.py[line:184]: Finish intersect parameter check!
[DEBUG] [2020-11-20 07:12:07,853] [20244:139871588984640] - component_properties.py[line:73]: {'IntersectParam': {'intersect_method': 'raw', 'random_bit': 128, 'sync_intersect_ids': True, 'join_role': 'guest', 'with_encode': False, 'encode_params': {'salt': '', 'encode_method': 'none', 'base64': False}, 'only_output_key': False, 'intersect_cache_param': {'use_cache': False, 'id_type': 'phone', 'encrypt_type': 'sha256'}, 'repeated_id_process': False, 'repeated_id_owner': 'guest', 'allow_info_share': False, 'info_owner': 'guest'}, 'dsl_version': 2, 'initiator': {'role': 'guest', 'party_id': 10000}, 'role': {'host': [9999], 'guest': [10000]}, 'job_parameters': {'job_type': 'train', 'work_mode': 1, 'backend': 0, 'computing_engine': 'EGGROLL', 'federation_engine': 'EGGROLL', 'storage_engine': 'EGGROLL', 'engines_address': {'computing': {'cores_per_node': 20, 'nodes': 1}, 'federation': {'host': 'rollsite', 'port': 9370}, 'storage': {'cores_per_node': 20, 'nodes': 1}}, 'federated_mode': 'MULTIPLE', 'task_parallelism': 1, 'computing_partitions': 4, 'federated_status_collect_type': 'PUSH', 'model_id': 'guest-10000#host-9999#model', 'model_version': '202011200707112994524', 'eggroll_run': {'eggroll.session.processors.per.node': 4}, 'spark_run': {}, 'rabbitmq_run': {}, 'adaptation_parameters': {'task_nodes': 1, 'task_cores_per_node': 4, 'task_memory_per_node': 0}}, 'component_parameters': {'common': {'hetero_secure_boost_0': {'task_type': 'classification', 'objective_param': {'objective': 'cross_entropy'}, 'num_trees': 3, 'validation_freqs': 1, 'encrypt_param': {'method': 'iterativeAffine'}, 'tree_param': {'max_depth': 3}}, 'evaluation_0': {'eval_type': 'binary'}}, 'role': {'guest': {'0': {'reader_1': {'table': {'name': 'breast_hetero_guest', 'namespace': 'experiment'}}, 'reader_0': {'table': {'name': 'breast_hetero_guest', 'namespace': 'experiment'}}, 'dataio_0': {'with_label': True, 'output_format': 'dense'}, 'dataio_1': {'with_label': True, 'output_format': 'dense'}}}, 'host': {'0': {'reader_1': {'table': {'name': 'breast_hetero_host', 'namespace': 'experiment'}}, 'reader_0': {'table': {'name': 'breast_hetero_host', 'namespace': 'experiment'}}, 'dataio_0': {'with_label': False}, 'dataio_1': {'with_label': False}}}}}, 'config': '/data/projects/fate/python/fate_flow/examples/hetero_secureboost_conf.json', 'dsl': 'examples/hetero_secureboost_dsl.json', 'function': 'submit_job', 'local': {'role': 'host', 'party_id': 9999}, 'CodePath': 'federatedml/statistic/intersect/intersect_model.py/IntersectHost', 'module': 'Intersection', 'output_data_name': ['data']}
[DEBUG] [2020-11-20 07:12:07,855] [20244:139871588984640] - component_properties.py[line:80]: need_run: True, need_cv: False
[DEBUG] [2020-11-20 07:12:07,856] [20244:139871588984640] - component_properties.py[line:102]: parse_dsl_args data_sets: {'dataio_0': {'data': [<fate_arch.computing.eggroll._table.Table object at 0x7f364ccdf630>]}}
[DEBUG] [2020-11-20 07:12:07,856] [20244:139871588984640] - component_properties.py[line:112]: [Data Parser], has_train_data: False
[DEBUG] [2020-11-20 07:12:07,858] [20244:139871588984640] - component_properties.py[line:112]: [Data Parser], has_eval_data: False
[DEBUG] [2020-11-20 07:12:07,859] [20244:139871588984640] - component_properties.py[line:112]: [Data Parser], has_validate_data: False
[DEBUG] [2020-11-20 07:12:07,859] [20244:139871588984640] - component_properties.py[line:112]: [Data Parser], has_test_data: False
[DEBUG] [2020-11-20 07:12:07,860] [20244:139871588984640] - component_properties.py[line:118]: [Data Parser], has_normal_data: True
[DEBUG] [2020-11-20 07:12:07,861] [20244:139871588984640] - component_properties.py[line:179]: Input data_sets: {'dataio_0': {'data': [<fate_arch.computing.eggroll._table.Table object at 0x7f364ccdf630>]}}
[DEBUG] [2020-11-20 07:12:07,861] [20244:139871588984640] - component_properties.py[line:189]: data_dict: {'data': [<fate_arch.computing.eggroll._table.Table object at 0x7f364ccdf630>]}
[DEBUG] [2020-11-20 07:12:07,862] [20244:139871588984640] - component_properties.py[line:192]: data_list: <fate_arch.computing.eggroll._table.Table object at 0x7f364ccdf630>
[DEBUG] [2020-11-20 07:12:07,885] [20244:139871588984640] - profile.py[line:84]: [computing#41d092c3c4]function_stack: [component_properties.py:225]extract_input_data <-[component_properties.py:238]extract_running_rules <-[model_base.py:87]run
[DEBUG] [2020-11-20 07:12:07,887] [20244:139871588984640] - profile.py[line:87]: [computing#41d092c3c4]start
[DEBUG] [2020-11-20 07:12:08,155] [20244:139871588984640] - profile.py[line:93]: [computing#41d092c3c4]done, elapse: 0.2699716091156006, function: count(self: Table(partition=4)) -> int
[DEBUG] [2020-11-20 07:12:08,157] [20244:139871588984640] - component_properties.py[line:231]: train_data: None, validate_data: None, test_data: None, data: {'dataio_0.data': <fate_arch.computing.eggroll._table.Table object at 0x7f364ccdf630>}
[DEBUG] [2020-11-20 07:12:08,158] [20244:139871588984640] - model_base.py[line:88]: running_funcs: [<function ModelBase.extract_data at 0x7f3649d2f950>, <bound method ModelBase.set_flowid of <federatedml.statistic.intersect.intersect_model.IntersectHost object at 0x7f3651993470>>, <bound method IntersectModelBase.fit of <federatedml.statistic.intersect.intersect_model.IntersectHost object at 0x7f3651993470>>]
[DEBUG] [2020-11-20 07:12:08,159] [20244:139871588984640] - model_base.py[line:340]: In extract_data, data input: {'dataio_0.data': <fate_arch.computing.eggroll._table.Table object at 0x7f364ccdf630>}
[DEBUG] [2020-11-20 07:12:08,160] [20244:139871588984640] - model_base.py[line:162]: set flowid to transfer_variable, flowid: fit
[DEBUG] [2020-11-20 07:12:08,161] [20244:139871588984640] - model_base.py[line:97]: func: <bound method IntersectModelBase.fit of <federatedml.statistic.intersect.intersect_model.IntersectHost object at 0x7f3651993470>>
[INFO] [2020-11-20 07:12:08,162] [20244:139871588984640] - intersect_model.py[line:50]: Using raw intersection, role is host
[INFO] [2020-11-20 07:12:08,164] [20244:139871588984640] - intersect_host.py[line:220]: Start raw intersection
[DEBUG] [2020-11-20 07:12:08,169] [20244:139871588984640] - profile.py[line:84]: [computing#4097bba6a9]function_stack: [intersect.py:132]intersect_send_id <-[intersect_host.py:223]run <-[intersect_model.py:145]fit <-[model_base.py:98]run
[DEBUG] [2020-11-20 07:12:08,170] [20244:139871588984640] - profile.py[line:87]: [computing#4097bba6a9]start
[DEBUG] [2020-11-20 07:12:15,448] [20244:139871588984640] - profile.py[line:93]: [computing#4097bba6a9]done, elapse: 7.279144048690796, function: mapValues(self: Table(partition=4), func: function) -> Table(partition=4)
[INFO] [2020-11-20 07:12:15,450] [20244:139871588984640] - intersect.py[line:134]: Send id role is host
[DEBUG] [2020-11-20 07:12:15,453] [20244:139871588984640] - profile.py[line:232]: [federation.remote.federatedml.transfer_variable.transfer_class.raw_intersect_transfer_variable.RawIntersectTransferVariable.send_ids_host.fit]host->[Party(role=guest, party_id=10000)] start
[DEBUG] [2020-11-20 07:12:15,454] [20244:139871588984640] - _federation.py[line:69]: [federation.eggroll.remote.hash.9c2acfde96e52e8ed947.send_ids_host.fit[('guest', '10000')])]remote RollPair(namespace=202011200707112994524_intersection_0_0_host_9999, name=56c960f42aff11ebaabe3ea3df35c0a6_20201120.071208.174146.1, partitions=4)
[DEBUG] [2020-11-20 07:12:15,465] [20244:139871588984640] - profile.py[line:185]: [federation.remote.federatedml.transfer_variable.transfer_class.raw_intersect_transfer_variable.RawIntersectTransferVariable.send_ids_host.fit]host->[Party(role=guest, party_id=10000)] done
[INFO] [2020-11-20 07:12:15,466] [20244:139871588984640] - intersect.py[line:149]: Remote data_sid to role-join
[DEBUG] [2020-11-20 07:12:15,467] [20244:139871588984640] - profile.py[line:237]: [federation.get.federatedml.transfer_variable.transfer_class.raw_intersect_transfer_variable.RawIntersectTransferVariable.intersect_ids_guest.fit]host<-[Party(role=guest, party_id=10000)] start
[DEBUG] [2020-11-20 07:12:16,246] [20244:139871053121280] - _federation.py[line:133]: [federation.eggroll.remote.hash.9c2acfde96e52e8ed947.send_ids_host.fit]future to remote to party: ('guest', '10000') done
[DEBUG] [2020-11-20 07:12:17,300] [20244:139871588984640] - _federation.py[line:176]: [federation.eggroll.get.hash.fb553fba83149a742f66.intersect_ids_guest.fit] got RollPair(namespace=202011200707112994524_intersection_0_0, name=__rsk#202011200707112994524_intersection_0_0#hash.fb553fba83149a742f66.intersect_ids_guest#fit#guest#10000#host#9999, partitions=4)
[DEBUG] [2020-11-20 07:12:17,302] [20244:139871588984640] - profile.py[line:216]: [federation.get.federatedml.transfer_variable.transfer_class.raw_intersect_transfer_variable.RawIntersectTransferVariable.intersect_ids_guest.fit]host<-[Party(role=guest, party_id=10000)] done
[INFO] [2020-11-20 07:12:17,303] [20244:139871588984640] - intersect.py[line:160]: Get intersect ids from role-join!
[INFO] [2020-11-20 07:12:17,304] [20244:139871588984640] - intersect.py[line:163]: recv_intersect_ids_list's size is 1
[DEBUG] [2020-11-20 07:12:17,308] [20244:139871588984640] - profile.py[line:84]: [computing#88c5295fe7]function_stack: [intersect.py:80]_get_value_from_data <-[intersect.py:184]intersect_send_id <-[intersect_host.py:223]run <-[intersect_model.py:145]fit <-[model_base.py:98]run
[DEBUG] [2020-11-20 07:12:17,308] [20244:139871588984640] - profile.py[line:87]: [computing#88c5295fe7]start
[DEBUG] [2020-11-20 07:12:17,552] [20244:139871588984640] - profile.py[line:93]: [computing#88c5295fe7]done, elapse: 0.24406886100769043, function: join(self: Table(partition=4), other: Table(partition=4), func: function) -> Table(partition=4)
[INFO] [2020-11-20 07:12:17,553] [20244:139871588984640] - intersect.py[line:82]: get intersect data_instances!
[INFO] [2020-11-20 07:12:17,555] [20244:139871588984640] - intersect_model.py[line:150]: Finish intersection
[DEBUG] [2020-11-20 07:12:17,558] [20244:139871588984640] - profile.py[line:84]: [computing#5655dc08fa]function_stack: [intersect_model.py:153]fit <-[model_base.py:98]run
[DEBUG] [2020-11-20 07:12:17,559] [20244:139871588984640] - profile.py[line:87]: [computing#5655dc08fa]start
[DEBUG] [2020-11-20 07:12:17,644] [20244:139871588984640] - profile.py[line:93]: [computing#5655dc08fa]done, elapse: 0.08652162551879883, function: count(self: Table(partition=4)) -> int
[DEBUG] [2020-11-20 07:12:17,647] [20244:139871588984640] - profile.py[line:84]: [computing#529d4dedac]function_stack: [intersect_model.py:154]fit <-[model_base.py:98]run
[DEBUG] [2020-11-20 07:12:17,647] [20244:139871588984640] - profile.py[line:87]: [computing#529d4dedac]start
[DEBUG] [2020-11-20 07:12:17,786] [20244:139871588984640] - profile.py[line:93]: [computing#529d4dedac]done, elapse: 0.13930988311767578, function: count(self: Table(partition=4)) -> int
[INFO] [2020-11-20 07:12:17,788] [20244:139871588984640] - tracker_client.py[line:70]: Request save job 202011200707112994524 task 202011200707112994524_intersection_0 0 on host 9999 metric train intersection data
[INFO] [2020-11-20 07:12:17,865] [20244:139871588984640] - tracker_client.py[line:103]: Request save job 202011200707112994524 task 202011200707112994524_intersection_0 0 on host 9999 metric train intersection meta
[DEBUG] [2020-11-20 07:12:17,978] [20244:139871588984640] - model_base.py[line:109]: saved_result is : [None], data_output: None
[INFO] [2020-11-20 07:12:17,979] [20244:139871588984640] - tracker_client.py[line:173]: Request save job 202011200707112994524 task 202011200707112994524_intersection_0 0 on host 9999 component summary
[INFO] [2020-11-20 07:12:18,632] [20244:139871588984640] - profile.py[line:249]: 
Computing:
+----------+---------------------------------------------+
| function |  function    n   sum(s)   mean(s)   max(s)  |
|          | ----------- --- -------- --------- -------- |
|          |  mapValues   1   7.279     7.279    7.279   |
|          |    count     3   0.496     0.165     0.27   |
|          |    load      1   0.474     0.474    0.474   |
|          |    join      1   0.244     0.244    0.244   |
+----------+---------------------------------------------+
|  total   |  n=6, sum=8.4928, mean=1.4155, max=7.2791   |
+----------+---------------------------------------------+

Federation:
+--------+-------------------------------------------------------------------------------------------------------------+
|  get   |                                    name                                    | n | sum(s) | mean(s) | max(s)  |
|        | ---------------------------------------------------------------------------+---+--------+---------+-------- |
|        |  federatedml.transfer_variable.transfer_class.raw_intersect_transfer_varia | 1 | 1.828  |  1.828  | 1.828   |
|        |            ble.RawIntersectTransferVariable.intersect_ids_guest            |   |        |         |         |
+--------+-------------------------------------------------------------------------------------------------------------+
| remote |                                    name                                    | n | sum(s) | mean(s) | max(s)  |
|        | ---------------------------------------------------------------------------+---+--------+---------+-------- |
|        |  federatedml.transfer_variable.transfer_class.raw_intersect_transfer_varia | 1 | 0.011  |  0.011  | 0.011   |
|        |               ble.RawIntersectTransferVariable.send_ids_host               |   |        |         |         |
+--------+-------------------------------------------------------------------------------------------------------------+
| total  |                                  n=2, sum=1.8390, mean=0.9195, max=1.8282                                   |
+--------+-------------------------------------------------------------------------------------------------------------+

[INFO] [2020-11-20 07:12:18,697] [20244:139871588984640] - intersect_model.py[line:168]: intersect_ids count:569
[INFO] [2020-11-20 07:12:18,700] [20244:139871588984640] - intersect_model.py[line:169]: intersect_ids header schema:{'header': ['x0', 'x1', 'x2', 'x3', 'x4', 'x5', 'x6', 'x7', 'x8', 'x9', 'x10', 'x11', 'x12', 'x13', 'x14', 'x15', 'x16', 'x17', 'x18', 'x19'], 'sid_name': 'id', 'label_name': 'y'}
[DEBUG] [2020-11-20 07:12:19,305] [20244:139871588984640] - peewee.py[line:2863]: ('INSERT INTO `t_storage_table_meta` (`f_create_date`, `f_update_date`, `f_name`, `f_namespace`, `f_address`, `f_engine`, `f_type`, `f_options`, `f_partitions`, `f_in_serialized`, `f_have_head`, `f_schema`, `f_count`, `f_part_of_data`, `f_description`, `f_create_time`, `f_update_time`) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)', [datetime.datetime(2020, 11, 20, 7, 12, 19), datetime.datetime(2020, 11, 20, 7, 12, 19), 'b9cac0762aff11eba0823ea3df35c0a6', 'output_data_202011200707112994524_intersection_0_0', '{"host": null, "port": null, "name": "b9cac0762aff11eba0823ea3df35c0a6", "namespace": "output_data_202011200707112994524_intersection_0_0", "storage_type": "LMDB", "home": null}', 'EGGROLL', 'LMDB', '{}', 4, True, True, 'gAN9cQAoWAYAAABoZWFkZXJxAV1xAihYAgAAAHgwcQNYAgAAAHgxcQRYAgAAAHgycQVYAgAAAHgzcQZYAgAAAHg0cQdYAgAAAHg1cQhYAgAAAHg2cQlYAgAAAHg3cQpYAgAAAHg4cQtYAgAAAHg5cQxYAwAAAHgxMHENWAMAAAB4MTFxDlgDAAAAeDEycQ9YAwAAAHgxM3EQWAMAAAB4MTRxEVgDAAAAeDE1cRJYAwAAAHgxNnETWAMAAAB4MTdxFFgDAAAAeDE4cRVYAwAAAHgxOXEWZVgIAAAAc2lkX25hbWVxF1gCAAAAaWRxGFgKAAAAbGFiZWxfbmFtZXEZWAEAAAB5cRp1Lg==', 569, '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', '', 1605856339268, 1605856339271])
[DEBUG] [2020-11-20 07:12:19,341] [20244:139871588984640] - pool.py[line:185]: Returning 139871265237704 to pool.
[DEBUG] [2020-11-20 07:12:19,343] [20244:139871588984640] - pool.py[line:129]: No connection available in pool.
[DEBUG] [2020-11-20 07:12:19,386] [20244:139871588984640] - pool.py[line:158]: Created new connection 139871143000104.
[DEBUG] [2020-11-20 07:12:19,390] [20244:139871588984640] - peewee.py[line:2863]: ('SELECT table_name FROM information_schema.tables WHERE table_schema = DATABASE() AND table_type != %s ORDER BY table_name', ('VIEW',))
[DEBUG] [2020-11-20 07:12:19,409] [20244:139871588984640] - peewee.py[line:2863]: ('INSERT INTO `t_tracking_output_data_info_20201120` (`f_create_time`, `f_job_id`, `f_component_name`, `f_task_id`, `f_task_version`, `f_data_name`, `f_role`, `f_party_id`, `f_table_name`, `f_table_namespace`, `f_description`) VALUES (%s, %s, %s, %s, %s, %s, %s, %s, %s, %s, %s)', [1605856339389, '202011200707112994524', 'intersection_0', '202011200707112994524_intersection_0', 0, 'data', 'host', '9999', 'b9cac0762aff11eba0823ea3df35c0a6', 'output_data_202011200707112994524_intersection_0_0', ''])
[DEBUG] [2020-11-20 07:12:19,425] [20244:139871588984640] - pool.py[line:185]: Returning 139871143000104 to pool.
[INFO] [2020-11-20 07:12:19,427] [20244:139871588984640] - task_executor.py[line:302]: report task 202011200707112994524_intersection_0 0 host 9999 to driver
[INFO] [2020-11-20 07:12:19,428] [20244:139871588984640] - control_client.py[line:42]: request update job 202011200707112994524 task 202011200707112994524_intersection_0 0 on host 9999
[INFO] [2020-11-20 07:12:20,916] [20244:139871588984640] - task_executor.py[line:207]: task 202011200707112994524_intersection_0 host 9999 start time: 2020-11-20 07:11:49
[INFO] [2020-11-20 07:12:20,917] [20244:139871588984640] - task_executor.py[line:209]: task 202011200707112994524_intersection_0 host 9999 end time: 2020-11-20 07:12:19
[INFO] [2020-11-20 07:12:20,918] [20244:139871588984640] - task_executor.py[line:211]: task 202011200707112994524_intersection_0 host 9999 takes 29.984s
[INFO] [2020-11-20 07:12:20,919] [20244:139871588984640] - task_executor.py[line:214]: Finish 202011200707112994524 intersection_0 202011200707112994524_intersection_0 0 host 9999 task success
[INFO] [2020-11-20 07:12:20,921] [20244:139871588984640] - task_executor.py[line:302]: report task 202011200707112994524_intersection_0 0 host 9999 to driver
[INFO] [2020-11-20 07:12:20,922] [20244:139871588984640] - control_client.py[line:42]: request update job 202011200707112994524 task 202011200707112994524_intersection_0 0 on host 9999
[INFO] [2020-11-20 07:12:48,465] [20527:139871606757184] - task_executor.py[line:302]: report task 202011200707112994524_hetero_secure_boost_0 0 host 9999 to driver
[INFO] [2020-11-20 07:12:48,469] [20527:139871606757184] - control_client.py[line:42]: request update job 202011200707112994524 task 202011200707112994524_hetero_secure_boost_0 0 on host 9999
[DEBUG] [2020-11-20 07:13:00,735] [20527:139871606757184] - _federation.py[line:35]: [federation.eggroll]init federation: rp_session_id=202011200707112994524_hetero_secure_boost_0_0_host_9999, rs_session_id=202011200707112994524_hetero_secure_boost_0_0, party=Party(role=host, party_id=9999), proxy_endpoint=rollsite:9370
[DEBUG] [2020-11-20 07:13:00,739] [20527:139871606757184] - _federation.py[line:45]: [federation.eggroll]init federation context done
[INFO] [2020-11-20 07:13:00,740] [20527:139871606757184] - task_executor.py[line:156]: Run 202011200707112994524 hetero_secure_boost_0 202011200707112994524_hetero_secure_boost_0 host 9999 task
[INFO] [2020-11-20 07:13:00,743] [20527:139871606757184] - task_executor.py[line:157]: Component parameters on party {'HeteroSecureBoostParam': {'task_type': 'classification', 'objective_param': {'objective': 'cross_entropy', 'params': None}, 'learning_rate': 0.3, 'num_trees': 3, 'subsample_feature_rate': 1.0, 'n_iter_no_change': True, 'tol': 0.0001, 'bin_num': 32, 'predict_param': {'threshold': 0.5}, 'cv_param': {'n_splits': 5, 'mode': 'hetero', 'role': 'guest', 'shuffle': True, 'random_seed': 1, 'need_cv': False}, 'validation_freqs': 1, 'metrics': None, 'subsample_random_seed': None, 'binning_error': 0.001, 'encrypt_param': {'method': 'iterativeAffine', 'key_length': 1024}, 'encrypted_mode_calculator_param': {'mode': 'strict', 're_encrypted_rate': 1}, 'early_stopping_rounds': None, 'use_first_metric_only': False, 'tree_param': {'criterion_method': 'xgboost', 'criterion_params': [0.1], 'max_depth': 3, 'min_sample_split': 2, 'min_impurity_split': 0.001, 'min_leaf_node': 1, 'max_split_nodes': 65536, 'feature_importance_type': 'split', 'n_iter_no_change': True, 'tol': 0.001, 'use_missing': False, 'zero_as_missing': False}, 'zero_as_missing': False, 'use_missing': False, 'complete_secure': False, 'sparse_optimization': False}, 'dsl_version': 2, 'initiator': {'role': 'guest', 'party_id': 10000}, 'role': {'host': [9999], 'guest': [10000]}, 'job_parameters': {'job_type': 'train', 'work_mode': 1, 'backend': 0, 'computing_engine': 'EGGROLL', 'federation_engine': 'EGGROLL', 'storage_engine': 'EGGROLL', 'engines_address': {'computing': {'cores_per_node': 20, 'nodes': 1}, 'federation': {'host': 'rollsite', 'port': 9370}, 'storage': {'cores_per_node': 20, 'nodes': 1}}, 'federated_mode': 'MULTIPLE', 'task_parallelism': 1, 'computing_partitions': 4, 'federated_status_collect_type': 'PUSH', 'model_id': 'guest-10000#host-9999#model', 'model_version': '202011200707112994524', 'eggroll_run': {'eggroll.session.processors.per.node': 4}, 'spark_run': {}, 'rabbitmq_run': {}, 'adaptation_parameters': {'task_nodes': 1, 'task_cores_per_node': 4, 'task_memory_per_node': 0}}, 'component_parameters': {'common': {'hetero_secure_boost_0': {'task_type': 'classification', 'objective_param': {'objective': 'cross_entropy'}, 'num_trees': 3, 'validation_freqs': 1, 'encrypt_param': {'method': 'iterativeAffine'}, 'tree_param': {'max_depth': 3}}, 'evaluation_0': {'eval_type': 'binary'}}, 'role': {'guest': {'0': {'reader_1': {'table': {'name': 'breast_hetero_guest', 'namespace': 'experiment'}}, 'reader_0': {'table': {'name': 'breast_hetero_guest', 'namespace': 'experiment'}}, 'dataio_0': {'with_label': True, 'output_format': 'dense'}, 'dataio_1': {'with_label': True, 'output_format': 'dense'}}}, 'host': {'0': {'reader_1': {'table': {'name': 'breast_hetero_host', 'namespace': 'experiment'}}, 'reader_0': {'table': {'name': 'breast_hetero_host', 'namespace': 'experiment'}}, 'dataio_0': {'with_label': False}, 'dataio_1': {'with_label': False}}}}}, 'config': '/data/projects/fate/python/fate_flow/examples/hetero_secureboost_conf.json', 'dsl': 'examples/hetero_secureboost_dsl.json', 'function': 'submit_job', 'local': {'role': 'host', 'party_id': 9999}, 'CodePath': 'federatedml/ensemble/boosting/hetero/hetero_secureboost_host.py/HeteroSecureBoostingTreeHost', 'module': 'HeteroSecureBoost', 'output_data_name': ['data']}
[INFO] [2020-11-20 07:13:00,744] [20527:139871606757184] - task_executor.py[line:158]: Task input dsl {'data': {'train_data': ['intersection_0.data'], 'validate_data': ['intersection_1.data']}}
[INFO] [2020-11-20 07:13:00,745] [20527:139871606757184] - tracker_client.py[line:150]: Request read job 202011200707112994524 task None None on host 9999 data data info
[DEBUG] [2020-11-20 07:13:00,804] [20527:139871606757184] - pool.py[line:129]: No connection available in pool.
[DEBUG] [2020-11-20 07:13:00,838] [20527:139871606757184] - pool.py[line:158]: Created new connection 139871324953288.
[DEBUG] [2020-11-20 07:13:00,857] [20527:139871606757184] - peewee.py[line:2863]: ('SELECT `t1`.`f_create_date`, `t1`.`f_update_date`, `t1`.`f_name`, `t1`.`f_namespace`, `t1`.`f_address`, `t1`.`f_engine`, `t1`.`f_type`, `t1`.`f_options`, `t1`.`f_partitions`, `t1`.`f_id_delimiter`, `t1`.`f_in_serialized`, `t1`.`f_have_head`, `t1`.`f_schema`, `t1`.`f_count`, `t1`.`f_part_of_data`, `t1`.`f_description`, `t1`.`f_create_time`, `t1`.`f_update_time` FROM `t_storage_table_meta` AS `t1` WHERE ((`t1`.`f_name` = %s) AND (`t1`.`f_namespace` = %s))', ['b9cac0762aff11eba0823ea3df35c0a6', 'output_data_202011200707112994524_intersection_0_0'])
[DEBUG] [2020-11-20 07:13:00,874] [20527:139871606757184] - pool.py[line:185]: Returning 139871324953288 to pool.
[INFO] [2020-11-20 07:13:00,876] [20527:139871606757184] - task_executor.py[line:260]: load computing table use 4
[INFO] [2020-11-20 07:13:01,363] [20527:139871606757184] - tracker_client.py[line:150]: Request read job 202011200707112994524 task None None on host 9999 data data info
[DEBUG] [2020-11-20 07:13:01,443] [20527:139871606757184] - peewee.py[line:2863]: ('SELECT `t1`.`f_create_date`, `t1`.`f_update_date`, `t1`.`f_name`, `t1`.`f_namespace`, `t1`.`f_address`, `t1`.`f_engine`, `t1`.`f_type`, `t1`.`f_options`, `t1`.`f_partitions`, `t1`.`f_id_delimiter`, `t1`.`f_in_serialized`, `t1`.`f_have_head`, `t1`.`f_schema`, `t1`.`f_count`, `t1`.`f_part_of_data`, `t1`.`f_description`, `t1`.`f_create_time`, `t1`.`f_update_time` FROM `t_storage_table_meta` AS `t1` WHERE ((`t1`.`f_name` = %s) AND (`t1`.`f_namespace` = %s))', ['96be3f402aff11eb99d93ea3df35c0a6', 'output_data_202011200707112994524_intersection_1_0'])
[DEBUG] [2020-11-20 07:13:01,459] [20527:139871606757184] - pool.py[line:185]: Returning 139871324953288 to pool.
[INFO] [2020-11-20 07:13:01,460] [20527:139871606757184] - task_executor.py[line:260]: load computing table use 4
[DEBUG] [2020-11-20 07:13:13,409] [20527:139871606757184] - boosting_param.py[line:56]: check objective cross_entropy
[DEBUG] [2020-11-20 07:13:13,412] [20527:139871606757184] - encrypt_param.py[line:71]: Finish encrypt parameter check!
[DEBUG] [2020-11-20 07:13:13,413] [20527:139871606757184] - component_properties.py[line:73]: {'HeteroSecureBoostParam': {'task_type': 'classification', 'objective_param': {'objective': 'cross_entropy', 'params': None}, 'learning_rate': 0.3, 'num_trees': 3, 'subsample_feature_rate': 1.0, 'n_iter_no_change': True, 'tol': 0.0001, 'bin_num': 32, 'predict_param': {'threshold': 0.5}, 'cv_param': {'n_splits': 5, 'mode': 'hetero', 'role': 'guest', 'shuffle': True, 'random_seed': 1, 'need_cv': False}, 'validation_freqs': 1, 'metrics': None, 'subsample_random_seed': None, 'binning_error': 0.001, 'encrypt_param': {'method': 'iterativeAffine', 'key_length': 1024}, 'encrypted_mode_calculator_param': {'mode': 'strict', 're_encrypted_rate': 1}, 'early_stopping_rounds': None, 'use_first_metric_only': False, 'tree_param': {'criterion_method': 'xgboost', 'criterion_params': [0.1], 'max_depth': 3, 'min_sample_split': 2, 'min_impurity_split': 0.001, 'min_leaf_node': 1, 'max_split_nodes': 65536, 'feature_importance_type': 'split', 'n_iter_no_change': True, 'tol': 0.001, 'use_missing': False, 'zero_as_missing': False}, 'zero_as_missing': False, 'use_missing': False, 'complete_secure': False, 'sparse_optimization': False}, 'dsl_version': 2, 'initiator': {'role': 'guest', 'party_id': 10000}, 'role': {'host': [9999], 'guest': [10000]}, 'job_parameters': {'job_type': 'train', 'work_mode': 1, 'backend': 0, 'computing_engine': 'EGGROLL', 'federation_engine': 'EGGROLL', 'storage_engine': 'EGGROLL', 'engines_address': {'computing': {'cores_per_node': 20, 'nodes': 1}, 'federation': {'host': 'rollsite', 'port': 9370}, 'storage': {'cores_per_node': 20, 'nodes': 1}}, 'federated_mode': 'MULTIPLE', 'task_parallelism': 1, 'computing_partitions': 4, 'federated_status_collect_type': 'PUSH', 'model_id': 'guest-10000#host-9999#model', 'model_version': '202011200707112994524', 'eggroll_run': {'eggroll.session.processors.per.node': 4}, 'spark_run': {}, 'rabbitmq_run': {}, 'adaptation_parameters': {'task_nodes': 1, 'task_cores_per_node': 4, 'task_memory_per_node': 0}}, 'component_parameters': {'common': {'hetero_secure_boost_0': {'task_type': 'classification', 'objective_param': {'objective': 'cross_entropy'}, 'num_trees': 3, 'validation_freqs': 1, 'encrypt_param': {'method': 'iterativeAffine'}, 'tree_param': {'max_depth': 3}}, 'evaluation_0': {'eval_type': 'binary'}}, 'role': {'guest': {'0': {'reader_1': {'table': {'name': 'breast_hetero_guest', 'namespace': 'experiment'}}, 'reader_0': {'table': {'name': 'breast_hetero_guest', 'namespace': 'experiment'}}, 'dataio_0': {'with_label': True, 'output_format': 'dense'}, 'dataio_1': {'with_label': True, 'output_format': 'dense'}}}, 'host': {'0': {'reader_1': {'table': {'name': 'breast_hetero_host', 'namespace': 'experiment'}}, 'reader_0': {'table': {'name': 'breast_hetero_host', 'namespace': 'experiment'}}, 'dataio_0': {'with_label': False}, 'dataio_1': {'with_label': False}}}}}, 'config': '/data/projects/fate/python/fate_flow/examples/hetero_secureboost_conf.json', 'dsl': 'examples/hetero_secureboost_dsl.json', 'function': 'submit_job', 'local': {'role': 'host', 'party_id': 9999}, 'CodePath': 'federatedml/ensemble/boosting/hetero/hetero_secureboost_host.py/HeteroSecureBoostingTreeHost', 'module': 'HeteroSecureBoost', 'output_data_name': ['data']}
[DEBUG] [2020-11-20 07:13:13,416] [20527:139871606757184] - component_properties.py[line:80]: need_run: True, need_cv: False
[DEBUG] [2020-11-20 07:13:13,417] [20527:139871606757184] - hetero_boosting.py[line:52]: in hetero boosting, objective param is cross_entropy
[DEBUG] [2020-11-20 07:13:13,419] [20527:139871606757184] - component_properties.py[line:102]: parse_dsl_args data_sets: {'intersection_0': {'train_data': [<fate_arch.computing.eggroll._table.Table object at 0x7f364fdcd780>]}, 'intersection_1': {'validate_data': [<fate_arch.computing.eggroll._table.Table object at 0x7f364fda4fd0>]}}
[DEBUG] [2020-11-20 07:13:13,420] [20527:139871606757184] - component_properties.py[line:112]: [Data Parser], has_train_data: True
[DEBUG] [2020-11-20 07:13:13,421] [20527:139871606757184] - component_properties.py[line:112]: [Data Parser], has_eval_data: False
[DEBUG] [2020-11-20 07:13:13,422] [20527:139871606757184] - component_properties.py[line:112]: [Data Parser], has_validate_data: False
[DEBUG] [2020-11-20 07:13:13,422] [20527:139871606757184] - component_properties.py[line:112]: [Data Parser], has_test_data: False
[DEBUG] [2020-11-20 07:13:13,423] [20527:139871606757184] - component_properties.py[line:112]: [Data Parser], has_train_data: True
[DEBUG] [2020-11-20 07:13:13,424] [20527:139871606757184] - component_properties.py[line:112]: [Data Parser], has_eval_data: False
[DEBUG] [2020-11-20 07:13:13,425] [20527:139871606757184] - component_properties.py[line:112]: [Data Parser], has_validate_data: True
[DEBUG] [2020-11-20 07:13:13,425] [20527:139871606757184] - component_properties.py[line:112]: [Data Parser], has_test_data: False
[DEBUG] [2020-11-20 07:13:13,427] [20527:139871606757184] - component_properties.py[line:118]: [Data Parser], has_normal_data: False
[DEBUG] [2020-11-20 07:13:13,427] [20527:139871606757184] - component_properties.py[line:179]: Input data_sets: {'intersection_0': {'train_data': [<fate_arch.computing.eggroll._table.Table object at 0x7f364fdcd780>]}, 'intersection_1': {'validate_data': [<fate_arch.computing.eggroll._table.Table object at 0x7f364fda4fd0>]}}
[DEBUG] [2020-11-20 07:13:13,798] [20527:139871606757184] - profile.py[line:84]: [computing#a07e8b9a9c]function_stack: [component_properties.py:221]extract_input_data <-[component_properties.py:238]extract_running_rules <-[model_base.py:87]run
[DEBUG] [2020-11-20 07:13:13,800] [20527:139871606757184] - profile.py[line:87]: [computing#a07e8b9a9c]start
[DEBUG] [2020-11-20 07:13:13,859] [20527:139871606757184] - profile.py[line:93]: [computing#a07e8b9a9c]done, elapse: 0.06117820739746094, function: count(self: Table(partition=4)) -> int
[DEBUG] [2020-11-20 07:13:13,863] [20527:139871606757184] - profile.py[line:84]: [computing#15f4099d8f]function_stack: [component_properties.py:228]extract_input_data <-[component_properties.py:238]extract_running_rules <-[model_base.py:87]run
[DEBUG] [2020-11-20 07:13:13,864] [20527:139871606757184] - profile.py[line:87]: [computing#15f4099d8f]start
[DEBUG] [2020-11-20 07:13:13,918] [20527:139871606757184] - profile.py[line:93]: [computing#15f4099d8f]done, elapse: 0.05515861511230469, function: count(self: Table(partition=4)) -> int
[DEBUG] [2020-11-20 07:13:13,920] [20527:139871606757184] - component_properties.py[line:231]: train_data: <fate_arch.computing.eggroll._table.Table object at 0x7f364fdcd780>, validate_data: <fate_arch.computing.eggroll._table.Table object at 0x7f364fda4fd0>, test_data: None, data: {}
[DEBUG] [2020-11-20 07:13:13,921] [20527:139871606757184] - model_base.py[line:88]: running_funcs: [<bound method ModelBase.set_flowid of <federatedml.ensemble.boosting.hetero.hetero_secureboost_host.HeteroSecureBoostingTreeHost object at 0x7f3654a864a8>>, <bound method HeteroBoostingHost.fit of <federatedml.ensemble.boosting.hetero.hetero_secureboost_host.HeteroSecureBoostingTreeHost object at 0x7f3654a864a8>>, <bound method ModelBase.set_flowid of <federatedml.ensemble.boosting.hetero.hetero_secureboost_host.HeteroSecureBoostingTreeHost object at 0x7f3654a864a8>>, <bound method assert_io_num_rows_equal.<locals>._func of <federatedml.ensemble.boosting.hetero.hetero_secureboost_host.HeteroSecureBoostingTreeHost object at 0x7f3654a864a8>>, <bound method ModelBase.set_flowid of <federatedml.ensemble.boosting.hetero.hetero_secureboost_host.HeteroSecureBoostingTreeHost object at 0x7f3654a864a8>>, <bound method assert_io_num_rows_equal.<locals>._func of <federatedml.ensemble.boosting.hetero.hetero_secureboost_host.HeteroSecureBoostingTreeHost object at 0x7f3654a864a8>>, <function ComponentProperties.union_data at 0x7f35893b8400>, <function ModelBase.set_predict_data_schema at 0x7f35893bc598>]
[DEBUG] [2020-11-20 07:13:13,922] [20527:139871606757184] - model_base.py[line:162]: set flowid to transfer_variable, flowid: fit
[INFO] [2020-11-20 07:13:13,922] [20527:139871606757184] - hetero_boosting.py[line:278]: begin to fit a hetero boosting model, model is HeteroSecureBoost
[DEBUG] [2020-11-20 07:13:13,924] [20527:139871606757184] - boosting.py[line:235]: fid_mapping is {0: 'x0', 1: 'x1', 2: 'x2', 3: 'x3', 4: 'x4', 5: 'x5', 6: 'x6', 7: 'x7', 8: 'x8', 9: 'x9', 10: 'x10', 11: 'x11', 12: 'x12', 13: 'x13', 14: 'x14', 15: 'x15', 16: 'x16', 17: 'x17', 18: 'x18', 19: 'x19'}
[DEBUG] [2020-11-20 07:13:13,932] [20527:139871606757184] - profile.py[line:84]: [computing#de336494f6]function_stack: [abnormal_detection.py:27]empty_table_detection <-[boosting.py:201]data_alignment <-[boosting.py:247]prepare_data <-[hetero_boosting.py:280]fit <-[model_base.py:101]run
[DEBUG] [2020-11-20 07:13:13,933] [20527:139871606757184] - profile.py[line:87]: [computing#de336494f6]start
[DEBUG] [2020-11-20 07:13:13,998] [20527:139871606757184] - profile.py[line:93]: [computing#de336494f6]done, elapse: 0.06695771217346191, function: count(self: Table(partition=4)) -> int
[DEBUG] [2020-11-20 07:13:14,005] [20527:139871606757184] - profile.py[line:84]: [computing#02efa0b870]function_stack: [data_overview.py:27]get_features_shape <-[data_overview.py:105]is_empty_feature <-[abnormal_detection.py:33]empty_feature_detection <-[boosting.py:202]data_alignment <-[boosting.py:247]prepare_data <-[hetero_boosting.py:280]fit <-[model_base.py:101]run
[DEBUG] [2020-11-20 07:13:14,006] [20527:139871606757184] - profile.py[line:87]: [computing#02efa0b870]start
[DEBUG] [2020-11-20 07:13:14,226] [20527:139871606757184] - profile.py[line:93]: [computing#02efa0b870]done, elapse: 0.22114992141723633, function: first(self: Table(partition=4)) -> tuple
[DEBUG] [2020-11-20 07:13:14,230] [20527:139871606757184] - profile.py[line:84]: [computing#c30e809883]function_stack: [boosting.py:204]data_alignment <-[boosting.py:247]prepare_data <-[hetero_boosting.py:280]fit <-[model_base.py:101]run
[DEBUG] [2020-11-20 07:13:14,231] [20527:139871606757184] - profile.py[line:87]: [computing#c30e809883]start
[DEBUG] [2020-11-20 07:13:26,905] [20527:139871606757184] - profile.py[line:93]: [computing#c30e809883]done, elapse: 12.675543069839478, function: mapValues(self: Table(partition=4), func: function) -> Table(partition=4)
[INFO] [2020-11-20 07:13:26,907] [20527:139871606757184] - boosting.py[line:167]: convert feature to bins
[DEBUG] [2020-11-20 07:13:26,913] [20527:139871606757184] - profile.py[line:84]: [computing#5629b1f429]function_stack: [data_overview.py:112]is_sparse_data <-[quantile_binning.py:85]fit_split_points <-[boosting.py:175]convert_feature_to_bin <-[boosting.py:248]prepare_data <-[hetero_boosting.py:280]fit <-[model_base.py:101]run
[DEBUG] [2020-11-20 07:13:26,914] [20527:139871606757184] - profile.py[line:87]: [computing#5629b1f429]start
[DEBUG] [2020-11-20 07:13:27,101] [20527:139871606757184] - profile.py[line:93]: [computing#5629b1f429]done, elapse: 0.1878948211669922, function: first(self: Table(partition=4)) -> tuple
[DEBUG] [2020-11-20 07:13:27,105] [20527:139871606757184] - profile.py[line:84]: [computing#e1af574c60]function_stack: [quantile_binning.py:105]_fit_split_point <-[quantile_binning.py:87]fit_split_points <-[boosting.py:175]convert_feature_to_bin <-[boosting.py:248]prepare_data <-[hetero_boosting.py:280]fit <-[model_base.py:101]run
[DEBUG] [2020-11-20 07:13:27,106] [20527:139871606757184] - profile.py[line:87]: [computing#e1af574c60]start
[DEBUG] [2020-11-20 07:13:33,026] [20527:139871606757184] - profile.py[line:93]: [computing#e1af574c60]done, elapse: 5.921027898788452, function: mapReducePartitions(self: Table(partition=4), mapper: partial, reducer: function) -> Table(partition=4)
[DEBUG] [2020-11-20 07:13:33,030] [20527:139871606757184] - profile.py[line:84]: [computing#3537cde715]function_stack: [quantile_binning.py:106]_fit_split_point <-[quantile_binning.py:87]fit_split_points <-[boosting.py:175]convert_feature_to_bin <-[boosting.py:248]prepare_data <-[hetero_boosting.py:280]fit <-[model_base.py:101]run
[DEBUG] [2020-11-20 07:13:33,031] [20527:139871606757184] - profile.py[line:87]: [computing#3537cde715]start
[DEBUG] [2020-11-20 07:13:33,036] [20527:139871606757184] - profile.py[line:93]: [computing#3537cde715]done, elapse: 0.006547689437866211, function: collect(self: Table(partition=4)) -> generator
[DEBUG] [2020-11-20 07:13:33,521] [20527:139871606757184] - quantile_binning.py[line:108]: new summary_dict: {'x0': <federatedml.feature.binning.quantile_summaries.SparseQuantileSummaries object at 0x7f35809fe160>, 'x4': <federatedml.feature.binning.quantile_summaries.SparseQuantileSummaries object at 0x7f3580a0f320>, 'x8': <federatedml.feature.binning.quantile_summaries.SparseQuantileSummaries object at 0x7f35809b3518>, 'x11': <federatedml.feature.binning.quantile_summaries.SparseQuantileSummaries object at 0x7f35809cf438>, 'x15': <federatedml.feature.binning.quantile_summaries.SparseQuantileSummaries object at 0x7f35809feda0>, 'x19': <federatedml.feature.binning.quantile_summaries.SparseQuantileSummaries object at 0x7f358096a2e8>, 'x3': <federatedml.feature.binning.quantile_summaries.SparseQuantileSummaries object at 0x7f3580935e80>, 'x7': <federatedml.feature.binning.quantile_summaries.SparseQuantileSummaries object at 0x7f358099a0f0>, 'x10': <federatedml.feature.binning.quantile_summaries.SparseQuantileSummaries object at 0x7f3580952f98>, 'x14': <federatedml.feature.binning.quantile_summaries.SparseQuantileSummaries object at 0x7f35808ede80>, 'x18': <federatedml.feature.binning.quantile_summaries.SparseQuantileSummaries object at 0x7f3580909d68>, 'x2': <federatedml.feature.binning.quantile_summaries.SparseQuantileSummaries object at 0x7f35809fedd8>, 'x6': <federatedml.feature.binning.quantile_summaries.SparseQuantileSummaries object at 0x7f35808c0c50>, 'x13': <federatedml.feature.binning.quantile_summaries.SparseQuantileSummaries object at 0x7f35808dcb00>, 'x17': <federatedml.feature.binning.quantile_summaries.SparseQuantileSummaries object at 0x7f3580879a20>, 'x1': <federatedml.feature.binning.quantile_summaries.SparseQuantileSummaries object at 0x7f35808c0b70>, 'x5': <federatedml.feature.binning.quantile_summaries.SparseQuantileSummaries object at 0x7f358082f908>, 'x9': <federatedml.feature.binning.quantile_summaries.SparseQuantileSummaries object at 0x7f358084b7b8>, 'x12': <federatedml.feature.binning.quantile_summaries.SparseQuantileSummaries object at 0x7f35807e66d8>, 'x16': <federatedml.feature.binning.quantile_summaries.SparseQuantileSummaries object at 0x7f35808025c0>}
[DEBUG] [2020-11-20 07:13:33,527] [20527:139871606757184] - profile.py[line:84]: [computing#be0ba22659]function_stack: [quantile_binning.py:110]_fit_split_point <-[quantile_binning.py:87]fit_split_points <-[boosting.py:175]convert_feature_to_bin <-[boosting.py:248]prepare_data <-[hetero_boosting.py:280]fit <-[model_base.py:101]run
[DEBUG] [2020-11-20 07:13:33,527] [20527:139871606757184] - profile.py[line:87]: [computing#be0ba22659]start
[DEBUG] [2020-11-20 07:13:33,634] [20527:139871606757184] - profile.py[line:93]: [computing#be0ba22659]done, elapse: 0.10732221603393555, function: count(self: Table(partition=4)) -> int
[DEBUG] [2020-11-20 07:13:33,980] [20527:139871606757184] - profile.py[line:84]: [computing#47cb3ae6bd]function_stack: [data_overview.py:112]is_sparse_data <-[base_binning.py:98]fit_category_features <-[quantile_binning.py:89]fit_split_points <-[boosting.py:175]convert_feature_to_bin <-[boosting.py:248]prepare_data <-[hetero_boosting.py:280]fit <-[model_base.py:101]run
[DEBUG] [2020-11-20 07:13:33,982] [20527:139871606757184] - profile.py[line:87]: [computing#47cb3ae6bd]start
[DEBUG] [2020-11-20 07:13:34,366] [20527:139871606757184] - profile.py[line:93]: [computing#47cb3ae6bd]done, elapse: 0.3857259750366211, function: first(self: Table(partition=4)) -> tuple
[INFO] [2020-11-20 07:13:34,371] [20527:139871606757184] - boosting.py[line:176]: convert feature to bins over
[DEBUG] [2020-11-20 07:13:34,375] [20527:139871606757184] - profile.py[line:84]: [computing#bc72babc90]function_stack: [data_overview.py:112]is_sparse_data <-[base_binning.py:188]convert_feature_to_bin <-[boosting.py:177]convert_feature_to_bin <-[boosting.py:248]prepare_data <-[hetero_boosting.py:280]fit <-[model_base.py:101]run
[DEBUG] [2020-11-20 07:13:34,377] [20527:139871606757184] - profile.py[line:87]: [computing#bc72babc90]start
[DEBUG] [2020-11-20 07:13:34,618] [20527:139871606757184] - profile.py[line:93]: [computing#bc72babc90]done, elapse: 0.24258136749267578, function: first(self: Table(partition=4)) -> tuple
[DEBUG] [2020-11-20 07:13:34,622] [20527:139871606757184] - profile.py[line:84]: [computing#8f87651ece]function_stack: [base_binning.py:204]convert_feature_to_bin <-[boosting.py:177]convert_feature_to_bin <-[boosting.py:248]prepare_data <-[hetero_boosting.py:280]fit <-[model_base.py:101]run
[DEBUG] [2020-11-20 07:13:34,622] [20527:139871606757184] - profile.py[line:87]: [computing#8f87651ece]start
[DEBUG] [2020-11-20 07:13:35,186] [20527:139871606757184] - profile.py[line:93]: [computing#8f87651ece]done, elapse: 0.5639708042144775, function: mapValues(self: Table(partition=4), func: partial) -> Table(partition=4)
[INFO] [2020-11-20 07:13:35,189] [20527:139871606757184] - hetero_boosting.py[line:263]: sync booster dim from guest
[DEBUG] [2020-11-20 07:13:35,191] [20527:139871606757184] - profile.py[line:237]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_boosting_transfer_variable.HeteroBoostingTransferVariable.booster_dim.fit]host<-[Party(role=guest, party_id=10000)] start
[DEBUG] [2020-11-20 07:13:35,990] [20527:139871606757184] - _federation.py[line:196]: [federation.eggroll.get.hash.f46e984d79780a85fe85.booster_dim.fit] got object with type: <class 'int'>
[DEBUG] [2020-11-20 07:13:35,991] [20527:139871606757184] - profile.py[line:216]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_boosting_transfer_variable.HeteroBoostingTransferVariable.booster_dim.fit]host<-[Party(role=guest, party_id=10000)] done
[INFO] [2020-11-20 07:13:35,992] [20527:139871606757184] - hetero_boosting.py[line:265]: booster dim is 1
[INFO] [2020-11-20 07:13:35,993] [20527:139871606757184] - hetero_boosting.py[line:62]: generate encrypter
[DEBUG] [2020-11-20 07:13:36,004] [20527:139871606757184] - validation_strategy.py[line:85]: end to init validation_strategy, freqs is 1
[INFO] [2020-11-20 07:13:36,005] [20527:139871606757184] - hetero_boosting.py[line:288]: cur epoch idx is 0
[INFO] [2020-11-20 07:13:36,007] [20527:139871606757184] - splitter.py[line:59]: splitter init!
[INFO] [2020-11-20 07:13:36,011] [20527:139871606757184] - hetero_decision_tree_host.py[line:57]: set input info
[INFO] [2020-11-20 07:13:36,012] [20527:139871606757184] - boosting.py[line:181]: sample valid features
[INFO] [2020-11-20 07:13:36,015] [20527:139871606757184] - decision_tree.py[line:101]: set valid features
[INFO] [2020-11-20 07:13:36,016] [20527:139871606757184] - boosting.py[line:391]: generate flowid, flowid fit
[INFO] [2020-11-20 07:13:36,017] [20527:139871606757184] - decision_tree.py[line:93]: set flowid, flowid is fit.0.0
[INFO] [2020-11-20 07:13:36,019] [20527:139871606757184] - hetero_decision_tree_host.py[line:350]: begin to fit host decision tree
[INFO] [2020-11-20 07:13:36,020] [20527:139871606757184] - hetero_decision_tree_host.py[line:106]: get encrypted grad and hess
[DEBUG] [2020-11-20 07:13:36,021] [20527:139871606757184] - profile.py[line:237]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.encrypted_grad_and_hess.fit.0.0]host<-[Party(role=guest, party_id=10000)] start
[DEBUG] [2020-11-20 07:13:36,497] [20527:139871606757184] - _federation.py[line:176]: [federation.eggroll.get.hash.b8725f5e3437b75ee9a0.encrypted_grad_and_hess.fit.0.0] got RollPair(namespace=202011200707112994524_hetero_secure_boost_0_0, name=__rsk#202011200707112994524_hetero_secure_boost_0_0#hash.b8725f5e3437b75ee9a0.encrypted_grad_and_hess#fit.0.0#guest#10000#host#9999, partitions=4)
[DEBUG] [2020-11-20 07:13:36,499] [20527:139871606757184] - profile.py[line:216]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.encrypted_grad_and_hess.fit.0.0]host<-[Party(role=guest, party_id=10000)] done
[INFO] [2020-11-20 07:13:36,500] [20527:139871606757184] - hetero_decision_tree_host.py[line:116]: get tree node queue of depth 0
[DEBUG] [2020-11-20 07:13:36,502] [20527:139871606757184] - profile.py[line:237]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.tree_node_queue.fit.0.0.0]host<-[Party(role=guest, party_id=10000)] start
[DEBUG] [2020-11-20 07:13:37,115] [20527:139871606757184] - _federation.py[line:196]: [federation.eggroll.get.hash.5c76808850a6d1fe24d8.tree_node_queue.fit.0.0.0] got object with type: <class 'list'>
[DEBUG] [2020-11-20 07:13:37,118] [20527:139871606757184] - profile.py[line:216]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.tree_node_queue.fit.0.0.0]host<-[Party(role=guest, party_id=10000)] done
[INFO] [2020-11-20 07:13:37,119] [20527:139871606757184] - hetero_decision_tree_host.py[line:110]: get tree node queue of depth 0
[DEBUG] [2020-11-20 07:13:37,121] [20527:139871606757184] - profile.py[line:237]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.node_positions.fit.0.0.0]host<-[Party(role=guest, party_id=10000)] start
[DEBUG] [2020-11-20 07:13:37,483] [20527:139871606757184] - _federation.py[line:176]: [federation.eggroll.get.hash.a50d3aea493b835a213f.node_positions.fit.0.0.0] got RollPair(namespace=202011200707112994524_hetero_secure_boost_0_0, name=__rsk#202011200707112994524_hetero_secure_boost_0_0#hash.a50d3aea493b835a213f.node_positions#fit.0.0.0#guest#10000#host#9999, partitions=4)
[DEBUG] [2020-11-20 07:13:37,484] [20527:139871606757184] - profile.py[line:216]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.node_positions.fit.0.0.0]host<-[Party(role=guest, party_id=10000)] done
[DEBUG] [2020-11-20 07:13:37,493] [20527:139871606757184] - profile.py[line:84]: [computing#d30ffaa8fe]function_stack: [hetero_decision_tree_host.py:265]update_instances_node_positions <-[hetero_decision_tree_host.py:360]fit <-[hetero_secureboost_host.py:115]fit_a_booster <-[hetero_boosting.py:292]fit <-[model_base.py:101]run
[DEBUG] [2020-11-20 07:13:37,494] [20527:139871606757184] - profile.py[line:87]: [computing#d30ffaa8fe]start
[DEBUG] [2020-11-20 07:13:37,790] [20527:139871606757184] - profile.py[line:93]: [computing#d30ffaa8fe]done, elapse: 0.2966947555541992, function: join(self: Table(partition=4), other: Table(partition=4), func: function) -> Table(partition=4)
[INFO] [2020-11-20 07:13:37,791] [20527:139871606757184] - decision_tree.py[line:114]: start to get node histograms
[INFO] [2020-11-20 07:13:37,792] [20527:139871606757184] - feature_histogram.py[line:197]: bin_shape is (20, 32), node num is 1
[DEBUG] [2020-11-20 07:13:37,796] [20527:139871606757184] - profile.py[line:84]: [computing#a2ad454bc4]function_stack: [feature_histogram.py:208]calculate_histogram <-[decision_tree.py:119]get_local_histograms <-[hetero_decision_tree_host.py:326]compute_best_splits <-[hetero_decision_tree_host.py:365]fit <-[hetero_secureboost_host.py:115]fit_a_booster <-[hetero_boosting.py:292]fit <-[model_base.py:101]run
[DEBUG] [2020-11-20 07:13:37,798] [20527:139871606757184] - profile.py[line:87]: [computing#a2ad454bc4]start
[DEBUG] [2020-11-20 07:13:38,308] [20527:139871606757184] - profile.py[line:93]: [computing#a2ad454bc4]done, elapse: 0.5120577812194824, function: join(self: Table(partition=4), other: Table(partition=4), func: function) -> Table(partition=4)
[DEBUG] [2020-11-20 07:13:38,313] [20527:139871606757184] - profile.py[line:84]: [computing#7b3709c76f]function_stack: [feature_histogram.py:210]calculate_histogram <-[decision_tree.py:119]get_local_histograms <-[hetero_decision_tree_host.py:326]compute_best_splits <-[hetero_decision_tree_host.py:365]fit <-[hetero_secureboost_host.py:115]fit_a_booster <-[hetero_boosting.py:292]fit <-[model_base.py:101]run
[DEBUG] [2020-11-20 07:13:38,315] [20527:139871606757184] - profile.py[line:87]: [computing#7b3709c76f]start
[DEBUG] [2020-11-20 07:13:38,398] [20527:139871606757184] - profile.py[line:93]: [computing#7b3709c76f]done, elapse: 0.08545541763305664, function: count(self: Table(partition=4)) -> int
[DEBUG] [2020-11-20 07:13:38,402] [20527:139871606757184] - profile.py[line:84]: [computing#1564c72616]function_stack: [feature_histogram.py:227]calculate_histogram <-[decision_tree.py:119]get_local_histograms <-[hetero_decision_tree_host.py:326]compute_best_splits <-[hetero_decision_tree_host.py:365]fit <-[hetero_secureboost_host.py:115]fit_a_booster <-[hetero_boosting.py:292]fit <-[model_base.py:101]run
[DEBUG] [2020-11-20 07:13:38,403] [20527:139871606757184] - profile.py[line:87]: [computing#1564c72616]start
[DEBUG] [2020-11-20 07:13:41,044] [20527:139871606757184] - profile.py[line:93]: [computing#1564c72616]done, elapse: 2.642056465148926, function: mapReducePartitions(self: Table(partition=4), mapper: partial, reducer: partial) -> Table(partition=4)
[DEBUG] [2020-11-20 07:13:41,049] [20527:139871606757184] - profile.py[line:84]: [computing#7527fb9b70]function_stack: [feature_histogram.py:388]construct_table <-[feature_histogram.py:234]calculate_histogram <-[decision_tree.py:119]get_local_histograms <-[hetero_decision_tree_host.py:326]compute_best_splits <-[hetero_decision_tree_host.py:365]fit <-[hetero_secureboost_host.py:115]fit_a_booster <-[hetero_boosting.py:292]fit <-[model_base.py:101]run
[DEBUG] [2020-11-20 07:13:41,051] [20527:139871606757184] - profile.py[line:87]: [computing#7527fb9b70]start
[DEBUG] [2020-11-20 07:13:41,288] [20527:139871606757184] - profile.py[line:93]: [computing#7527fb9b70]done, elapse: 0.23892688751220703, function: mapValues(self: Table(partition=4), func: function) -> Table(partition=4)
[INFO] [2020-11-20 07:13:41,289] [20527:139871606757184] - splitter.py[line:236]: splitter find split of host
[DEBUG] [2020-11-20 07:13:41,293] [20527:139871606757184] - profile.py[line:84]: [computing#bf91c5c623]function_stack: [splitter.py:239]find_split_host <-[hetero_decision_tree_host.py:333]compute_best_splits <-[hetero_decision_tree_host.py:365]fit <-[hetero_secureboost_host.py:115]fit_a_booster <-[hetero_boosting.py:292]fit <-[model_base.py:101]run
[DEBUG] [2020-11-20 07:13:41,294] [20527:139871606757184] - profile.py[line:87]: [computing#bf91c5c623]start
[DEBUG] [2020-11-20 07:13:41,546] [20527:139871606757184] - profile.py[line:93]: [computing#bf91c5c623]done, elapse: 0.2524113655090332, function: mapValues(self: Table(partition=4), func: function) -> Table(partition=4)
[DEBUG] [2020-11-20 07:13:41,550] [20527:139871606757184] - profile.py[line:84]: [computing#8b18554d12]function_stack: [splitter.py:245]find_split_host <-[hetero_decision_tree_host.py:333]compute_best_splits <-[hetero_decision_tree_host.py:365]fit <-[hetero_secureboost_host.py:115]fit_a_booster <-[hetero_boosting.py:292]fit <-[model_base.py:101]run
[DEBUG] [2020-11-20 07:13:41,551] [20527:139871606757184] - profile.py[line:87]: [computing#8b18554d12]start
[DEBUG] [2020-11-20 07:13:41,555] [20527:139871606757184] - profile.py[line:93]: [computing#8b18554d12]done, elapse: 0.005158662796020508, function: collect(self: Table(partition=4)) -> generator
[DEBUG] [2020-11-20 07:13:41,919] [20527:139871606757184] - hetero_decision_tree_host.py[line:336]: sending en_splitinfo <federatedml.ensemble.basic_algorithms.decision_tree.tree_core.splitter.BigObjectTransfer object at 0x7f3580a07ba8>
[INFO] [2020-11-20 07:13:41,921] [20527:139871606757184] - hetero_decision_tree_host.py[line:121]: send encrypted splitinfo of depth 0, batch 0
[DEBUG] [2020-11-20 07:13:41,922] [20527:139871606757184] - profile.py[line:232]: [federation.remote.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.encrypted_splitinfo_host.fit.0.0.0.0]host->[Party(role=guest, party_id=10000)] start
[DEBUG] [2020-11-20 07:13:41,924] [20527:139871606757184] - _federation.py[line:76]: [federation.eggroll.remote.hash.3392347e7e0faef9835a.encrypted_splitinfo_host.fit.0.0.0.0[('guest', '10000')])]remote split object with type: <class 'federatedml.ensemble.basic_algorithms.decision_tree.tree_core.splitter.BigObjectTransfer'>
[DEBUG] [2020-11-20 07:13:41,959] [20527:139871606757184] - profile.py[line:185]: [federation.remote.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.encrypted_splitinfo_host.fit.0.0.0.0]host->[Party(role=guest, party_id=10000)] done
[INFO] [2020-11-20 07:13:41,961] [20527:139871606757184] - hetero_decision_tree_host.py[line:128]: get federated best splitinfo of depth 0, batch 0
[DEBUG] [2020-11-20 07:13:41,962] [20527:139871606757184] - profile.py[line:237]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.federated_best_splitinfo_host.fit.0.0.0.0]host<-[Party(role=guest, party_id=10000)] start
[DEBUG] [2020-11-20 07:13:44,527] [20527:139867784877824] - _federation.py[line:133]: [federation.eggroll.remote.hash.3392347e7e0faef9835a.encrypted_splitinfo_host.fit.0.0.0.0]future to remote to party: ('guest', '10000') done
[DEBUG] [2020-11-20 07:13:47,463] [20527:139871606757184] - _federation.py[line:196]: [federation.eggroll.get.hash.2037679d27978ce15bad.federated_best_splitinfo_host.fit.0.0.0.0] got object with type: <class 'list'>
[DEBUG] [2020-11-20 07:13:47,466] [20527:139871606757184] - profile.py[line:216]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.federated_best_splitinfo_host.fit.0.0.0.0]host<-[Party(role=guest, party_id=10000)] done
[INFO] [2020-11-20 07:13:47,467] [20527:139871606757184] - hetero_decision_tree_host.py[line:135]: send host final splitinfo of depth 0, batch 0
[DEBUG] [2020-11-20 07:13:47,468] [20527:139871606757184] - hetero_decision_tree_host.py[line:141]: sitename is host:9999, self.sitename is host:9999
[DEBUG] [2020-11-20 07:13:47,468] [20527:139871606757184] - hetero_decision_tree_host.py[line:154]: final split info is ['**fid 7, bid None, sum_grad<federatedml.secureprotol.iterative_affine.DeterministicIterativeAffineCiphertext object at 0x7f3582992be0>, sum_hess<federatedml.secureprotol.iterative_affine.DeterministicIterativeAffineCiphertext object at 0x7f3582992c18>, gain<federatedml.secureprotol.iterative_affine.DeterministicIterativeAffineCiphertext object at 0x7f358079c3c8>**']
[DEBUG] [2020-11-20 07:13:47,470] [20527:139871606757184] - profile.py[line:232]: [federation.remote.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.final_splitinfo_host.fit.0.0.0.0]host->[Party(role=guest, party_id=10000)] start
[DEBUG] [2020-11-20 07:13:47,471] [20527:139871606757184] - _federation.py[line:86]: [federation.eggroll.remote.hash.91e654d2705dfcc49758.final_splitinfo_host.fit.0.0.0.0[('guest', '10000')])]remote object with type: <class 'list'>
[DEBUG] [2020-11-20 07:13:47,482] [20527:139871606757184] - profile.py[line:185]: [federation.remote.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.final_splitinfo_host.fit.0.0.0.0]host->[Party(role=guest, party_id=10000)] done
[DEBUG] [2020-11-20 07:13:47,483] [20527:139871606757184] - hetero_decision_tree_host.py[line:340]: computing host splits done
[INFO] [2020-11-20 07:13:47,484] [20527:139871606757184] - hetero_decision_tree_host.py[line:161]: get node from host to dispath, depth is 0
[DEBUG] [2020-11-20 07:13:47,485] [20527:139871606757184] - profile.py[line:237]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.dispatch_node_host.fit.0.0.0]host<-[Party(role=guest, party_id=10000)] start
[DEBUG] [2020-11-20 07:13:47,734] [20527:139867765208832] - _federation.py[line:133]: [federation.eggroll.remote.hash.91e654d2705dfcc49758.final_splitinfo_host.fit.0.0.0.0]future to remote to party: ('guest', '10000') done
[DEBUG] [2020-11-20 07:13:50,265] [20527:139871606757184] - _federation.py[line:176]: [federation.eggroll.get.hash.57bcc44b755b74edb18c.dispatch_node_host.fit.0.0.0] got RollPair(namespace=202011200707112994524_hetero_secure_boost_0_0, name=__rsk#202011200707112994524_hetero_secure_boost_0_0#hash.57bcc44b755b74edb18c.dispatch_node_host#fit.0.0.0#guest#10000#host#9999, partitions=4)
[DEBUG] [2020-11-20 07:13:50,266] [20527:139871606757184] - profile.py[line:216]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.dispatch_node_host.fit.0.0.0]host<-[Party(role=guest, party_id=10000)] done
[INFO] [2020-11-20 07:13:50,267] [20527:139871606757184] - hetero_decision_tree_host.py[line:247]: start to find host dispath of depth 0
[DEBUG] [2020-11-20 07:13:50,270] [20527:139871606757184] - profile.py[line:84]: [computing#be69352869]function_stack: [hetero_decision_tree_host.py:256]assign_instances_to_new_node <-[hetero_decision_tree_host.py:370]fit <-[hetero_secureboost_host.py:115]fit_a_booster <-[hetero_boosting.py:292]fit <-[model_base.py:101]run
[DEBUG] [2020-11-20 07:13:50,271] [20527:139871606757184] - profile.py[line:87]: [computing#be69352869]start
[DEBUG] [2020-11-20 07:13:50,837] [20527:139871606757184] - profile.py[line:93]: [computing#be69352869]done, elapse: 0.5672018527984619, function: join(self: Table(partition=4), other: Table(partition=4), func: partial) -> Table(partition=4)
[INFO] [2020-11-20 07:13:50,838] [20527:139871606757184] - hetero_decision_tree_host.py[line:167]: send host dispatch result, depth is 0
[DEBUG] [2020-11-20 07:13:50,840] [20527:139871606757184] - profile.py[line:232]: [federation.remote.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.dispatch_node_host_result.fit.0.0.0]host->[Party(role=guest, party_id=10000)] start
[DEBUG] [2020-11-20 07:13:50,840] [20527:139871606757184] - _federation.py[line:69]: [federation.eggroll.remote.hash.d8b4c7b00ef279c1dba0.dispatch_node_host_result.fit.0.0.0[('guest', '10000')])]remote RollPair(namespace=202011200707112994524_hetero_secure_boost_0_0, name=__rsk#202011200707112994524_hetero_secure_boost_0_0#hash.57bcc44b755b74edb18c.dispatch_node_20201120.071350.282464.1, partitions=4)
[DEBUG] [2020-11-20 07:13:50,850] [20527:139871606757184] - profile.py[line:185]: [federation.remote.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.dispatch_node_host_result.fit.0.0.0]host->[Party(role=guest, party_id=10000)] done
[INFO] [2020-11-20 07:13:50,852] [20527:139871606757184] - hetero_decision_tree_host.py[line:116]: get tree node queue of depth 1
[DEBUG] [2020-11-20 07:13:50,854] [20527:139871606757184] - profile.py[line:237]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.tree_node_queue.fit.0.0.1]host<-[Party(role=guest, party_id=10000)] start
[DEBUG] [2020-11-20 07:13:51,502] [20527:139867765208832] - _federation.py[line:133]: [federation.eggroll.remote.hash.d8b4c7b00ef279c1dba0.dispatch_node_host_result.fit.0.0.0]future to remote to party: ('guest', '10000') done
[DEBUG] [2020-11-20 07:13:53,309] [20527:139871606757184] - _federation.py[line:196]: [federation.eggroll.get.hash.5c76808850a6d1fe24d8.tree_node_queue.fit.0.0.1] got object with type: <class 'list'>
[DEBUG] [2020-11-20 07:13:53,311] [20527:139871606757184] - profile.py[line:216]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.tree_node_queue.fit.0.0.1]host<-[Party(role=guest, party_id=10000)] done
[INFO] [2020-11-20 07:13:53,312] [20527:139871606757184] - hetero_decision_tree_host.py[line:110]: get tree node queue of depth 1
[DEBUG] [2020-11-20 07:13:53,314] [20527:139871606757184] - profile.py[line:237]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.node_positions.fit.0.0.1]host<-[Party(role=guest, party_id=10000)] start
[DEBUG] [2020-11-20 07:13:53,647] [20527:139871606757184] - _federation.py[line:176]: [federation.eggroll.get.hash.a50d3aea493b835a213f.node_positions.fit.0.0.1] got RollPair(namespace=202011200707112994524_hetero_secure_boost_0_0, name=__rsk#202011200707112994524_hetero_secure_boost_0_0#hash.a50d3aea493b835a213f.node_positions#fit.0.0.1#guest#10000#host#9999, partitions=4)
[DEBUG] [2020-11-20 07:13:53,649] [20527:139871606757184] - profile.py[line:216]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.node_positions.fit.0.0.1]host<-[Party(role=guest, party_id=10000)] done
[DEBUG] [2020-11-20 07:13:53,655] [20527:139871606757184] - profile.py[line:87]: [computing#d30ffaa8fe]start
[DEBUG] [2020-11-20 07:13:54,024] [20527:139871606757184] - profile.py[line:93]: [computing#d30ffaa8fe]done, elapse: 0.3694424629211426, function: join(self: Table(partition=4), other: Table(partition=4), func: function) -> Table(partition=4)
[INFO] [2020-11-20 07:13:54,026] [20527:139871606757184] - decision_tree.py[line:114]: start to get node histograms
[INFO] [2020-11-20 07:13:54,028] [20527:139871606757184] - feature_histogram.py[line:197]: bin_shape is (20, 32), node num is 2
[DEBUG] [2020-11-20 07:13:54,033] [20527:139871606757184] - profile.py[line:87]: [computing#a2ad454bc4]start
[DEBUG] [2020-11-20 07:13:54,342] [20527:139871606757184] - profile.py[line:93]: [computing#a2ad454bc4]done, elapse: 0.3093736171722412, function: join(self: Table(partition=4), other: Table(partition=4), func: function) -> Table(partition=4)
[DEBUG] [2020-11-20 07:13:54,347] [20527:139871606757184] - profile.py[line:87]: [computing#7b3709c76f]start
[DEBUG] [2020-11-20 07:13:54,451] [20527:139871606757184] - profile.py[line:93]: [computing#7b3709c76f]done, elapse: 0.10344910621643066, function: count(self: Table(partition=4)) -> int
[DEBUG] [2020-11-20 07:13:54,454] [20527:139871606757184] - profile.py[line:87]: [computing#1564c72616]start
[DEBUG] [2020-11-20 07:13:55,841] [20527:139871606757184] - profile.py[line:93]: [computing#1564c72616]done, elapse: 1.3870031833648682, function: mapReducePartitions(self: Table(partition=4), mapper: partial, reducer: partial) -> Table(partition=4)
[DEBUG] [2020-11-20 07:13:55,847] [20527:139871606757184] - profile.py[line:87]: [computing#7527fb9b70]start
[DEBUG] [2020-11-20 07:13:56,091] [20527:139871606757184] - profile.py[line:93]: [computing#7527fb9b70]done, elapse: 0.24319887161254883, function: mapValues(self: Table(partition=4), func: function) -> Table(partition=4)
[INFO] [2020-11-20 07:13:56,092] [20527:139871606757184] - splitter.py[line:236]: splitter find split of host
[DEBUG] [2020-11-20 07:13:56,100] [20527:139871606757184] - profile.py[line:87]: [computing#bf91c5c623]start
[DEBUG] [2020-11-20 07:13:56,825] [20527:139871606757184] - profile.py[line:93]: [computing#bf91c5c623]done, elapse: 0.7251701354980469, function: mapValues(self: Table(partition=4), func: function) -> Table(partition=4)
[DEBUG] [2020-11-20 07:13:56,828] [20527:139871606757184] - profile.py[line:87]: [computing#8b18554d12]start
[DEBUG] [2020-11-20 07:13:56,831] [20527:139871606757184] - profile.py[line:93]: [computing#8b18554d12]done, elapse: 0.003175497055053711, function: collect(self: Table(partition=4)) -> generator
[DEBUG] [2020-11-20 07:13:57,257] [20527:139871606757184] - hetero_decision_tree_host.py[line:336]: sending en_splitinfo <federatedml.ensemble.basic_algorithms.decision_tree.tree_core.splitter.BigObjectTransfer object at 0x7f358079c128>
[INFO] [2020-11-20 07:13:57,258] [20527:139871606757184] - hetero_decision_tree_host.py[line:121]: send encrypted splitinfo of depth 1, batch 0
[DEBUG] [2020-11-20 07:13:57,260] [20527:139871606757184] - profile.py[line:232]: [federation.remote.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.encrypted_splitinfo_host.fit.0.0.1.0]host->[Party(role=guest, party_id=10000)] start
[DEBUG] [2020-11-20 07:13:57,261] [20527:139871606757184] - _federation.py[line:76]: [federation.eggroll.remote.hash.3392347e7e0faef9835a.encrypted_splitinfo_host.fit.0.0.1.0[('guest', '10000')])]remote split object with type: <class 'federatedml.ensemble.basic_algorithms.decision_tree.tree_core.splitter.BigObjectTransfer'>
[DEBUG] [2020-11-20 07:13:57,357] [20527:139871606757184] - profile.py[line:185]: [federation.remote.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.encrypted_splitinfo_host.fit.0.0.1.0]host->[Party(role=guest, party_id=10000)] done
[INFO] [2020-11-20 07:13:57,359] [20527:139871606757184] - hetero_decision_tree_host.py[line:128]: get federated best splitinfo of depth 1, batch 0
[DEBUG] [2020-11-20 07:13:57,360] [20527:139871606757184] - profile.py[line:237]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.federated_best_splitinfo_host.fit.0.0.1.0]host<-[Party(role=guest, party_id=10000)] start
[DEBUG] [2020-11-20 07:14:02,568] [20527:139867740030720] - _federation.py[line:133]: [federation.eggroll.remote.hash.3392347e7e0faef9835a.encrypted_splitinfo_host.fit.0.0.1.0]future to remote to party: ('guest', '10000') done
[DEBUG] [2020-11-20 07:14:04,544] [20527:139871606757184] - _federation.py[line:196]: [federation.eggroll.get.hash.2037679d27978ce15bad.federated_best_splitinfo_host.fit.0.0.1.0] got object with type: <class 'list'>
[DEBUG] [2020-11-20 07:14:04,545] [20527:139871606757184] - profile.py[line:216]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.federated_best_splitinfo_host.fit.0.0.1.0]host<-[Party(role=guest, party_id=10000)] done
[INFO] [2020-11-20 07:14:04,547] [20527:139871606757184] - hetero_decision_tree_host.py[line:135]: send host final splitinfo of depth 1, batch 0
[DEBUG] [2020-11-20 07:14:04,553] [20527:139871606757184] - hetero_decision_tree_host.py[line:141]: sitename is host:9999, self.sitename is host:9999
[DEBUG] [2020-11-20 07:14:04,555] [20527:139871606757184] - hetero_decision_tree_host.py[line:141]: sitename is host:9999, self.sitename is host:9999
[DEBUG] [2020-11-20 07:14:04,556] [20527:139871606757184] - hetero_decision_tree_host.py[line:154]: final split info is ['**fid 7, bid None, sum_grad<federatedml.secureprotol.iterative_affine.DeterministicIterativeAffineCiphertext object at 0x7f3582820ac8>, sum_hess<federatedml.secureprotol.iterative_affine.DeterministicIterativeAffineCiphertext object at 0x7f3582820b00>, gain<federatedml.secureprotol.iterative_affine.DeterministicIterativeAffineCiphertext object at 0x7f3582767470>**', '**fid 7, bid None, sum_grad<federatedml.secureprotol.iterative_affine.DeterministicIterativeAffineCiphertext object at 0x7f358291e3c8>, sum_hess<federatedml.secureprotol.iterative_affine.DeterministicIterativeAffineCiphertext object at 0x7f358291e400>, gain<federatedml.secureprotol.iterative_affine.DeterministicIterativeAffineCiphertext object at 0x7f3582777ba8>**']
[DEBUG] [2020-11-20 07:14:04,557] [20527:139871606757184] - profile.py[line:232]: [federation.remote.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.final_splitinfo_host.fit.0.0.1.0]host->[Party(role=guest, party_id=10000)] start
[DEBUG] [2020-11-20 07:14:04,558] [20527:139871606757184] - _federation.py[line:86]: [federation.eggroll.remote.hash.91e654d2705dfcc49758.final_splitinfo_host.fit.0.0.1.0[('guest', '10000')])]remote object with type: <class 'list'>
[DEBUG] [2020-11-20 07:14:04,565] [20527:139871606757184] - profile.py[line:185]: [federation.remote.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.final_splitinfo_host.fit.0.0.1.0]host->[Party(role=guest, party_id=10000)] done
[DEBUG] [2020-11-20 07:14:04,566] [20527:139871606757184] - hetero_decision_tree_host.py[line:340]: computing host splits done
[INFO] [2020-11-20 07:14:04,572] [20527:139871606757184] - hetero_decision_tree_host.py[line:161]: get node from host to dispath, depth is 1
[DEBUG] [2020-11-20 07:14:04,578] [20527:139871606757184] - profile.py[line:237]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.dispatch_node_host.fit.0.0.1]host<-[Party(role=guest, party_id=10000)] start
[DEBUG] [2020-11-20 07:14:04,832] [20527:139867765208832] - _federation.py[line:133]: [federation.eggroll.remote.hash.91e654d2705dfcc49758.final_splitinfo_host.fit.0.0.1.0]future to remote to party: ('guest', '10000') done
[DEBUG] [2020-11-20 07:14:07,601] [20527:139871606757184] - _federation.py[line:176]: [federation.eggroll.get.hash.57bcc44b755b74edb18c.dispatch_node_host.fit.0.0.1] got RollPair(namespace=202011200707112994524_hetero_secure_boost_0_0, name=__rsk#202011200707112994524_hetero_secure_boost_0_0#hash.57bcc44b755b74edb18c.dispatch_node_host#fit.0.0.1#guest#10000#host#9999, partitions=4)
[DEBUG] [2020-11-20 07:14:07,603] [20527:139871606757184] - profile.py[line:216]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.dispatch_node_host.fit.0.0.1]host<-[Party(role=guest, party_id=10000)] done
[INFO] [2020-11-20 07:14:07,604] [20527:139871606757184] - hetero_decision_tree_host.py[line:247]: start to find host dispath of depth 1
[DEBUG] [2020-11-20 07:14:07,607] [20527:139871606757184] - profile.py[line:87]: [computing#be69352869]start
[DEBUG] [2020-11-20 07:14:07,910] [20527:139871606757184] - profile.py[line:93]: [computing#be69352869]done, elapse: 0.302685022354126, function: join(self: Table(partition=4), other: Table(partition=4), func: partial) -> Table(partition=4)
[INFO] [2020-11-20 07:14:07,911] [20527:139871606757184] - hetero_decision_tree_host.py[line:167]: send host dispatch result, depth is 1
[DEBUG] [2020-11-20 07:14:07,913] [20527:139871606757184] - profile.py[line:232]: [federation.remote.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.dispatch_node_host_result.fit.0.0.1]host->[Party(role=guest, party_id=10000)] start
[DEBUG] [2020-11-20 07:14:07,914] [20527:139871606757184] - _federation.py[line:69]: [federation.eggroll.remote.hash.d8b4c7b00ef279c1dba0.dispatch_node_host_result.fit.0.0.1[('guest', '10000')])]remote RollPair(namespace=202011200707112994524_hetero_secure_boost_0_0, name=__rsk#202011200707112994524_hetero_secure_boost_0_0#hash.57bcc44b755b74edb18c.dispatch_node_20201120.071407.614992.1, partitions=4)
[DEBUG] [2020-11-20 07:14:07,924] [20527:139871606757184] - profile.py[line:185]: [federation.remote.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.dispatch_node_host_result.fit.0.0.1]host->[Party(role=guest, party_id=10000)] done
[INFO] [2020-11-20 07:14:07,925] [20527:139871606757184] - hetero_decision_tree_host.py[line:116]: get tree node queue of depth 2
[DEBUG] [2020-11-20 07:14:07,930] [20527:139871606757184] - profile.py[line:237]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.tree_node_queue.fit.0.0.2]host<-[Party(role=guest, party_id=10000)] start
[DEBUG] [2020-11-20 07:14:08,381] [20527:139867765208832] - _federation.py[line:133]: [federation.eggroll.remote.hash.d8b4c7b00ef279c1dba0.dispatch_node_host_result.fit.0.0.1]future to remote to party: ('guest', '10000') done
[DEBUG] [2020-11-20 07:14:09,816] [20527:139871606757184] - _federation.py[line:196]: [federation.eggroll.get.hash.5c76808850a6d1fe24d8.tree_node_queue.fit.0.0.2] got object with type: <class 'list'>
[DEBUG] [2020-11-20 07:14:09,818] [20527:139871606757184] - profile.py[line:216]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.tree_node_queue.fit.0.0.2]host<-[Party(role=guest, party_id=10000)] done
[INFO] [2020-11-20 07:14:09,819] [20527:139871606757184] - hetero_decision_tree_host.py[line:110]: get tree node queue of depth 2
[DEBUG] [2020-11-20 07:14:09,821] [20527:139871606757184] - profile.py[line:237]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.node_positions.fit.0.0.2]host<-[Party(role=guest, party_id=10000)] start
[DEBUG] [2020-11-20 07:14:10,234] [20527:139871606757184] - _federation.py[line:176]: [federation.eggroll.get.hash.a50d3aea493b835a213f.node_positions.fit.0.0.2] got RollPair(namespace=202011200707112994524_hetero_secure_boost_0_0, name=__rsk#202011200707112994524_hetero_secure_boost_0_0#hash.a50d3aea493b835a213f.node_positions#fit.0.0.2#guest#10000#host#9999, partitions=4)
[DEBUG] [2020-11-20 07:14:10,235] [20527:139871606757184] - profile.py[line:216]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.node_positions.fit.0.0.2]host<-[Party(role=guest, party_id=10000)] done
[DEBUG] [2020-11-20 07:14:10,236] [20527:139871606757184] - _cleaner.py[line:62]: [CLEAN]deleting <RollPair(_store=<ErStore(store_locator=<ErStoreLocator(id=0, store_type=LMDB, namespace=202011200707112994524_hetero_secure_boost_0_0, name=__rsk#202011200707112994524_hetero_secure_boost_0_0#hash.a50d3aea493b835a213f.node_positions#fit.0.0.0#guest#10000#host#9999, path=, total_partitions=4, partitioner=BYTESTRING_HASH, serdes=PICKLE) at 0x7f3580779da0>, partitions=[***, len=4], options=[{'eggroll.session.deploy.mode': 'cluster', 'eggroll.session.processors.per.node': '4', 'eggroll.session.id': '202011200707112994524_hetero_secure_boost_0_0_host_9999'}]) at 0x7f3580779e80>) at 0x7f35807797f0>, destroy, {}
[DEBUG] [2020-11-20 07:14:10,459] [20527:139871606757184] - profile.py[line:87]: [computing#d30ffaa8fe]start
[DEBUG] [2020-11-20 07:14:10,805] [20527:139871606757184] - profile.py[line:93]: [computing#d30ffaa8fe]done, elapse: 0.34571409225463867, function: join(self: Table(partition=4), other: Table(partition=4), func: function) -> Table(partition=4)
[INFO] [2020-11-20 07:14:10,805] [20527:139871606757184] - decision_tree.py[line:114]: start to get node histograms
[INFO] [2020-11-20 07:14:10,806] [20527:139871606757184] - feature_histogram.py[line:197]: bin_shape is (20, 32), node num is 4
[DEBUG] [2020-11-20 07:14:10,808] [20527:139871606757184] - profile.py[line:87]: [computing#a2ad454bc4]start
[DEBUG] [2020-11-20 07:14:11,098] [20527:139871606757184] - profile.py[line:93]: [computing#a2ad454bc4]done, elapse: 0.2899963855743408, function: join(self: Table(partition=4), other: Table(partition=4), func: function) -> Table(partition=4)
[DEBUG] [2020-11-20 07:14:11,105] [20527:139871606757184] - profile.py[line:87]: [computing#7b3709c76f]start
[DEBUG] [2020-11-20 07:14:11,174] [20527:139871606757184] - profile.py[line:93]: [computing#7b3709c76f]done, elapse: 0.06907868385314941, function: count(self: Table(partition=4)) -> int
[DEBUG] [2020-11-20 07:14:11,178] [20527:139871606757184] - profile.py[line:87]: [computing#1564c72616]start
[DEBUG] [2020-11-20 07:14:12,886] [20527:139871606757184] - profile.py[line:93]: [computing#1564c72616]done, elapse: 1.7076895236968994, function: mapReducePartitions(self: Table(partition=4), mapper: partial, reducer: partial) -> Table(partition=4)
[DEBUG] [2020-11-20 07:14:12,894] [20527:139871606757184] - profile.py[line:87]: [computing#7527fb9b70]start
[DEBUG] [2020-11-20 07:14:13,173] [20527:139871606757184] - profile.py[line:93]: [computing#7527fb9b70]done, elapse: 0.27969908714294434, function: mapValues(self: Table(partition=4), func: function) -> Table(partition=4)
[INFO] [2020-11-20 07:14:13,175] [20527:139871606757184] - splitter.py[line:236]: splitter find split of host
[DEBUG] [2020-11-20 07:14:13,180] [20527:139871606757184] - profile.py[line:87]: [computing#bf91c5c623]start
[DEBUG] [2020-11-20 07:14:13,541] [20527:139871606757184] - profile.py[line:93]: [computing#bf91c5c623]done, elapse: 0.3612966537475586, function: mapValues(self: Table(partition=4), func: function) -> Table(partition=4)
[DEBUG] [2020-11-20 07:14:13,546] [20527:139871606757184] - profile.py[line:87]: [computing#8b18554d12]start
[DEBUG] [2020-11-20 07:14:13,553] [20527:139871606757184] - profile.py[line:93]: [computing#8b18554d12]done, elapse: 0.006647825241088867, function: collect(self: Table(partition=4)) -> generator
[DEBUG] [2020-11-20 07:14:14,144] [20527:139871606757184] - hetero_decision_tree_host.py[line:336]: sending en_splitinfo <federatedml.ensemble.basic_algorithms.decision_tree.tree_core.splitter.BigObjectTransfer object at 0x7f35828ff7b8>
[INFO] [2020-11-20 07:14:14,145] [20527:139871606757184] - hetero_decision_tree_host.py[line:121]: send encrypted splitinfo of depth 2, batch 0
[DEBUG] [2020-11-20 07:14:14,146] [20527:139871606757184] - profile.py[line:232]: [federation.remote.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.encrypted_splitinfo_host.fit.0.0.2.0]host->[Party(role=guest, party_id=10000)] start
[DEBUG] [2020-11-20 07:14:14,148] [20527:139871606757184] - _federation.py[line:76]: [federation.eggroll.remote.hash.3392347e7e0faef9835a.encrypted_splitinfo_host.fit.0.0.2.0[('guest', '10000')])]remote split object with type: <class 'federatedml.ensemble.basic_algorithms.decision_tree.tree_core.splitter.BigObjectTransfer'>
[DEBUG] [2020-11-20 07:14:14,252] [20527:139871606757184] - profile.py[line:185]: [federation.remote.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.encrypted_splitinfo_host.fit.0.0.2.0]host->[Party(role=guest, party_id=10000)] done
[INFO] [2020-11-20 07:14:14,253] [20527:139871606757184] - hetero_decision_tree_host.py[line:128]: get federated best splitinfo of depth 2, batch 0
[DEBUG] [2020-11-20 07:14:14,255] [20527:139871606757184] - profile.py[line:237]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.federated_best_splitinfo_host.fit.0.0.2.0]host<-[Party(role=guest, party_id=10000)] start
[DEBUG] [2020-11-20 07:14:20,439] [20527:139867731638016] - _federation.py[line:133]: [federation.eggroll.remote.hash.3392347e7e0faef9835a.encrypted_splitinfo_host.fit.0.0.2.0]future to remote to party: ('guest', '10000') done
[DEBUG] [2020-11-20 07:14:22,654] [20527:139871606757184] - _federation.py[line:196]: [federation.eggroll.get.hash.2037679d27978ce15bad.federated_best_splitinfo_host.fit.0.0.2.0] got object with type: <class 'list'>
[DEBUG] [2020-11-20 07:14:22,656] [20527:139871606757184] - profile.py[line:216]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.federated_best_splitinfo_host.fit.0.0.2.0]host<-[Party(role=guest, party_id=10000)] done
[INFO] [2020-11-20 07:14:22,658] [20527:139871606757184] - hetero_decision_tree_host.py[line:135]: send host final splitinfo of depth 2, batch 0
[DEBUG] [2020-11-20 07:14:22,658] [20527:139871606757184] - hetero_decision_tree_host.py[line:141]: sitename is host:9999, self.sitename is host:9999
[DEBUG] [2020-11-20 07:14:22,659] [20527:139871606757184] - hetero_decision_tree_host.py[line:141]: sitename is host:9999, self.sitename is host:9999
[DEBUG] [2020-11-20 07:14:22,660] [20527:139871606757184] - hetero_decision_tree_host.py[line:141]: sitename is host:9999, self.sitename is host:9999
[DEBUG] [2020-11-20 07:14:22,660] [20527:139871606757184] - hetero_decision_tree_host.py[line:141]: sitename is host:9999, self.sitename is host:9999
[DEBUG] [2020-11-20 07:14:22,661] [20527:139871606757184] - hetero_decision_tree_host.py[line:154]: final split info is ['**fid 0, bid None, sum_grad<federatedml.secureprotol.iterative_affine.DeterministicIterativeAffineCiphertext object at 0x7f3580779cc0>, sum_hess<federatedml.secureprotol.iterative_affine.DeterministicIterativeAffineCiphertext object at 0x7f35807799b0>, gain<federatedml.secureprotol.iterative_affine.DeterministicIterativeAffineCiphertext object at 0x7f35826aef28>**', '**fid 4, bid None, sum_grad<federatedml.secureprotol.iterative_affine.DeterministicIterativeAffineCiphertext object at 0x7f35826f7ba8>, sum_hess<federatedml.secureprotol.iterative_affine.DeterministicIterativeAffineCiphertext object at 0x7f35826f7be0>, gain<federatedml.secureprotol.iterative_affine.DeterministicIterativeAffineCiphertext object at 0x7f3582863080>**', '**fid 6, bid None, sum_grad<federatedml.secureprotol.iterative_affine.DeterministicIterativeAffineCiphertext object at 0x7f3582919470>, sum_hess<federatedml.secureprotol.iterative_affine.DeterministicIterativeAffineCiphertext object at 0x7f35829194a8>, gain<federatedml.secureprotol.iterative_affine.DeterministicIterativeAffineCiphertext object at 0x7f35828630b8>**', '**fid 0, bid None, sum_grad<federatedml.secureprotol.iterative_affine.DeterministicIterativeAffineCiphertext object at 0x7f35827d91d0>, sum_hess<federatedml.secureprotol.iterative_affine.DeterministicIterativeAffineCiphertext object at 0x7f35827d9208>, gain<federatedml.secureprotol.iterative_affine.DeterministicIterativeAffineCiphertext object at 0x7f35828630f0>**']
[DEBUG] [2020-11-20 07:14:22,662] [20527:139871606757184] - profile.py[line:232]: [federation.remote.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.final_splitinfo_host.fit.0.0.2.0]host->[Party(role=guest, party_id=10000)] start
[DEBUG] [2020-11-20 07:14:22,663] [20527:139871606757184] - _federation.py[line:86]: [federation.eggroll.remote.hash.91e654d2705dfcc49758.final_splitinfo_host.fit.0.0.2.0[('guest', '10000')])]remote object with type: <class 'list'>
[DEBUG] [2020-11-20 07:14:22,689] [20527:139871606757184] - profile.py[line:185]: [federation.remote.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.final_splitinfo_host.fit.0.0.2.0]host->[Party(role=guest, party_id=10000)] done
[DEBUG] [2020-11-20 07:14:22,690] [20527:139871606757184] - hetero_decision_tree_host.py[line:340]: computing host splits done
[INFO] [2020-11-20 07:14:22,691] [20527:139871606757184] - hetero_decision_tree_host.py[line:161]: get node from host to dispath, depth is 2
[DEBUG] [2020-11-20 07:14:22,693] [20527:139871606757184] - profile.py[line:237]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.dispatch_node_host.fit.0.0.2]host<-[Party(role=guest, party_id=10000)] start
[DEBUG] [2020-11-20 07:14:22,890] [20527:139867784877824] - _federation.py[line:133]: [federation.eggroll.remote.hash.91e654d2705dfcc49758.final_splitinfo_host.fit.0.0.2.0]future to remote to party: ('guest', '10000') done
[DEBUG] [2020-11-20 07:14:25,901] [20527:139871606757184] - _federation.py[line:176]: [federation.eggroll.get.hash.57bcc44b755b74edb18c.dispatch_node_host.fit.0.0.2] got RollPair(namespace=202011200707112994524_hetero_secure_boost_0_0, name=__rsk#202011200707112994524_hetero_secure_boost_0_0#hash.57bcc44b755b74edb18c.dispatch_node_host#fit.0.0.2#guest#10000#host#9999, partitions=4)
[DEBUG] [2020-11-20 07:14:25,903] [20527:139871606757184] - profile.py[line:216]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.dispatch_node_host.fit.0.0.2]host<-[Party(role=guest, party_id=10000)] done
[DEBUG] [2020-11-20 07:14:25,904] [20527:139871606757184] - _cleaner.py[line:62]: [CLEAN]deleting <RollPair(_store=<ErStore(store_locator=<ErStoreLocator(id=0, store_type=LMDB, namespace=202011200707112994524_hetero_secure_boost_0_0, name=__rsk#202011200707112994524_hetero_secure_boost_0_0#hash.57bcc44b755b74edb18c.dispatch_node_host#fit.0.0.0#guest#10000#host#9999, path=, total_partitions=4, partitioner=BYTESTRING_HASH, serdes=PICKLE) at 0x7f3582947828>, partitions=[***, len=4], options=[{'eggroll.session.id': '202011200707112994524_hetero_secure_boost_0_0_host_9999', 'eggroll.session.deploy.mode': 'cluster', 'eggroll.session.processors.per.node': '4'}]) at 0x7f35807bcef0>) at 0x7f3582947ef0>, destroy, {}
[INFO] [2020-11-20 07:14:26,135] [20527:139871606757184] - hetero_decision_tree_host.py[line:247]: start to find host dispath of depth 2
[DEBUG] [2020-11-20 07:14:26,141] [20527:139871606757184] - profile.py[line:87]: [computing#be69352869]start
[DEBUG] [2020-11-20 07:14:26,453] [20527:139871606757184] - profile.py[line:93]: [computing#be69352869]done, elapse: 0.311800479888916, function: join(self: Table(partition=4), other: Table(partition=4), func: partial) -> Table(partition=4)
[INFO] [2020-11-20 07:14:26,454] [20527:139871606757184] - hetero_decision_tree_host.py[line:167]: send host dispatch result, depth is 2
[DEBUG] [2020-11-20 07:14:26,457] [20527:139871606757184] - profile.py[line:232]: [federation.remote.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.dispatch_node_host_result.fit.0.0.2]host->[Party(role=guest, party_id=10000)] start
[DEBUG] [2020-11-20 07:14:26,459] [20527:139871606757184] - _federation.py[line:69]: [federation.eggroll.remote.hash.d8b4c7b00ef279c1dba0.dispatch_node_host_result.fit.0.0.2[('guest', '10000')])]remote RollPair(namespace=202011200707112994524_hetero_secure_boost_0_0, name=__rsk#202011200707112994524_hetero_secure_boost_0_0#hash.57bcc44b755b74edb18c.dispatch_node_20201120.071426.149987.1, partitions=4)
[DEBUG] [2020-11-20 07:14:26,468] [20527:139871606757184] - profile.py[line:185]: [federation.remote.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.dispatch_node_host_result.fit.0.0.2]host->[Party(role=guest, party_id=10000)] done
[DEBUG] [2020-11-20 07:14:26,469] [20527:139871606757184] - _cleaner.py[line:62]: [CLEAN]deleting <RollPair(_store=<ErStore(store_locator=<ErStoreLocator(id=0, store_type=LMDB, namespace=202011200707112994524_hetero_secure_boost_0_0, name=__rsk#202011200707112994524_hetero_secure_boost_0_0#hash.57bcc44b755b74edb18c.dispatch_node_20201120.071350.282464.1, path=, total_partitions=4, partitioner=BYTESTRING_HASH, serdes=PICKLE) at 0x7f35828e62b0>, partitions=[***, len=4], options=[{'eggroll.session.id': '202011200707112994524_hetero_secure_boost_0_0_host_9999', 'eggroll.session.deploy.mode': 'cluster', 'eggroll.session.processors.per.node': '4'}]) at 0x7f35828e6320>) at 0x7f3580779e10>, destroy, {}
[INFO] [2020-11-20 07:14:26,767] [20527:139871606757184] - hetero_decision_tree_host.py[line:175]: sync tree from guest
[DEBUG] [2020-11-20 07:14:26,770] [20527:139871606757184] - profile.py[line:237]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.tree.fit.0.0]host<-[Party(role=guest, party_id=10000)] start
[DEBUG] [2020-11-20 07:14:26,825] [20527:139867776485120] - _federation.py[line:133]: [federation.eggroll.remote.hash.d8b4c7b00ef279c1dba0.dispatch_node_host_result.fit.0.0.2]future to remote to party: ('guest', '10000') done
[DEBUG] [2020-11-20 07:14:28,991] [20527:139871606757184] - _federation.py[line:196]: [federation.eggroll.get.hash.6f9233a3e0ba7978235b.tree.fit.0.0] got object with type: <class 'list'>
[DEBUG] [2020-11-20 07:14:28,993] [20527:139871606757184] - profile.py[line:216]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.tree.fit.0.0]host<-[Party(role=guest, party_id=10000)] done
[INFO] [2020-11-20 07:14:28,994] [20527:139871606757184] - hetero_decision_tree_host.py[line:278]: convert tree node bins to real value
[INFO] [2020-11-20 07:14:28,995] [20527:139871606757184] - hetero_decision_tree_host.py[line:272]: remove duplicated nodes from split mask dict
[INFO] [2020-11-20 07:14:28,996] [20527:139871606757184] - hetero_decision_tree_host.py[line:375]: end to fit guest decision tree
[DEBUG] [2020-11-20 07:14:28,998] [20527:139871606757184] - validation_strategy.py[line:99]: validation_freqs is 1
[DEBUG] [2020-11-20 07:14:28,999] [20527:139871606757184] - validation_strategy.py[line:278]: begin to check validate status, need_run_validation is True
[DEBUG] [2020-11-20 07:14:29,000] [20527:139871606757184] - validation_strategy.py[line:99]: validation_freqs is 1
[DEBUG] [2020-11-20 07:14:29,001] [20527:139871606757184] - validation_strategy.py[line:241]: start to evaluate data validate
[DEBUG] [2020-11-20 07:14:29,002] [20527:139871606757184] - model_base.py[line:162]: set flowid to transfer_variable, flowid: fit_iteration_0_validate
[DEBUG] [2020-11-20 07:14:29,010] [20527:139871606757184] - profile.py[line:84]: [computing#767c3132d3]function_stack: [io_check.py:28]_func <-[validation_strategy.py:246]get_predict_result <-[validation_strategy.py:292]validate <-[hetero_boosting.py:299]fit <-[model_base.py:101]run
[DEBUG] [2020-11-20 07:14:29,011] [20527:139871606757184] - profile.py[line:87]: [computing#767c3132d3]start
[DEBUG] [2020-11-20 07:14:29,067] [20527:139871606757184] - profile.py[line:93]: [computing#767c3132d3]done, elapse: 0.05707693099975586, function: count(self: Table(partition=4)) -> int
[INFO] [2020-11-20 07:14:29,069] [20527:139871606757184] - hetero_secureboost_host.py[line:182]: running prediction
[DEBUG] [2020-11-20 07:14:29,078] [20527:139871606757184] - profile.py[line:84]: [computing#a77208a245]function_stack: [abnormal_detection.py:27]empty_table_detection <-[boosting.py:201]data_alignment <-[boosting.py:219]data_and_header_alignment <-[hetero_secureboost_host.py:184]predict <-[io_check.py:31]_func <-[validation_strategy.py:246]get_predict_result <-[validation_strategy.py:292]validate <-[hetero_boosting.py:299]fit <-[model_base.py:101]run
[DEBUG] [2020-11-20 07:14:29,079] [20527:139871606757184] - profile.py[line:87]: [computing#a77208a245]start
[DEBUG] [2020-11-20 07:14:29,129] [20527:139871606757184] - profile.py[line:93]: [computing#a77208a245]done, elapse: 0.05163073539733887, function: count(self: Table(partition=4)) -> int
[DEBUG] [2020-11-20 07:14:29,137] [20527:139871606757184] - profile.py[line:84]: [computing#a14f3038ec]function_stack: [data_overview.py:27]get_features_shape <-[data_overview.py:105]is_empty_feature <-[abnormal_detection.py:33]empty_feature_detection <-[boosting.py:202]data_alignment <-[boosting.py:219]data_and_header_alignment <-[hetero_secureboost_host.py:184]predict <-[io_check.py:31]_func <-[validation_strategy.py:246]get_predict_result <-[validation_strategy.py:292]validate <-[hetero_boosting.py:299]fit <-[model_base.py:101]run
[DEBUG] [2020-11-20 07:14:29,137] [20527:139871606757184] - profile.py[line:87]: [computing#a14f3038ec]start
[DEBUG] [2020-11-20 07:14:29,372] [20527:139871606757184] - profile.py[line:93]: [computing#a14f3038ec]done, elapse: 0.23520874977111816, function: first(self: Table(partition=4)) -> tuple
[DEBUG] [2020-11-20 07:14:29,377] [20527:139871606757184] - profile.py[line:84]: [computing#68dbfc9b68]function_stack: [boosting.py:204]data_alignment <-[boosting.py:219]data_and_header_alignment <-[hetero_secureboost_host.py:184]predict <-[io_check.py:31]_func <-[validation_strategy.py:246]get_predict_result <-[validation_strategy.py:292]validate <-[hetero_boosting.py:299]fit <-[model_base.py:101]run
[DEBUG] [2020-11-20 07:14:29,377] [20527:139871606757184] - profile.py[line:87]: [computing#68dbfc9b68]start
[DEBUG] [2020-11-20 07:14:30,016] [20527:139871606757184] - profile.py[line:93]: [computing#68dbfc9b68]done, elapse: 0.6395583152770996, function: mapValues(self: Table(partition=4), func: function) -> Table(partition=4)
[DEBUG] [2020-11-20 07:14:30,018] [20527:139871606757184] - profile.py[line:237]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_boosting_transfer_variable.HeteroBoostingTransferVariable.predict_start_round.fit_iteration_0_validate]host<-[Party(role=guest, party_id=10000)] start
[DEBUG] [2020-11-20 07:14:31,029] [20527:139871606757184] - _federation.py[line:196]: [federation.eggroll.get.hash.55bac2e405cb1beee722.predict_start_round.fit_iteration_0_validate] got object with type: <class 'int'>
[DEBUG] [2020-11-20 07:14:31,031] [20527:139871606757184] - profile.py[line:216]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_boosting_transfer_variable.HeteroBoostingTransferVariable.predict_start_round.fit_iteration_0_validate]host<-[Party(role=guest, party_id=10000)] done
[INFO] [2020-11-20 07:14:31,033] [20527:139871606757184] - splitter.py[line:59]: splitter init!
[INFO] [2020-11-20 07:14:31,034] [20527:139871606757184] - decision_tree.py[line:229]: load tree model
[INFO] [2020-11-20 07:14:31,036] [20527:139871606757184] - boosting.py[line:391]: generate flowid, flowid fit_iteration_0_validate
[INFO] [2020-11-20 07:14:31,038] [20527:139871606757184] - decision_tree.py[line:93]: set flowid, flowid is fit_iteration_0_validate.0.0
[DEBUG] [2020-11-20 07:14:31,039] [20527:139871606757184] - hetero_secureboost_host.py[line:167]: cur predict round is 0
[DEBUG] [2020-11-20 07:14:31,040] [20527:139871606757184] - profile.py[line:237]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_secure_boosting_predict_transfer_variable.HeteroSecureBoostTransferVariable.predict_stop_flag.fit_iteration_0_validate.0.0.0]host<-[Party(role=guest, party_id=10000)] start
[DEBUG] [2020-11-20 07:14:33,180] [20527:139871606757184] - _federation.py[line:196]: [federation.eggroll.get.hash.361c9228f6769dcc3527.predict_stop_flag.fit_iteration_0_validate.0.0.0] got object with type: <class 'bool'>
[DEBUG] [2020-11-20 07:14:33,182] [20527:139871606757184] - profile.py[line:216]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_secure_boosting_predict_transfer_variable.HeteroSecureBoostTransferVariable.predict_stop_flag.fit_iteration_0_validate.0.0.0]host<-[Party(role=guest, party_id=10000)] done
[DEBUG] [2020-11-20 07:14:33,183] [20527:139871606757184] - model_base.py[line:162]: set flowid to transfer_variable, flowid: fit
[INFO] [2020-11-20 07:14:33,184] [20527:139871606757184] - hetero_boosting.py[line:268]: sync stop flag from guest, boosting_core round is 0
[DEBUG] [2020-11-20 07:14:33,186] [20527:139871606757184] - profile.py[line:237]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_boosting_transfer_variable.HeteroBoostingTransferVariable.stop_flag.fit.0]host<-[Party(role=guest, party_id=10000)] start
[DEBUG] [2020-11-20 07:14:35,737] [20527:139871606757184] - _federation.py[line:196]: [federation.eggroll.get.hash.dcd307c9973f180efdfb.stop_flag.fit.0] got object with type: <class 'bool'>
[DEBUG] [2020-11-20 07:14:35,740] [20527:139871606757184] - profile.py[line:216]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_boosting_transfer_variable.HeteroBoostingTransferVariable.stop_flag.fit.0]host<-[Party(role=guest, party_id=10000)] done
[INFO] [2020-11-20 07:14:35,741] [20527:139871606757184] - hetero_boosting.py[line:288]: cur epoch idx is 1
[INFO] [2020-11-20 07:14:35,743] [20527:139871606757184] - splitter.py[line:59]: splitter init!
[INFO] [2020-11-20 07:14:35,744] [20527:139871606757184] - hetero_decision_tree_host.py[line:57]: set input info
[INFO] [2020-11-20 07:14:35,746] [20527:139871606757184] - boosting.py[line:181]: sample valid features
[INFO] [2020-11-20 07:14:35,750] [20527:139871606757184] - decision_tree.py[line:101]: set valid features
[INFO] [2020-11-20 07:14:35,752] [20527:139871606757184] - boosting.py[line:391]: generate flowid, flowid fit
[INFO] [2020-11-20 07:14:35,753] [20527:139871606757184] - decision_tree.py[line:93]: set flowid, flowid is fit.1.0
[INFO] [2020-11-20 07:14:35,754] [20527:139871606757184] - hetero_decision_tree_host.py[line:350]: begin to fit host decision tree
[INFO] [2020-11-20 07:14:35,755] [20527:139871606757184] - hetero_decision_tree_host.py[line:106]: get encrypted grad and hess
[DEBUG] [2020-11-20 07:14:35,756] [20527:139871606757184] - profile.py[line:237]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.encrypted_grad_and_hess.fit.1.0]host<-[Party(role=guest, party_id=10000)] start
[DEBUG] [2020-11-20 07:14:38,865] [20527:139871606757184] - _federation.py[line:176]: [federation.eggroll.get.hash.b8725f5e3437b75ee9a0.encrypted_grad_and_hess.fit.1.0] got RollPair(namespace=202011200707112994524_hetero_secure_boost_0_0, name=__rsk#202011200707112994524_hetero_secure_boost_0_0#hash.b8725f5e3437b75ee9a0.encrypted_grad_and_hess#fit.1.0#guest#10000#host#9999, partitions=4)
[DEBUG] [2020-11-20 07:14:38,867] [20527:139871606757184] - profile.py[line:216]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.encrypted_grad_and_hess.fit.1.0]host<-[Party(role=guest, party_id=10000)] done
[INFO] [2020-11-20 07:14:38,868] [20527:139871606757184] - hetero_decision_tree_host.py[line:116]: get tree node queue of depth 0
[DEBUG] [2020-11-20 07:14:38,870] [20527:139871606757184] - profile.py[line:237]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.tree_node_queue.fit.1.0.0]host<-[Party(role=guest, party_id=10000)] start
[DEBUG] [2020-11-20 07:14:39,538] [20527:139871606757184] - _federation.py[line:196]: [federation.eggroll.get.hash.5c76808850a6d1fe24d8.tree_node_queue.fit.1.0.0] got object with type: <class 'list'>
[DEBUG] [2020-11-20 07:14:39,540] [20527:139871606757184] - profile.py[line:216]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.tree_node_queue.fit.1.0.0]host<-[Party(role=guest, party_id=10000)] done
[INFO] [2020-11-20 07:14:39,541] [20527:139871606757184] - hetero_decision_tree_host.py[line:110]: get tree node queue of depth 0
[DEBUG] [2020-11-20 07:14:39,542] [20527:139871606757184] - profile.py[line:237]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.node_positions.fit.1.0.0]host<-[Party(role=guest, party_id=10000)] start
[DEBUG] [2020-11-20 07:14:39,866] [20527:139871606757184] - _federation.py[line:176]: [federation.eggroll.get.hash.a50d3aea493b835a213f.node_positions.fit.1.0.0] got RollPair(namespace=202011200707112994524_hetero_secure_boost_0_0, name=__rsk#202011200707112994524_hetero_secure_boost_0_0#hash.a50d3aea493b835a213f.node_positions#fit.1.0.0#guest#10000#host#9999, partitions=4)
[DEBUG] [2020-11-20 07:14:39,868] [20527:139871606757184] - profile.py[line:216]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.node_positions.fit.1.0.0]host<-[Party(role=guest, party_id=10000)] done
[DEBUG] [2020-11-20 07:14:39,869] [20527:139871606757184] - _cleaner.py[line:62]: [CLEAN]deleting <RollPair(_store=<ErStore(store_locator=<ErStoreLocator(id=0, store_type=LMDB, namespace=202011200707112994524_hetero_secure_boost_0_0, name=__rsk#202011200707112994524_hetero_secure_boost_0_0#hash.a50d3aea493b835a213f.node_positions#fit.0.0.1#guest#10000#host#9999, path=, total_partitions=4, partitioner=BYTESTRING_HASH, serdes=PICKLE) at 0x7f35829636d8>, partitions=[***, len=4], options=[{'eggroll.session.deploy.mode': 'cluster', 'eggroll.session.processors.per.node': '4', 'eggroll.session.id': '202011200707112994524_hetero_secure_boost_0_0_host_9999'}]) at 0x7f358293f518>) at 0x7f35828e6cf8>, destroy, {}
[DEBUG] [2020-11-20 07:14:40,102] [20527:139871606757184] - profile.py[line:87]: [computing#d30ffaa8fe]start
[DEBUG] [2020-11-20 07:14:40,399] [20527:139871606757184] - profile.py[line:93]: [computing#d30ffaa8fe]done, elapse: 0.29679441452026367, function: join(self: Table(partition=4), other: Table(partition=4), func: function) -> Table(partition=4)
[INFO] [2020-11-20 07:14:40,401] [20527:139871606757184] - decision_tree.py[line:114]: start to get node histograms
[INFO] [2020-11-20 07:14:40,402] [20527:139871606757184] - feature_histogram.py[line:197]: bin_shape is (20, 32), node num is 1
[DEBUG] [2020-11-20 07:14:40,408] [20527:139871606757184] - profile.py[line:87]: [computing#a2ad454bc4]start
[DEBUG] [2020-11-20 07:14:40,806] [20527:139871606757184] - profile.py[line:93]: [computing#a2ad454bc4]done, elapse: 0.3974294662475586, function: join(self: Table(partition=4), other: Table(partition=4), func: function) -> Table(partition=4)
[DEBUG] [2020-11-20 07:14:40,811] [20527:139871606757184] - profile.py[line:87]: [computing#7b3709c76f]start
[DEBUG] [2020-11-20 07:14:40,881] [20527:139871606757184] - profile.py[line:93]: [computing#7b3709c76f]done, elapse: 0.07048988342285156, function: count(self: Table(partition=4)) -> int
[DEBUG] [2020-11-20 07:14:40,885] [20527:139871606757184] - profile.py[line:87]: [computing#1564c72616]start
[DEBUG] [2020-11-20 07:14:42,237] [20527:139871606757184] - profile.py[line:93]: [computing#1564c72616]done, elapse: 1.3522956371307373, function: mapReducePartitions(self: Table(partition=4), mapper: partial, reducer: partial) -> Table(partition=4)
[DEBUG] [2020-11-20 07:14:42,246] [20527:139871606757184] - profile.py[line:87]: [computing#7527fb9b70]start
[DEBUG] [2020-11-20 07:14:42,539] [20527:139871606757184] - profile.py[line:93]: [computing#7527fb9b70]done, elapse: 0.29343199729919434, function: mapValues(self: Table(partition=4), func: function) -> Table(partition=4)
[INFO] [2020-11-20 07:14:42,540] [20527:139871606757184] - splitter.py[line:236]: splitter find split of host
[DEBUG] [2020-11-20 07:14:42,545] [20527:139871606757184] - profile.py[line:87]: [computing#bf91c5c623]start
[DEBUG] [2020-11-20 07:14:42,770] [20527:139871606757184] - profile.py[line:93]: [computing#bf91c5c623]done, elapse: 0.2248363494873047, function: mapValues(self: Table(partition=4), func: function) -> Table(partition=4)
[DEBUG] [2020-11-20 07:14:42,775] [20527:139871606757184] - profile.py[line:87]: [computing#8b18554d12]start
[DEBUG] [2020-11-20 07:14:42,781] [20527:139871606757184] - profile.py[line:93]: [computing#8b18554d12]done, elapse: 0.005171298980712891, function: collect(self: Table(partition=4)) -> generator
[DEBUG] [2020-11-20 07:14:43,154] [20527:139871606757184] - hetero_decision_tree_host.py[line:336]: sending en_splitinfo <federatedml.ensemble.basic_algorithms.decision_tree.tree_core.splitter.BigObjectTransfer object at 0x7f35826a19e8>
[INFO] [2020-11-20 07:14:43,156] [20527:139871606757184] - hetero_decision_tree_host.py[line:121]: send encrypted splitinfo of depth 0, batch 0
[DEBUG] [2020-11-20 07:14:43,158] [20527:139871606757184] - profile.py[line:232]: [federation.remote.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.encrypted_splitinfo_host.fit.1.0.0.0]host->[Party(role=guest, party_id=10000)] start
[DEBUG] [2020-11-20 07:14:43,159] [20527:139871606757184] - _federation.py[line:76]: [federation.eggroll.remote.hash.3392347e7e0faef9835a.encrypted_splitinfo_host.fit.1.0.0.0[('guest', '10000')])]remote split object with type: <class 'federatedml.ensemble.basic_algorithms.decision_tree.tree_core.splitter.BigObjectTransfer'>
[DEBUG] [2020-11-20 07:14:43,199] [20527:139871606757184] - profile.py[line:185]: [federation.remote.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.encrypted_splitinfo_host.fit.1.0.0.0]host->[Party(role=guest, party_id=10000)] done
[INFO] [2020-11-20 07:14:43,202] [20527:139871606757184] - hetero_decision_tree_host.py[line:128]: get federated best splitinfo of depth 0, batch 0
[DEBUG] [2020-11-20 07:14:43,205] [20527:139871606757184] - profile.py[line:237]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.federated_best_splitinfo_host.fit.1.0.0.0]host<-[Party(role=guest, party_id=10000)] start
[DEBUG] [2020-11-20 07:14:45,203] [20527:139867756816128] - _federation.py[line:133]: [federation.eggroll.remote.hash.3392347e7e0faef9835a.encrypted_splitinfo_host.fit.1.0.0.0]future to remote to party: ('guest', '10000') done
[DEBUG] [2020-11-20 07:14:47,442] [20527:139871606757184] - _federation.py[line:196]: [federation.eggroll.get.hash.2037679d27978ce15bad.federated_best_splitinfo_host.fit.1.0.0.0] got object with type: <class 'list'>
[DEBUG] [2020-11-20 07:14:47,443] [20527:139871606757184] - profile.py[line:216]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.federated_best_splitinfo_host.fit.1.0.0.0]host<-[Party(role=guest, party_id=10000)] done
[INFO] [2020-11-20 07:14:47,444] [20527:139871606757184] - hetero_decision_tree_host.py[line:135]: send host final splitinfo of depth 0, batch 0
[DEBUG] [2020-11-20 07:14:47,446] [20527:139871606757184] - hetero_decision_tree_host.py[line:141]: sitename is host:9999, self.sitename is host:9999
[DEBUG] [2020-11-20 07:14:47,447] [20527:139871606757184] - hetero_decision_tree_host.py[line:154]: final split info is ['**fid 7, bid None, sum_grad<federatedml.secureprotol.iterative_affine.DeterministicIterativeAffineCiphertext object at 0x7f35825aeac8>, sum_hess<federatedml.secureprotol.iterative_affine.DeterministicIterativeAffineCiphertext object at 0x7f35825aeb00>, gain<federatedml.secureprotol.iterative_affine.DeterministicIterativeAffineCiphertext object at 0x7f3582681780>**']
[DEBUG] [2020-11-20 07:14:47,448] [20527:139871606757184] - profile.py[line:232]: [federation.remote.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.final_splitinfo_host.fit.1.0.0.0]host->[Party(role=guest, party_id=10000)] start
[DEBUG] [2020-11-20 07:14:47,449] [20527:139871606757184] - _federation.py[line:86]: [federation.eggroll.remote.hash.91e654d2705dfcc49758.final_splitinfo_host.fit.1.0.0.0[('guest', '10000')])]remote object with type: <class 'list'>
[DEBUG] [2020-11-20 07:14:47,466] [20527:139871606757184] - profile.py[line:185]: [federation.remote.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.final_splitinfo_host.fit.1.0.0.0]host->[Party(role=guest, party_id=10000)] done
[DEBUG] [2020-11-20 07:14:47,467] [20527:139871606757184] - hetero_decision_tree_host.py[line:340]: computing host splits done
[INFO] [2020-11-20 07:14:47,468] [20527:139871606757184] - hetero_decision_tree_host.py[line:161]: get node from host to dispath, depth is 0
[DEBUG] [2020-11-20 07:14:47,469] [20527:139871606757184] - profile.py[line:237]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.dispatch_node_host.fit.1.0.0]host<-[Party(role=guest, party_id=10000)] start
[DEBUG] [2020-11-20 07:14:47,729] [20527:139867776485120] - _federation.py[line:133]: [federation.eggroll.remote.hash.91e654d2705dfcc49758.final_splitinfo_host.fit.1.0.0.0]future to remote to party: ('guest', '10000') done
[DEBUG] [2020-11-20 07:14:50,296] [20527:139871606757184] - _federation.py[line:176]: [federation.eggroll.get.hash.57bcc44b755b74edb18c.dispatch_node_host.fit.1.0.0] got RollPair(namespace=202011200707112994524_hetero_secure_boost_0_0, name=__rsk#202011200707112994524_hetero_secure_boost_0_0#hash.57bcc44b755b74edb18c.dispatch_node_host#fit.1.0.0#guest#10000#host#9999, partitions=4)
[DEBUG] [2020-11-20 07:14:50,298] [20527:139871606757184] - profile.py[line:216]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.dispatch_node_host.fit.1.0.0]host<-[Party(role=guest, party_id=10000)] done
[DEBUG] [2020-11-20 07:14:50,299] [20527:139871606757184] - _cleaner.py[line:62]: [CLEAN]deleting <RollPair(_store=<ErStore(store_locator=<ErStoreLocator(id=0, store_type=LMDB, namespace=202011200707112994524_hetero_secure_boost_0_0, name=__rsk#202011200707112994524_hetero_secure_boost_0_0#hash.57bcc44b755b74edb18c.dispatch_node_host#fit.0.0.1#guest#10000#host#9999, path=, total_partitions=4, partitioner=BYTESTRING_HASH, serdes=PICKLE) at 0x7f35828c1d30>, partitions=[***, len=4], options=[{'eggroll.session.id': '202011200707112994524_hetero_secure_boost_0_0_host_9999', 'eggroll.session.deploy.mode': 'cluster', 'eggroll.session.processors.per.node': '4'}]) at 0x7f358293fac8>) at 0x7f35828c16a0>, destroy, {}
[INFO] [2020-11-20 07:14:50,586] [20527:139871606757184] - hetero_decision_tree_host.py[line:247]: start to find host dispath of depth 0
[DEBUG] [2020-11-20 07:14:50,592] [20527:139871606757184] - profile.py[line:87]: [computing#be69352869]start
[DEBUG] [2020-11-20 07:14:50,912] [20527:139871606757184] - profile.py[line:93]: [computing#be69352869]done, elapse: 0.3200407028198242, function: join(self: Table(partition=4), other: Table(partition=4), func: partial) -> Table(partition=4)
[INFO] [2020-11-20 07:14:50,913] [20527:139871606757184] - hetero_decision_tree_host.py[line:167]: send host dispatch result, depth is 0
[DEBUG] [2020-11-20 07:14:50,914] [20527:139871606757184] - profile.py[line:232]: [federation.remote.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.dispatch_node_host_result.fit.1.0.0]host->[Party(role=guest, party_id=10000)] start
[DEBUG] [2020-11-20 07:14:50,915] [20527:139871606757184] - _federation.py[line:69]: [federation.eggroll.remote.hash.d8b4c7b00ef279c1dba0.dispatch_node_host_result.fit.1.0.0[('guest', '10000')])]remote RollPair(namespace=202011200707112994524_hetero_secure_boost_0_0, name=__rsk#202011200707112994524_hetero_secure_boost_0_0#hash.57bcc44b755b74edb18c.dispatch_node_20201120.071450.600214.1, partitions=4)
[DEBUG] [2020-11-20 07:14:50,963] [20527:139871606757184] - profile.py[line:185]: [federation.remote.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.dispatch_node_host_result.fit.1.0.0]host->[Party(role=guest, party_id=10000)] done
[DEBUG] [2020-11-20 07:14:50,965] [20527:139871606757184] - _cleaner.py[line:62]: [CLEAN]deleting <RollPair(_store=<ErStore(store_locator=<ErStoreLocator(id=0, store_type=LMDB, namespace=202011200707112994524_hetero_secure_boost_0_0, name=__rsk#202011200707112994524_hetero_secure_boost_0_0#hash.57bcc44b755b74edb18c.dispatch_node_20201120.071407.614992.1, path=, total_partitions=4, partitioner=BYTESTRING_HASH, serdes=PICKLE) at 0x7f358276e320>, partitions=[***, len=4], options=[{'eggroll.session.id': '202011200707112994524_hetero_secure_boost_0_0_host_9999', 'eggroll.session.deploy.mode': 'cluster', 'eggroll.session.processors.per.node': '4'}]) at 0x7f358276e518>) at 0x7f35828ff3c8>, destroy, {}
[DEBUG] [2020-11-20 07:14:51,388] [20527:139867731638016] - _federation.py[line:133]: [federation.eggroll.remote.hash.d8b4c7b00ef279c1dba0.dispatch_node_host_result.fit.1.0.0]future to remote to party: ('guest', '10000') done
[INFO] [2020-11-20 07:14:51,443] [20527:139871606757184] - hetero_decision_tree_host.py[line:116]: get tree node queue of depth 1
[DEBUG] [2020-11-20 07:14:51,446] [20527:139871606757184] - profile.py[line:237]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.tree_node_queue.fit.1.0.1]host<-[Party(role=guest, party_id=10000)] start
[DEBUG] [2020-11-20 07:14:52,782] [20527:139871606757184] - _federation.py[line:196]: [federation.eggroll.get.hash.5c76808850a6d1fe24d8.tree_node_queue.fit.1.0.1] got object with type: <class 'list'>
[DEBUG] [2020-11-20 07:14:52,783] [20527:139871606757184] - profile.py[line:216]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.tree_node_queue.fit.1.0.1]host<-[Party(role=guest, party_id=10000)] done
[INFO] [2020-11-20 07:14:52,784] [20527:139871606757184] - hetero_decision_tree_host.py[line:110]: get tree node queue of depth 1
[DEBUG] [2020-11-20 07:14:52,786] [20527:139871606757184] - profile.py[line:237]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.node_positions.fit.1.0.1]host<-[Party(role=guest, party_id=10000)] start
[DEBUG] [2020-11-20 07:14:53,091] [20527:139871606757184] - _federation.py[line:176]: [federation.eggroll.get.hash.a50d3aea493b835a213f.node_positions.fit.1.0.1] got RollPair(namespace=202011200707112994524_hetero_secure_boost_0_0, name=__rsk#202011200707112994524_hetero_secure_boost_0_0#hash.a50d3aea493b835a213f.node_positions#fit.1.0.1#guest#10000#host#9999, partitions=4)
[DEBUG] [2020-11-20 07:14:53,093] [20527:139871606757184] - profile.py[line:216]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.node_positions.fit.1.0.1]host<-[Party(role=guest, party_id=10000)] done
[DEBUG] [2020-11-20 07:14:53,095] [20527:139871606757184] - _cleaner.py[line:62]: [CLEAN]deleting <RollPair(_store=<ErStore(store_locator=<ErStoreLocator(id=0, store_type=LMDB, namespace=202011200707112994524_hetero_secure_boost_0_0, name=__rsk#202011200707112994524_hetero_secure_boost_0_0#hash.a50d3aea493b835a213f.node_positions#fit.0.0.2#guest#10000#host#9999, path=, total_partitions=4, partitioner=BYTESTRING_HASH, serdes=PICKLE) at 0x7f3582944f28>, partitions=[***, len=4], options=[{'eggroll.session.deploy.mode': 'cluster', 'eggroll.session.processors.per.node': '4', 'eggroll.session.id': '202011200707112994524_hetero_secure_boost_0_0_host_9999'}]) at 0x7f358079f518>) at 0x7f358293fa58>, destroy, {}
[DEBUG] [2020-11-20 07:14:53,315] [20527:139871606757184] - profile.py[line:87]: [computing#d30ffaa8fe]start
[DEBUG] [2020-11-20 07:14:53,679] [20527:139871606757184] - profile.py[line:93]: [computing#d30ffaa8fe]done, elapse: 0.3638730049133301, function: join(self: Table(partition=4), other: Table(partition=4), func: function) -> Table(partition=4)
[INFO] [2020-11-20 07:14:53,681] [20527:139871606757184] - decision_tree.py[line:114]: start to get node histograms
[INFO] [2020-11-20 07:14:53,681] [20527:139871606757184] - feature_histogram.py[line:197]: bin_shape is (20, 32), node num is 2
[DEBUG] [2020-11-20 07:14:53,686] [20527:139871606757184] - profile.py[line:87]: [computing#a2ad454bc4]start
[DEBUG] [2020-11-20 07:14:53,915] [20527:139871606757184] - profile.py[line:93]: [computing#a2ad454bc4]done, elapse: 0.22923016548156738, function: join(self: Table(partition=4), other: Table(partition=4), func: function) -> Table(partition=4)
[DEBUG] [2020-11-20 07:14:53,921] [20527:139871606757184] - profile.py[line:87]: [computing#7b3709c76f]start
[DEBUG] [2020-11-20 07:14:54,009] [20527:139871606757184] - profile.py[line:93]: [computing#7b3709c76f]done, elapse: 0.08875155448913574, function: count(self: Table(partition=4)) -> int
[DEBUG] [2020-11-20 07:14:54,015] [20527:139871606757184] - profile.py[line:87]: [computing#1564c72616]start
[DEBUG] [2020-11-20 07:14:55,412] [20527:139871606757184] - profile.py[line:93]: [computing#1564c72616]done, elapse: 1.3967339992523193, function: mapReducePartitions(self: Table(partition=4), mapper: partial, reducer: partial) -> Table(partition=4)
[DEBUG] [2020-11-20 07:14:55,415] [20527:139871606757184] - profile.py[line:87]: [computing#7527fb9b70]start
[DEBUG] [2020-11-20 07:14:55,673] [20527:139871606757184] - profile.py[line:93]: [computing#7527fb9b70]done, elapse: 0.25802063941955566, function: mapValues(self: Table(partition=4), func: function) -> Table(partition=4)
[INFO] [2020-11-20 07:14:55,675] [20527:139871606757184] - splitter.py[line:236]: splitter find split of host
[DEBUG] [2020-11-20 07:14:55,678] [20527:139871606757184] - profile.py[line:87]: [computing#bf91c5c623]start
[DEBUG] [2020-11-20 07:14:55,883] [20527:139871606757184] - profile.py[line:93]: [computing#bf91c5c623]done, elapse: 0.2047102451324463, function: mapValues(self: Table(partition=4), func: function) -> Table(partition=4)
[DEBUG] [2020-11-20 07:14:55,887] [20527:139871606757184] - profile.py[line:87]: [computing#8b18554d12]start
[DEBUG] [2020-11-20 07:14:55,893] [20527:139871606757184] - profile.py[line:93]: [computing#8b18554d12]done, elapse: 0.00569605827331543, function: collect(self: Table(partition=4)) -> generator
[DEBUG] [2020-11-20 07:14:56,858] [20527:139871606757184] - hetero_decision_tree_host.py[line:336]: sending en_splitinfo <federatedml.ensemble.basic_algorithms.decision_tree.tree_core.splitter.BigObjectTransfer object at 0x7f35825dcc18>
[INFO] [2020-11-20 07:14:56,859] [20527:139871606757184] - hetero_decision_tree_host.py[line:121]: send encrypted splitinfo of depth 1, batch 0
[DEBUG] [2020-11-20 07:14:56,861] [20527:139871606757184] - profile.py[line:232]: [federation.remote.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.encrypted_splitinfo_host.fit.1.0.1.0]host->[Party(role=guest, party_id=10000)] start
[DEBUG] [2020-11-20 07:14:56,862] [20527:139871606757184] - _federation.py[line:76]: [federation.eggroll.remote.hash.3392347e7e0faef9835a.encrypted_splitinfo_host.fit.1.0.1.0[('guest', '10000')])]remote split object with type: <class 'federatedml.ensemble.basic_algorithms.decision_tree.tree_core.splitter.BigObjectTransfer'>
[DEBUG] [2020-11-20 07:14:56,946] [20527:139871606757184] - profile.py[line:185]: [federation.remote.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.encrypted_splitinfo_host.fit.1.0.1.0]host->[Party(role=guest, party_id=10000)] done
[INFO] [2020-11-20 07:14:56,956] [20527:139871606757184] - hetero_decision_tree_host.py[line:128]: get federated best splitinfo of depth 1, batch 0
[DEBUG] [2020-11-20 07:14:56,958] [20527:139871606757184] - profile.py[line:237]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.federated_best_splitinfo_host.fit.1.0.1.0]host<-[Party(role=guest, party_id=10000)] start
[DEBUG] [2020-11-20 07:15:01,643] [20527:139867784877824] - _federation.py[line:133]: [federation.eggroll.remote.hash.3392347e7e0faef9835a.encrypted_splitinfo_host.fit.1.0.1.0]future to remote to party: ('guest', '10000') done
[DEBUG] [2020-11-20 07:15:03,502] [20527:139871606757184] - _federation.py[line:196]: [federation.eggroll.get.hash.2037679d27978ce15bad.federated_best_splitinfo_host.fit.1.0.1.0] got object with type: <class 'list'>
[DEBUG] [2020-11-20 07:15:03,504] [20527:139871606757184] - profile.py[line:216]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.federated_best_splitinfo_host.fit.1.0.1.0]host<-[Party(role=guest, party_id=10000)] done
[INFO] [2020-11-20 07:15:03,505] [20527:139871606757184] - hetero_decision_tree_host.py[line:135]: send host final splitinfo of depth 1, batch 0
[DEBUG] [2020-11-20 07:15:03,506] [20527:139871606757184] - hetero_decision_tree_host.py[line:141]: sitename is host:9999, self.sitename is host:9999
[DEBUG] [2020-11-20 07:15:03,508] [20527:139871606757184] - hetero_decision_tree_host.py[line:141]: sitename is host:9999, self.sitename is host:9999
[DEBUG] [2020-11-20 07:15:03,509] [20527:139871606757184] - hetero_decision_tree_host.py[line:154]: final split info is ['**fid 7, bid None, sum_grad<federatedml.secureprotol.iterative_affine.DeterministicIterativeAffineCiphertext object at 0x7f3582a88898>, sum_hess<federatedml.secureprotol.iterative_affine.DeterministicIterativeAffineCiphertext object at 0x7f3582a88d68>, gain<federatedml.secureprotol.iterative_affine.DeterministicIterativeAffineCiphertext object at 0x7f35825cb320>**', '**fid 7, bid None, sum_grad<federatedml.secureprotol.iterative_affine.DeterministicIterativeAffineCiphertext object at 0x7f3582681320>, sum_hess<federatedml.secureprotol.iterative_affine.DeterministicIterativeAffineCiphertext object at 0x7f3582681860>, gain<federatedml.secureprotol.iterative_affine.DeterministicIterativeAffineCiphertext object at 0x7f358267ea90>**']
[DEBUG] [2020-11-20 07:15:03,510] [20527:139871606757184] - profile.py[line:232]: [federation.remote.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.final_splitinfo_host.fit.1.0.1.0]host->[Party(role=guest, party_id=10000)] start
[DEBUG] [2020-11-20 07:15:03,511] [20527:139871606757184] - _federation.py[line:86]: [federation.eggroll.remote.hash.91e654d2705dfcc49758.final_splitinfo_host.fit.1.0.1.0[('guest', '10000')])]remote object with type: <class 'list'>
[DEBUG] [2020-11-20 07:15:03,519] [20527:139871606757184] - profile.py[line:185]: [federation.remote.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.final_splitinfo_host.fit.1.0.1.0]host->[Party(role=guest, party_id=10000)] done
[DEBUG] [2020-11-20 07:15:03,520] [20527:139871606757184] - hetero_decision_tree_host.py[line:340]: computing host splits done
[INFO] [2020-11-20 07:15:03,534] [20527:139871606757184] - hetero_decision_tree_host.py[line:161]: get node from host to dispath, depth is 1
[DEBUG] [2020-11-20 07:15:03,536] [20527:139871606757184] - profile.py[line:237]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.dispatch_node_host.fit.1.0.1]host<-[Party(role=guest, party_id=10000)] start
[DEBUG] [2020-11-20 07:15:03,794] [20527:139867748423424] - _federation.py[line:133]: [federation.eggroll.remote.hash.91e654d2705dfcc49758.final_splitinfo_host.fit.1.0.1.0]future to remote to party: ('guest', '10000') done
[DEBUG] [2020-11-20 07:15:06,202] [20527:139871606757184] - _federation.py[line:176]: [federation.eggroll.get.hash.57bcc44b755b74edb18c.dispatch_node_host.fit.1.0.1] got RollPair(namespace=202011200707112994524_hetero_secure_boost_0_0, name=__rsk#202011200707112994524_hetero_secure_boost_0_0#hash.57bcc44b755b74edb18c.dispatch_node_host#fit.1.0.1#guest#10000#host#9999, partitions=4)
[DEBUG] [2020-11-20 07:15:06,205] [20527:139871606757184] - profile.py[line:216]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.dispatch_node_host.fit.1.0.1]host<-[Party(role=guest, party_id=10000)] done
[DEBUG] [2020-11-20 07:15:06,206] [20527:139871606757184] - _cleaner.py[line:62]: [CLEAN]deleting <RollPair(_store=<ErStore(store_locator=<ErStoreLocator(id=0, store_type=LMDB, namespace=202011200707112994524_hetero_secure_boost_0_0, name=__rsk#202011200707112994524_hetero_secure_boost_0_0#hash.57bcc44b755b74edb18c.dispatch_node_host#fit.0.0.2#guest#10000#host#9999, path=, total_partitions=4, partitioner=BYTESTRING_HASH, serdes=PICKLE) at 0x7f3582739978>, partitions=[***, len=4], options=[{'eggroll.session.deploy.mode': 'cluster', 'eggroll.session.processors.per.node': '4', 'eggroll.session.id': '202011200707112994524_hetero_secure_boost_0_0_host_9999'}]) at 0x7f3582870da0>) at 0x7f35828c4278>, destroy, {}
[INFO] [2020-11-20 07:15:06,715] [20527:139871606757184] - hetero_decision_tree_host.py[line:247]: start to find host dispath of depth 1
[DEBUG] [2020-11-20 07:15:06,721] [20527:139871606757184] - profile.py[line:87]: [computing#be69352869]start
[DEBUG] [2020-11-20 07:15:06,975] [20527:139871606757184] - profile.py[line:93]: [computing#be69352869]done, elapse: 0.25487542152404785, function: join(self: Table(partition=4), other: Table(partition=4), func: partial) -> Table(partition=4)
[INFO] [2020-11-20 07:15:06,977] [20527:139871606757184] - hetero_decision_tree_host.py[line:167]: send host dispatch result, depth is 1
[DEBUG] [2020-11-20 07:15:06,979] [20527:139871606757184] - profile.py[line:232]: [federation.remote.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.dispatch_node_host_result.fit.1.0.1]host->[Party(role=guest, party_id=10000)] start
[DEBUG] [2020-11-20 07:15:06,981] [20527:139871606757184] - _federation.py[line:69]: [federation.eggroll.remote.hash.d8b4c7b00ef279c1dba0.dispatch_node_host_result.fit.1.0.1[('guest', '10000')])]remote RollPair(namespace=202011200707112994524_hetero_secure_boost_0_0, name=__rsk#202011200707112994524_hetero_secure_boost_0_0#hash.57bcc44b755b74edb18c.dispatch_node_20201120.071506.730215.1, partitions=4)
[DEBUG] [2020-11-20 07:15:06,989] [20527:139871606757184] - profile.py[line:185]: [federation.remote.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.dispatch_node_host_result.fit.1.0.1]host->[Party(role=guest, party_id=10000)] done
[DEBUG] [2020-11-20 07:15:06,991] [20527:139871606757184] - _cleaner.py[line:62]: [CLEAN]deleting <RollPair(_store=<ErStore(store_locator=<ErStoreLocator(id=0, store_type=LMDB, namespace=202011200707112994524_hetero_secure_boost_0_0, name=__rsk#202011200707112994524_hetero_secure_boost_0_0#hash.57bcc44b755b74edb18c.dispatch_node_20201120.071426.149987.1, path=, total_partitions=4, partitioner=BYTESTRING_HASH, serdes=PICKLE) at 0x7f35826decf8>, partitions=[***, len=4], options=[{'eggroll.session.id': '202011200707112994524_hetero_secure_boost_0_0_host_9999', 'eggroll.session.deploy.mode': 'cluster', 'eggroll.session.processors.per.node': '4'}]) at 0x7f35826ded68>) at 0x7f358293f3c8>, destroy, {}
[INFO] [2020-11-20 07:15:07,267] [20527:139871606757184] - hetero_decision_tree_host.py[line:116]: get tree node queue of depth 2
[DEBUG] [2020-11-20 07:15:07,269] [20527:139871606757184] - profile.py[line:237]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.tree_node_queue.fit.1.0.2]host<-[Party(role=guest, party_id=10000)] start
[DEBUG] [2020-11-20 07:15:07,465] [20527:139867784877824] - _federation.py[line:133]: [federation.eggroll.remote.hash.d8b4c7b00ef279c1dba0.dispatch_node_host_result.fit.1.0.1]future to remote to party: ('guest', '10000') done
[DEBUG] [2020-11-20 07:15:08,495] [20527:139871606757184] - _federation.py[line:196]: [federation.eggroll.get.hash.5c76808850a6d1fe24d8.tree_node_queue.fit.1.0.2] got object with type: <class 'list'>
[DEBUG] [2020-11-20 07:15:08,496] [20527:139871606757184] - profile.py[line:216]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.tree_node_queue.fit.1.0.2]host<-[Party(role=guest, party_id=10000)] done
[INFO] [2020-11-20 07:15:08,497] [20527:139871606757184] - hetero_decision_tree_host.py[line:110]: get tree node queue of depth 2
[DEBUG] [2020-11-20 07:15:08,498] [20527:139871606757184] - profile.py[line:237]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.node_positions.fit.1.0.2]host<-[Party(role=guest, party_id=10000)] start
[DEBUG] [2020-11-20 07:15:08,777] [20527:139871606757184] - _federation.py[line:176]: [federation.eggroll.get.hash.a50d3aea493b835a213f.node_positions.fit.1.0.2] got RollPair(namespace=202011200707112994524_hetero_secure_boost_0_0, name=__rsk#202011200707112994524_hetero_secure_boost_0_0#hash.a50d3aea493b835a213f.node_positions#fit.1.0.2#guest#10000#host#9999, partitions=4)
[DEBUG] [2020-11-20 07:15:08,780] [20527:139871606757184] - profile.py[line:216]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.node_positions.fit.1.0.2]host<-[Party(role=guest, party_id=10000)] done
[DEBUG] [2020-11-20 07:15:08,780] [20527:139871606757184] - _cleaner.py[line:62]: [CLEAN]deleting <RollPair(_store=<ErStore(store_locator=<ErStoreLocator(id=0, store_type=LMDB, namespace=202011200707112994524_hetero_secure_boost_0_0, name=__rsk#202011200707112994524_hetero_secure_boost_0_0#hash.a50d3aea493b835a213f.node_positions#fit.1.0.0#guest#10000#host#9999, path=, total_partitions=4, partitioner=BYTESTRING_HASH, serdes=PICKLE) at 0x7f35826720f0>, partitions=[***, len=4], options=[{'eggroll.session.id': '202011200707112994524_hetero_secure_boost_0_0_host_9999', 'eggroll.session.deploy.mode': 'cluster', 'eggroll.session.processors.per.node': '4'}]) at 0x7f3582672dd8>) at 0x7f3582672e10>, destroy, {}
[DEBUG] [2020-11-20 07:15:08,980] [20527:139871606757184] - profile.py[line:87]: [computing#d30ffaa8fe]start
[DEBUG] [2020-11-20 07:15:09,276] [20527:139871606757184] - profile.py[line:93]: [computing#d30ffaa8fe]done, elapse: 0.2958405017852783, function: join(self: Table(partition=4), other: Table(partition=4), func: function) -> Table(partition=4)
[INFO] [2020-11-20 07:15:09,278] [20527:139871606757184] - decision_tree.py[line:114]: start to get node histograms
[INFO] [2020-11-20 07:15:09,279] [20527:139871606757184] - feature_histogram.py[line:197]: bin_shape is (20, 32), node num is 4
[DEBUG] [2020-11-20 07:15:09,285] [20527:139871606757184] - profile.py[line:87]: [computing#a2ad454bc4]start
[DEBUG] [2020-11-20 07:15:09,805] [20527:139871606757184] - profile.py[line:93]: [computing#a2ad454bc4]done, elapse: 0.5196638107299805, function: join(self: Table(partition=4), other: Table(partition=4), func: function) -> Table(partition=4)
[DEBUG] [2020-11-20 07:15:09,812] [20527:139871606757184] - profile.py[line:87]: [computing#7b3709c76f]start
[DEBUG] [2020-11-20 07:15:09,898] [20527:139871606757184] - profile.py[line:93]: [computing#7b3709c76f]done, elapse: 0.08591723442077637, function: count(self: Table(partition=4)) -> int
[DEBUG] [2020-11-20 07:15:09,905] [20527:139871606757184] - profile.py[line:87]: [computing#1564c72616]start
[DEBUG] [2020-11-20 07:15:11,166] [20527:139871606757184] - profile.py[line:93]: [computing#1564c72616]done, elapse: 1.2614905834197998, function: mapReducePartitions(self: Table(partition=4), mapper: partial, reducer: partial) -> Table(partition=4)
[DEBUG] [2020-11-20 07:15:11,174] [20527:139871606757184] - profile.py[line:87]: [computing#7527fb9b70]start
[DEBUG] [2020-11-20 07:15:11,422] [20527:139871606757184] - profile.py[line:93]: [computing#7527fb9b70]done, elapse: 0.24769020080566406, function: mapValues(self: Table(partition=4), func: function) -> Table(partition=4)
[INFO] [2020-11-20 07:15:11,424] [20527:139871606757184] - splitter.py[line:236]: splitter find split of host
[DEBUG] [2020-11-20 07:15:11,431] [20527:139871606757184] - profile.py[line:87]: [computing#bf91c5c623]start
[DEBUG] [2020-11-20 07:15:11,697] [20527:139871606757184] - profile.py[line:93]: [computing#bf91c5c623]done, elapse: 0.266035795211792, function: mapValues(self: Table(partition=4), func: function) -> Table(partition=4)
[DEBUG] [2020-11-20 07:15:11,701] [20527:139871606757184] - profile.py[line:87]: [computing#8b18554d12]start
[DEBUG] [2020-11-20 07:15:11,706] [20527:139871606757184] - profile.py[line:93]: [computing#8b18554d12]done, elapse: 0.004890918731689453, function: collect(self: Table(partition=4)) -> generator
[DEBUG] [2020-11-20 07:15:12,395] [20527:139871606757184] - hetero_decision_tree_host.py[line:336]: sending en_splitinfo <federatedml.ensemble.basic_algorithms.decision_tree.tree_core.splitter.BigObjectTransfer object at 0x7f3582a3f128>
[INFO] [2020-11-20 07:15:12,396] [20527:139871606757184] - hetero_decision_tree_host.py[line:121]: send encrypted splitinfo of depth 2, batch 0
[DEBUG] [2020-11-20 07:15:12,398] [20527:139871606757184] - profile.py[line:232]: [federation.remote.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.encrypted_splitinfo_host.fit.1.0.2.0]host->[Party(role=guest, party_id=10000)] start
[DEBUG] [2020-11-20 07:15:12,400] [20527:139871606757184] - _federation.py[line:76]: [federation.eggroll.remote.hash.3392347e7e0faef9835a.encrypted_splitinfo_host.fit.1.0.2.0[('guest', '10000')])]remote split object with type: <class 'federatedml.ensemble.basic_algorithms.decision_tree.tree_core.splitter.BigObjectTransfer'>
[DEBUG] [2020-11-20 07:15:12,566] [20527:139871606757184] - profile.py[line:185]: [federation.remote.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.encrypted_splitinfo_host.fit.1.0.2.0]host->[Party(role=guest, party_id=10000)] done
[INFO] [2020-11-20 07:15:12,569] [20527:139871606757184] - hetero_decision_tree_host.py[line:128]: get federated best splitinfo of depth 2, batch 0
[DEBUG] [2020-11-20 07:15:12,604] [20527:139871606757184] - profile.py[line:237]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.federated_best_splitinfo_host.fit.1.0.2.0]host<-[Party(role=guest, party_id=10000)] start
[DEBUG] [2020-11-20 07:15:19,404] [20527:139867776485120] - _federation.py[line:133]: [federation.eggroll.remote.hash.3392347e7e0faef9835a.encrypted_splitinfo_host.fit.1.0.2.0]future to remote to party: ('guest', '10000') done
[DEBUG] [2020-11-20 07:15:21,604] [20527:139871606757184] - _federation.py[line:196]: [federation.eggroll.get.hash.2037679d27978ce15bad.federated_best_splitinfo_host.fit.1.0.2.0] got object with type: <class 'list'>
[DEBUG] [2020-11-20 07:15:21,606] [20527:139871606757184] - profile.py[line:216]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.federated_best_splitinfo_host.fit.1.0.2.0]host<-[Party(role=guest, party_id=10000)] done
[INFO] [2020-11-20 07:15:21,607] [20527:139871606757184] - hetero_decision_tree_host.py[line:135]: send host final splitinfo of depth 2, batch 0
[DEBUG] [2020-11-20 07:15:21,609] [20527:139871606757184] - hetero_decision_tree_host.py[line:141]: sitename is host:9999, self.sitename is host:9999
[DEBUG] [2020-11-20 07:15:21,609] [20527:139871606757184] - hetero_decision_tree_host.py[line:141]: sitename is host:9999, self.sitename is host:9999
[DEBUG] [2020-11-20 07:15:21,610] [20527:139871606757184] - hetero_decision_tree_host.py[line:141]: sitename is host:9999, self.sitename is host:9999
[DEBUG] [2020-11-20 07:15:21,610] [20527:139871606757184] - hetero_decision_tree_host.py[line:141]: sitename is host:9999, self.sitename is host:9999
[DEBUG] [2020-11-20 07:15:21,611] [20527:139871606757184] - hetero_decision_tree_host.py[line:154]: final split info is ['**fid 12, bid None, sum_grad<federatedml.secureprotol.iterative_affine.DeterministicIterativeAffineCiphertext object at 0x7f3582681358>, sum_hess<federatedml.secureprotol.iterative_affine.DeterministicIterativeAffineCiphertext object at 0x7f35826814a8>, gain<federatedml.secureprotol.iterative_affine.DeterministicIterativeAffineCiphertext object at 0x7f358293f208>**', '**fid 1, bid None, sum_grad<federatedml.secureprotol.iterative_affine.DeterministicIterativeAffineCiphertext object at 0x7f358283f4a8>, sum_hess<federatedml.secureprotol.iterative_affine.DeterministicIterativeAffineCiphertext object at 0x7f358283f4e0>, gain<federatedml.secureprotol.iterative_affine.DeterministicIterativeAffineCiphertext object at 0x7f358076cd30>**', '**fid 1, bid None, sum_grad<federatedml.secureprotol.iterative_affine.DeterministicIterativeAffineCiphertext object at 0x7f35825cbf98>, sum_hess<federatedml.secureprotol.iterative_affine.DeterministicIterativeAffineCiphertext object at 0x7f35825cb0b8>, gain<federatedml.secureprotol.iterative_affine.DeterministicIterativeAffineCiphertext object at 0x7f35827fdc18>**', '**fid 6, bid None, sum_grad<federatedml.secureprotol.iterative_affine.DeterministicIterativeAffineCiphertext object at 0x7f35827e7898>, sum_hess<federatedml.secureprotol.iterative_affine.DeterministicIterativeAffineCiphertext object at 0x7f35827e78d0>, gain<federatedml.secureprotol.iterative_affine.DeterministicIterativeAffineCiphertext object at 0x7f35827fdc50>**']
[DEBUG] [2020-11-20 07:15:21,612] [20527:139871606757184] - profile.py[line:232]: [federation.remote.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.final_splitinfo_host.fit.1.0.2.0]host->[Party(role=guest, party_id=10000)] start
[DEBUG] [2020-11-20 07:15:21,613] [20527:139871606757184] - _federation.py[line:86]: [federation.eggroll.remote.hash.91e654d2705dfcc49758.final_splitinfo_host.fit.1.0.2.0[('guest', '10000')])]remote object with type: <class 'list'>
[DEBUG] [2020-11-20 07:15:21,620] [20527:139871606757184] - profile.py[line:185]: [federation.remote.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.final_splitinfo_host.fit.1.0.2.0]host->[Party(role=guest, party_id=10000)] done
[DEBUG] [2020-11-20 07:15:21,621] [20527:139871606757184] - hetero_decision_tree_host.py[line:340]: computing host splits done
[INFO] [2020-11-20 07:15:21,622] [20527:139871606757184] - hetero_decision_tree_host.py[line:161]: get node from host to dispath, depth is 2
[DEBUG] [2020-11-20 07:15:21,623] [20527:139871606757184] - profile.py[line:237]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.dispatch_node_host.fit.1.0.2]host<-[Party(role=guest, party_id=10000)] start
[DEBUG] [2020-11-20 07:15:21,797] [20527:139867756816128] - _federation.py[line:133]: [federation.eggroll.remote.hash.91e654d2705dfcc49758.final_splitinfo_host.fit.1.0.2.0]future to remote to party: ('guest', '10000') done
[DEBUG] [2020-11-20 07:15:24,188] [20527:139871606757184] - _federation.py[line:176]: [federation.eggroll.get.hash.57bcc44b755b74edb18c.dispatch_node_host.fit.1.0.2] got RollPair(namespace=202011200707112994524_hetero_secure_boost_0_0, name=__rsk#202011200707112994524_hetero_secure_boost_0_0#hash.57bcc44b755b74edb18c.dispatch_node_host#fit.1.0.2#guest#10000#host#9999, partitions=4)
[DEBUG] [2020-11-20 07:15:24,190] [20527:139871606757184] - profile.py[line:216]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.dispatch_node_host.fit.1.0.2]host<-[Party(role=guest, party_id=10000)] done
[DEBUG] [2020-11-20 07:15:24,192] [20527:139871606757184] - _cleaner.py[line:62]: [CLEAN]deleting <RollPair(_store=<ErStore(store_locator=<ErStoreLocator(id=0, store_type=LMDB, namespace=202011200707112994524_hetero_secure_boost_0_0, name=__rsk#202011200707112994524_hetero_secure_boost_0_0#hash.57bcc44b755b74edb18c.dispatch_node_host#fit.1.0.0#guest#10000#host#9999, path=, total_partitions=4, partitioner=BYTESTRING_HASH, serdes=PICKLE) at 0x7f35825e2470>, partitions=[***, len=4], options=[{'eggroll.session.deploy.mode': 'cluster', 'eggroll.session.processors.per.node': '4', 'eggroll.session.id': '202011200707112994524_hetero_secure_boost_0_0_host_9999'}]) at 0x7f35826724e0>) at 0x7f35825e29b0>, destroy, {}
[INFO] [2020-11-20 07:15:24,394] [20527:139871606757184] - hetero_decision_tree_host.py[line:247]: start to find host dispath of depth 2
[DEBUG] [2020-11-20 07:15:24,402] [20527:139871606757184] - profile.py[line:87]: [computing#be69352869]start
[DEBUG] [2020-11-20 07:15:24,969] [20527:139871606757184] - profile.py[line:93]: [computing#be69352869]done, elapse: 0.5675764083862305, function: join(self: Table(partition=4), other: Table(partition=4), func: partial) -> Table(partition=4)
[INFO] [2020-11-20 07:15:24,971] [20527:139871606757184] - hetero_decision_tree_host.py[line:167]: send host dispatch result, depth is 2
[DEBUG] [2020-11-20 07:15:24,974] [20527:139871606757184] - profile.py[line:232]: [federation.remote.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.dispatch_node_host_result.fit.1.0.2]host->[Party(role=guest, party_id=10000)] start
[DEBUG] [2020-11-20 07:15:24,976] [20527:139871606757184] - _federation.py[line:69]: [federation.eggroll.remote.hash.d8b4c7b00ef279c1dba0.dispatch_node_host_result.fit.1.0.2[('guest', '10000')])]remote RollPair(namespace=202011200707112994524_hetero_secure_boost_0_0, name=__rsk#202011200707112994524_hetero_secure_boost_0_0#hash.57bcc44b755b74edb18c.dispatch_node_20201120.071524.410899.1, partitions=4)
[DEBUG] [2020-11-20 07:15:25,011] [20527:139871606757184] - profile.py[line:185]: [federation.remote.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.dispatch_node_host_result.fit.1.0.2]host->[Party(role=guest, party_id=10000)] done
[DEBUG] [2020-11-20 07:15:25,012] [20527:139871606757184] - _cleaner.py[line:62]: [CLEAN]deleting <RollPair(_store=<ErStore(store_locator=<ErStoreLocator(id=0, store_type=LMDB, namespace=202011200707112994524_hetero_secure_boost_0_0, name=__rsk#202011200707112994524_hetero_secure_boost_0_0#hash.57bcc44b755b74edb18c.dispatch_node_20201120.071450.600214.1, path=, total_partitions=4, partitioner=BYTESTRING_HASH, serdes=PICKLE) at 0x7f358267e080>, partitions=[***, len=4], options=[{'eggroll.session.deploy.mode': 'cluster', 'eggroll.session.processors.per.node': '4', 'eggroll.session.id': '202011200707112994524_hetero_secure_boost_0_0_host_9999'}]) at 0x7f358267e0f0>) at 0x7f35828c4780>, destroy, {}
[INFO] [2020-11-20 07:15:25,281] [20527:139871606757184] - hetero_decision_tree_host.py[line:175]: sync tree from guest
[DEBUG] [2020-11-20 07:15:25,283] [20527:139871606757184] - profile.py[line:237]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.tree.fit.1.0]host<-[Party(role=guest, party_id=10000)] start
[DEBUG] [2020-11-20 07:15:25,392] [20527:139867776485120] - _federation.py[line:133]: [federation.eggroll.remote.hash.d8b4c7b00ef279c1dba0.dispatch_node_host_result.fit.1.0.2]future to remote to party: ('guest', '10000') done
[DEBUG] [2020-11-20 07:15:27,836] [20527:139871606757184] - _federation.py[line:196]: [federation.eggroll.get.hash.6f9233a3e0ba7978235b.tree.fit.1.0] got object with type: <class 'list'>
[DEBUG] [2020-11-20 07:15:27,838] [20527:139871606757184] - profile.py[line:216]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.tree.fit.1.0]host<-[Party(role=guest, party_id=10000)] done
[INFO] [2020-11-20 07:15:27,839] [20527:139871606757184] - hetero_decision_tree_host.py[line:278]: convert tree node bins to real value
[DEBUG] [2020-11-20 07:15:27,842] [20527:139871606757184] - hetero_decision_tree_host.py[line:287]: shape of bin_split_points is 32
[DEBUG] [2020-11-20 07:15:27,843] [20527:139871606757184] - hetero_decision_tree_host.py[line:287]: shape of bin_split_points is 32
[INFO] [2020-11-20 07:15:27,844] [20527:139871606757184] - hetero_decision_tree_host.py[line:272]: remove duplicated nodes from split mask dict
[INFO] [2020-11-20 07:15:27,847] [20527:139871606757184] - hetero_decision_tree_host.py[line:375]: end to fit guest decision tree
[DEBUG] [2020-11-20 07:15:27,849] [20527:139871606757184] - validation_strategy.py[line:99]: validation_freqs is 1
[DEBUG] [2020-11-20 07:15:27,849] [20527:139871606757184] - validation_strategy.py[line:278]: begin to check validate status, need_run_validation is True
[DEBUG] [2020-11-20 07:15:27,850] [20527:139871606757184] - validation_strategy.py[line:99]: validation_freqs is 1
[DEBUG] [2020-11-20 07:15:27,851] [20527:139871606757184] - validation_strategy.py[line:241]: start to evaluate data validate
[DEBUG] [2020-11-20 07:15:27,851] [20527:139871606757184] - model_base.py[line:162]: set flowid to transfer_variable, flowid: fit_iteration_1_validate
[DEBUG] [2020-11-20 07:15:27,859] [20527:139871606757184] - profile.py[line:87]: [computing#767c3132d3]start
[DEBUG] [2020-11-20 07:15:27,904] [20527:139871606757184] - profile.py[line:93]: [computing#767c3132d3]done, elapse: 0.04503774642944336, function: count(self: Table(partition=4)) -> int
[INFO] [2020-11-20 07:15:27,906] [20527:139871606757184] - hetero_secureboost_host.py[line:182]: running prediction
[DEBUG] [2020-11-20 07:15:27,908] [20527:139871606757184] - profile.py[line:237]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_boosting_transfer_variable.HeteroBoostingTransferVariable.predict_start_round.fit_iteration_1_validate]host<-[Party(role=guest, party_id=10000)] start
[DEBUG] [2020-11-20 07:15:29,404] [20527:139871606757184] - _federation.py[line:196]: [federation.eggroll.get.hash.55bac2e405cb1beee722.predict_start_round.fit_iteration_1_validate] got object with type: <class 'int'>
[DEBUG] [2020-11-20 07:15:29,406] [20527:139871606757184] - profile.py[line:216]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_boosting_transfer_variable.HeteroBoostingTransferVariable.predict_start_round.fit_iteration_1_validate]host<-[Party(role=guest, party_id=10000)] done
[INFO] [2020-11-20 07:15:29,408] [20527:139871606757184] - splitter.py[line:59]: splitter init!
[INFO] [2020-11-20 07:15:29,409] [20527:139871606757184] - decision_tree.py[line:229]: load tree model
[INFO] [2020-11-20 07:15:29,411] [20527:139871606757184] - boosting.py[line:391]: generate flowid, flowid fit_iteration_1_validate
[INFO] [2020-11-20 07:15:29,412] [20527:139871606757184] - decision_tree.py[line:93]: set flowid, flowid is fit_iteration_1_validate.1.0
[DEBUG] [2020-11-20 07:15:29,412] [20527:139871606757184] - hetero_secureboost_host.py[line:167]: cur predict round is 0
[DEBUG] [2020-11-20 07:15:29,413] [20527:139871606757184] - profile.py[line:237]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_secure_boosting_predict_transfer_variable.HeteroSecureBoostTransferVariable.predict_stop_flag.fit_iteration_1_validate.1.0.0]host<-[Party(role=guest, party_id=10000)] start
[DEBUG] [2020-11-20 07:15:31,842] [20527:139871606757184] - _federation.py[line:196]: [federation.eggroll.get.hash.361c9228f6769dcc3527.predict_stop_flag.fit_iteration_1_validate.1.0.0] got object with type: <class 'bool'>
[DEBUG] [2020-11-20 07:15:31,843] [20527:139871606757184] - profile.py[line:216]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_secure_boosting_predict_transfer_variable.HeteroSecureBoostTransferVariable.predict_stop_flag.fit_iteration_1_validate.1.0.0]host<-[Party(role=guest, party_id=10000)] done
[DEBUG] [2020-11-20 07:15:31,845] [20527:139871606757184] - profile.py[line:237]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_secure_boosting_predict_transfer_variable.HeteroSecureBoostTransferVariable.guest_predict_data.fit_iteration_1_validate.1.0.0]host<-[Party(role=guest, party_id=10000)] start
[DEBUG] [2020-11-20 07:15:32,096] [20527:139871606757184] - _federation.py[line:176]: [federation.eggroll.get.hash.8af87c9df261887caccf.guest_predict_data.fit_iteration_1_validate.1.0.0] got RollPair(namespace=202011200707112994524_hetero_secure_boost_0_0, name=__rsk#202011200707112994524_hetero_secure_boost_0_0#hash.8af87c9df261887caccf.guest_predict_data#fit_iteration_1_validate.1.0.0#guest#10000#host#9999, partitions=4)
[DEBUG] [2020-11-20 07:15:32,098] [20527:139871606757184] - profile.py[line:216]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_secure_boosting_predict_transfer_variable.HeteroSecureBoostTransferVariable.guest_predict_data.fit_iteration_1_validate.1.0.0]host<-[Party(role=guest, party_id=10000)] done
[DEBUG] [2020-11-20 07:15:32,104] [20527:139871606757184] - profile.py[line:84]: [computing#21f09ccc0a]function_stack: [hetero_secureboost_host.py:174]boosting_fast_predict <-[hetero_secureboost_host.py:197]predict <-[io_check.py:31]_func <-[validation_strategy.py:246]get_predict_result <-[validation_strategy.py:292]validate <-[hetero_boosting.py:299]fit <-[model_base.py:101]run
[DEBUG] [2020-11-20 07:15:32,105] [20527:139871606757184] - profile.py[line:87]: [computing#21f09ccc0a]start
[DEBUG] [2020-11-20 07:15:32,586] [20527:139871606757184] - profile.py[line:93]: [computing#21f09ccc0a]done, elapse: 0.4820423126220703, function: join(self: Table(partition=4), other: Table(partition=4), func: partial) -> Table(partition=4)
[DEBUG] [2020-11-20 07:15:32,589] [20527:139871606757184] - profile.py[line:232]: [federation.remote.federatedml.transfer_variable.transfer_class.hetero_secure_boosting_predict_transfer_variable.HeteroSecureBoostTransferVariable.host_predict_data.fit_iteration_1_validate.1.0.0]host->[Party(role=guest, party_id=10000)] start
[DEBUG] [2020-11-20 07:15:32,590] [20527:139871606757184] - _federation.py[line:69]: [federation.eggroll.remote.hash.817500759b04bc599183.host_predict_data.fit_iteration_1_validate.1.0.0[('guest', '10000')])]remote RollPair(namespace=202011200707112994524_hetero_secure_boost_0_0, name=__rsk#202011200707112994524_hetero_secure_boost_0_0#hash.8af87c9df261887caccf.guest_predict_data#fit_iteration_1_20201120.071532.145746.1, partitions=4)
[DEBUG] [2020-11-20 07:15:32,600] [20527:139871606757184] - profile.py[line:185]: [federation.remote.federatedml.transfer_variable.transfer_class.hetero_secure_boosting_predict_transfer_variable.HeteroSecureBoostTransferVariable.host_predict_data.fit_iteration_1_validate.1.0.0]host->[Party(role=guest, party_id=10000)] done
[DEBUG] [2020-11-20 07:15:32,602] [20527:139871606757184] - hetero_secureboost_host.py[line:167]: cur predict round is 1
[DEBUG] [2020-11-20 07:15:32,603] [20527:139871606757184] - profile.py[line:237]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_secure_boosting_predict_transfer_variable.HeteroSecureBoostTransferVariable.predict_stop_flag.fit_iteration_1_validate.1.0.1]host<-[Party(role=guest, party_id=10000)] start
[DEBUG] [2020-11-20 07:15:33,601] [20527:139867776485120] - _federation.py[line:133]: [federation.eggroll.remote.hash.817500759b04bc599183.host_predict_data.fit_iteration_1_validate.1.0.0]future to remote to party: ('guest', '10000') done
[DEBUG] [2020-11-20 07:15:35,956] [20527:139871606757184] - _federation.py[line:196]: [federation.eggroll.get.hash.361c9228f6769dcc3527.predict_stop_flag.fit_iteration_1_validate.1.0.1] got object with type: <class 'bool'>
[DEBUG] [2020-11-20 07:15:35,957] [20527:139871606757184] - profile.py[line:216]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_secure_boosting_predict_transfer_variable.HeteroSecureBoostTransferVariable.predict_stop_flag.fit_iteration_1_validate.1.0.1]host<-[Party(role=guest, party_id=10000)] done
[DEBUG] [2020-11-20 07:15:35,959] [20527:139871606757184] - model_base.py[line:162]: set flowid to transfer_variable, flowid: fit
[INFO] [2020-11-20 07:15:35,960] [20527:139871606757184] - hetero_boosting.py[line:268]: sync stop flag from guest, boosting_core round is 1
[DEBUG] [2020-11-20 07:15:35,962] [20527:139871606757184] - profile.py[line:237]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_boosting_transfer_variable.HeteroBoostingTransferVariable.stop_flag.fit.1]host<-[Party(role=guest, party_id=10000)] start
[DEBUG] [2020-11-20 07:15:38,815] [20527:139871606757184] - _federation.py[line:196]: [federation.eggroll.get.hash.dcd307c9973f180efdfb.stop_flag.fit.1] got object with type: <class 'bool'>
[DEBUG] [2020-11-20 07:15:38,816] [20527:139871606757184] - profile.py[line:216]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_boosting_transfer_variable.HeteroBoostingTransferVariable.stop_flag.fit.1]host<-[Party(role=guest, party_id=10000)] done
[INFO] [2020-11-20 07:15:38,817] [20527:139871606757184] - hetero_boosting.py[line:288]: cur epoch idx is 2
[INFO] [2020-11-20 07:15:38,819] [20527:139871606757184] - splitter.py[line:59]: splitter init!
[INFO] [2020-11-20 07:15:38,821] [20527:139871606757184] - hetero_decision_tree_host.py[line:57]: set input info
[INFO] [2020-11-20 07:15:38,823] [20527:139871606757184] - boosting.py[line:181]: sample valid features
[INFO] [2020-11-20 07:15:38,825] [20527:139871606757184] - decision_tree.py[line:101]: set valid features
[INFO] [2020-11-20 07:15:38,827] [20527:139871606757184] - boosting.py[line:391]: generate flowid, flowid fit
[INFO] [2020-11-20 07:15:38,828] [20527:139871606757184] - decision_tree.py[line:93]: set flowid, flowid is fit.2.0
[INFO] [2020-11-20 07:15:38,830] [20527:139871606757184] - hetero_decision_tree_host.py[line:350]: begin to fit host decision tree
[INFO] [2020-11-20 07:15:38,832] [20527:139871606757184] - hetero_decision_tree_host.py[line:106]: get encrypted grad and hess
[DEBUG] [2020-11-20 07:15:38,833] [20527:139871606757184] - profile.py[line:237]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.encrypted_grad_and_hess.fit.2.0]host<-[Party(role=guest, party_id=10000)] start
[DEBUG] [2020-11-20 07:15:42,318] [20527:139871606757184] - _federation.py[line:176]: [federation.eggroll.get.hash.b8725f5e3437b75ee9a0.encrypted_grad_and_hess.fit.2.0] got RollPair(namespace=202011200707112994524_hetero_secure_boost_0_0, name=__rsk#202011200707112994524_hetero_secure_boost_0_0#hash.b8725f5e3437b75ee9a0.encrypted_grad_and_hess#fit.2.0#guest#10000#host#9999, partitions=4)
[DEBUG] [2020-11-20 07:15:42,319] [20527:139871606757184] - profile.py[line:216]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.encrypted_grad_and_hess.fit.2.0]host<-[Party(role=guest, party_id=10000)] done
[DEBUG] [2020-11-20 07:15:42,320] [20527:139871606757184] - _cleaner.py[line:62]: [CLEAN]deleting <RollPair(_store=<ErStore(store_locator=<ErStoreLocator(id=0, store_type=LMDB, namespace=202011200707112994524_hetero_secure_boost_0_0, name=__rsk#202011200707112994524_hetero_secure_boost_0_0#hash.b8725f5e3437b75ee9a0.encrypted_grad_and_hess#fit.0.0#guest#10000#host#9999, path=, total_partitions=4, partitioner=BYTESTRING_HASH, serdes=PICKLE) at 0x7f3580775c50>, partitions=[***, len=4], options=[{'eggroll.session.deploy.mode': 'cluster', 'eggroll.session.processors.per.node': '4', 'eggroll.session.id': '202011200707112994524_hetero_secure_boost_0_0_host_9999'}]) at 0x7f3580775f98>) at 0x7f3580775d68>, destroy, {}
[INFO] [2020-11-20 07:15:42,523] [20527:139871606757184] - hetero_decision_tree_host.py[line:116]: get tree node queue of depth 0
[DEBUG] [2020-11-20 07:15:42,525] [20527:139871606757184] - profile.py[line:237]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.tree_node_queue.fit.2.0.0]host<-[Party(role=guest, party_id=10000)] start
[DEBUG] [2020-11-20 07:15:43,110] [20527:139871606757184] - _federation.py[line:196]: [federation.eggroll.get.hash.5c76808850a6d1fe24d8.tree_node_queue.fit.2.0.0] got object with type: <class 'list'>
[DEBUG] [2020-11-20 07:15:43,112] [20527:139871606757184] - profile.py[line:216]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.tree_node_queue.fit.2.0.0]host<-[Party(role=guest, party_id=10000)] done
[INFO] [2020-11-20 07:15:43,112] [20527:139871606757184] - hetero_decision_tree_host.py[line:110]: get tree node queue of depth 0
[DEBUG] [2020-11-20 07:15:43,115] [20527:139871606757184] - profile.py[line:237]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.node_positions.fit.2.0.0]host<-[Party(role=guest, party_id=10000)] start
[DEBUG] [2020-11-20 07:15:43,475] [20527:139871606757184] - _federation.py[line:176]: [federation.eggroll.get.hash.a50d3aea493b835a213f.node_positions.fit.2.0.0] got RollPair(namespace=202011200707112994524_hetero_secure_boost_0_0, name=__rsk#202011200707112994524_hetero_secure_boost_0_0#hash.a50d3aea493b835a213f.node_positions#fit.2.0.0#guest#10000#host#9999, partitions=4)
[DEBUG] [2020-11-20 07:15:43,478] [20527:139871606757184] - profile.py[line:216]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.node_positions.fit.2.0.0]host<-[Party(role=guest, party_id=10000)] done
[DEBUG] [2020-11-20 07:15:43,480] [20527:139871606757184] - _cleaner.py[line:62]: [CLEAN]deleting <RollPair(_store=<ErStore(store_locator=<ErStoreLocator(id=0, store_type=LMDB, namespace=202011200707112994524_hetero_secure_boost_0_0, name=__rsk#202011200707112994524_hetero_secure_boost_0_0#hash.a50d3aea493b835a213f.node_positions#fit.1.0.1#guest#10000#host#9999, path=, total_partitions=4, partitioner=BYTESTRING_HASH, serdes=PICKLE) at 0x7f35825dc470>, partitions=[***, len=4], options=[{'eggroll.session.deploy.mode': 'cluster', 'eggroll.session.processors.per.node': '4', 'eggroll.session.id': '202011200707112994524_hetero_secure_boost_0_0_host_9999'}]) at 0x7f35807b96d8>) at 0x7f35826723c8>, destroy, {}
[DEBUG] [2020-11-20 07:15:43,822] [20527:139871606757184] - profile.py[line:87]: [computing#d30ffaa8fe]start
[DEBUG] [2020-11-20 07:15:44,147] [20527:139871606757184] - profile.py[line:93]: [computing#d30ffaa8fe]done, elapse: 0.32416558265686035, function: join(self: Table(partition=4), other: Table(partition=4), func: function) -> Table(partition=4)
[INFO] [2020-11-20 07:15:44,148] [20527:139871606757184] - decision_tree.py[line:114]: start to get node histograms
[INFO] [2020-11-20 07:15:44,149] [20527:139871606757184] - feature_histogram.py[line:197]: bin_shape is (20, 32), node num is 1
[DEBUG] [2020-11-20 07:15:44,152] [20527:139871606757184] - profile.py[line:87]: [computing#a2ad454bc4]start
[DEBUG] [2020-11-20 07:15:44,426] [20527:139871606757184] - profile.py[line:93]: [computing#a2ad454bc4]done, elapse: 0.2736501693725586, function: join(self: Table(partition=4), other: Table(partition=4), func: function) -> Table(partition=4)
[DEBUG] [2020-11-20 07:15:44,432] [20527:139871606757184] - profile.py[line:87]: [computing#7b3709c76f]start
[DEBUG] [2020-11-20 07:15:44,489] [20527:139871606757184] - profile.py[line:93]: [computing#7b3709c76f]done, elapse: 0.05709385871887207, function: count(self: Table(partition=4)) -> int
[DEBUG] [2020-11-20 07:15:44,494] [20527:139871606757184] - profile.py[line:87]: [computing#1564c72616]start
[DEBUG] [2020-11-20 07:15:45,741] [20527:139871606757184] - profile.py[line:93]: [computing#1564c72616]done, elapse: 1.2470591068267822, function: mapReducePartitions(self: Table(partition=4), mapper: partial, reducer: partial) -> Table(partition=4)
[DEBUG] [2020-11-20 07:15:45,750] [20527:139871606757184] - profile.py[line:87]: [computing#7527fb9b70]start
[DEBUG] [2020-11-20 07:15:45,957] [20527:139871606757184] - profile.py[line:93]: [computing#7527fb9b70]done, elapse: 0.20769548416137695, function: mapValues(self: Table(partition=4), func: function) -> Table(partition=4)
[INFO] [2020-11-20 07:15:45,958] [20527:139871606757184] - splitter.py[line:236]: splitter find split of host
[DEBUG] [2020-11-20 07:15:45,963] [20527:139871606757184] - profile.py[line:87]: [computing#bf91c5c623]start
[DEBUG] [2020-11-20 07:15:46,179] [20527:139871606757184] - profile.py[line:93]: [computing#bf91c5c623]done, elapse: 0.21626520156860352, function: mapValues(self: Table(partition=4), func: function) -> Table(partition=4)
[DEBUG] [2020-11-20 07:15:46,184] [20527:139871606757184] - profile.py[line:87]: [computing#8b18554d12]start
[DEBUG] [2020-11-20 07:15:46,189] [20527:139871606757184] - profile.py[line:93]: [computing#8b18554d12]done, elapse: 0.004954099655151367, function: collect(self: Table(partition=4)) -> generator
[DEBUG] [2020-11-20 07:15:46,709] [20527:139871606757184] - hetero_decision_tree_host.py[line:336]: sending en_splitinfo <federatedml.ensemble.basic_algorithms.decision_tree.tree_core.splitter.BigObjectTransfer object at 0x7f35826e40f0>
[INFO] [2020-11-20 07:15:46,711] [20527:139871606757184] - hetero_decision_tree_host.py[line:121]: send encrypted splitinfo of depth 0, batch 0
[DEBUG] [2020-11-20 07:15:46,712] [20527:139871606757184] - profile.py[line:232]: [federation.remote.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.encrypted_splitinfo_host.fit.2.0.0.0]host->[Party(role=guest, party_id=10000)] start
[DEBUG] [2020-11-20 07:15:46,714] [20527:139871606757184] - _federation.py[line:76]: [federation.eggroll.remote.hash.3392347e7e0faef9835a.encrypted_splitinfo_host.fit.2.0.0.0[('guest', '10000')])]remote split object with type: <class 'federatedml.ensemble.basic_algorithms.decision_tree.tree_core.splitter.BigObjectTransfer'>
[DEBUG] [2020-11-20 07:15:46,784] [20527:139871606757184] - profile.py[line:185]: [federation.remote.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.encrypted_splitinfo_host.fit.2.0.0.0]host->[Party(role=guest, party_id=10000)] done
[INFO] [2020-11-20 07:15:46,785] [20527:139871606757184] - hetero_decision_tree_host.py[line:128]: get federated best splitinfo of depth 0, batch 0
[DEBUG] [2020-11-20 07:15:46,809] [20527:139871606757184] - profile.py[line:237]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.federated_best_splitinfo_host.fit.2.0.0.0]host<-[Party(role=guest, party_id=10000)] start
[DEBUG] [2020-11-20 07:15:49,116] [20527:139867784877824] - _federation.py[line:133]: [federation.eggroll.remote.hash.3392347e7e0faef9835a.encrypted_splitinfo_host.fit.2.0.0.0]future to remote to party: ('guest', '10000') done
[DEBUG] [2020-11-20 07:15:51,572] [20527:139871606757184] - _federation.py[line:196]: [federation.eggroll.get.hash.2037679d27978ce15bad.federated_best_splitinfo_host.fit.2.0.0.0] got object with type: <class 'list'>
[DEBUG] [2020-11-20 07:15:51,574] [20527:139871606757184] - profile.py[line:216]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.federated_best_splitinfo_host.fit.2.0.0.0]host<-[Party(role=guest, party_id=10000)] done
[INFO] [2020-11-20 07:15:51,574] [20527:139871606757184] - hetero_decision_tree_host.py[line:135]: send host final splitinfo of depth 0, batch 0
[DEBUG] [2020-11-20 07:15:51,576] [20527:139871606757184] - hetero_decision_tree_host.py[line:141]: sitename is host:9999, self.sitename is host:9999
[DEBUG] [2020-11-20 07:15:51,578] [20527:139871606757184] - hetero_decision_tree_host.py[line:154]: final split info is ['**fid 7, bid None, sum_grad<federatedml.secureprotol.iterative_affine.DeterministicIterativeAffineCiphertext object at 0x7f35827a7518>, sum_hess<federatedml.secureprotol.iterative_affine.DeterministicIterativeAffineCiphertext object at 0x7f35827a7550>, gain<federatedml.secureprotol.iterative_affine.DeterministicIterativeAffineCiphertext object at 0x7f3582806da0>**']
[DEBUG] [2020-11-20 07:15:51,579] [20527:139871606757184] - profile.py[line:232]: [federation.remote.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.final_splitinfo_host.fit.2.0.0.0]host->[Party(role=guest, party_id=10000)] start
[DEBUG] [2020-11-20 07:15:51,580] [20527:139871606757184] - _federation.py[line:86]: [federation.eggroll.remote.hash.91e654d2705dfcc49758.final_splitinfo_host.fit.2.0.0.0[('guest', '10000')])]remote object with type: <class 'list'>
[DEBUG] [2020-11-20 07:15:51,593] [20527:139871606757184] - profile.py[line:185]: [federation.remote.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.final_splitinfo_host.fit.2.0.0.0]host->[Party(role=guest, party_id=10000)] done
[DEBUG] [2020-11-20 07:15:51,594] [20527:139871606757184] - hetero_decision_tree_host.py[line:340]: computing host splits done
[INFO] [2020-11-20 07:15:51,599] [20527:139871606757184] - hetero_decision_tree_host.py[line:161]: get node from host to dispath, depth is 0
[DEBUG] [2020-11-20 07:15:51,602] [20527:139871606757184] - profile.py[line:237]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.dispatch_node_host.fit.2.0.0]host<-[Party(role=guest, party_id=10000)] start
[DEBUG] [2020-11-20 07:15:51,841] [20527:139867740030720] - _federation.py[line:133]: [federation.eggroll.remote.hash.91e654d2705dfcc49758.final_splitinfo_host.fit.2.0.0.0]future to remote to party: ('guest', '10000') done
[DEBUG] [2020-11-20 07:15:54,000] [20527:139871606757184] - _federation.py[line:176]: [federation.eggroll.get.hash.57bcc44b755b74edb18c.dispatch_node_host.fit.2.0.0] got RollPair(namespace=202011200707112994524_hetero_secure_boost_0_0, name=__rsk#202011200707112994524_hetero_secure_boost_0_0#hash.57bcc44b755b74edb18c.dispatch_node_host#fit.2.0.0#guest#10000#host#9999, partitions=4)
[DEBUG] [2020-11-20 07:15:54,002] [20527:139871606757184] - profile.py[line:216]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.dispatch_node_host.fit.2.0.0]host<-[Party(role=guest, party_id=10000)] done
[DEBUG] [2020-11-20 07:15:54,003] [20527:139871606757184] - _cleaner.py[line:62]: [CLEAN]deleting <RollPair(_store=<ErStore(store_locator=<ErStoreLocator(id=0, store_type=LMDB, namespace=202011200707112994524_hetero_secure_boost_0_0, name=__rsk#202011200707112994524_hetero_secure_boost_0_0#hash.57bcc44b755b74edb18c.dispatch_node_host#fit.1.0.1#guest#10000#host#9999, path=, total_partitions=4, partitioner=BYTESTRING_HASH, serdes=PICKLE) at 0x7f358283def0>, partitions=[***, len=4], options=[{'eggroll.session.deploy.mode': 'cluster', 'eggroll.session.processors.per.node': '4', 'eggroll.session.id': '202011200707112994524_hetero_secure_boost_0_0_host_9999'}]) at 0x7f3582694438>) at 0x7f3582694630>, destroy, {}
[INFO] [2020-11-20 07:15:54,237] [20527:139871606757184] - hetero_decision_tree_host.py[line:247]: start to find host dispath of depth 0
[DEBUG] [2020-11-20 07:15:54,242] [20527:139871606757184] - profile.py[line:87]: [computing#be69352869]start
[DEBUG] [2020-11-20 07:15:54,744] [20527:139871606757184] - profile.py[line:93]: [computing#be69352869]done, elapse: 0.5017313957214355, function: join(self: Table(partition=4), other: Table(partition=4), func: partial) -> Table(partition=4)
[INFO] [2020-11-20 07:15:54,746] [20527:139871606757184] - hetero_decision_tree_host.py[line:167]: send host dispatch result, depth is 0
[DEBUG] [2020-11-20 07:15:54,748] [20527:139871606757184] - profile.py[line:232]: [federation.remote.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.dispatch_node_host_result.fit.2.0.0]host->[Party(role=guest, party_id=10000)] start
[DEBUG] [2020-11-20 07:15:54,750] [20527:139871606757184] - _federation.py[line:69]: [federation.eggroll.remote.hash.d8b4c7b00ef279c1dba0.dispatch_node_host_result.fit.2.0.0[('guest', '10000')])]remote RollPair(namespace=202011200707112994524_hetero_secure_boost_0_0, name=__rsk#202011200707112994524_hetero_secure_boost_0_0#hash.57bcc44b755b74edb18c.dispatch_node_20201120.071554.249822.1, partitions=4)
[DEBUG] [2020-11-20 07:15:54,759] [20527:139871606757184] - profile.py[line:185]: [federation.remote.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.dispatch_node_host_result.fit.2.0.0]host->[Party(role=guest, party_id=10000)] done
[DEBUG] [2020-11-20 07:15:54,761] [20527:139871606757184] - _cleaner.py[line:62]: [CLEAN]deleting <RollPair(_store=<ErStore(store_locator=<ErStoreLocator(id=0, store_type=LMDB, namespace=202011200707112994524_hetero_secure_boost_0_0, name=__rsk#202011200707112994524_hetero_secure_boost_0_0#hash.57bcc44b755b74edb18c.dispatch_node_20201120.071506.730215.1, path=, total_partitions=4, partitioner=BYTESTRING_HASH, serdes=PICKLE) at 0x7f358283de10>, partitions=[***, len=4], options=[{'eggroll.session.id': '202011200707112994524_hetero_secure_boost_0_0_host_9999', 'eggroll.session.deploy.mode': 'cluster', 'eggroll.session.processors.per.node': '4'}]) at 0x7f358283df60>) at 0x7f364fd98f98>, destroy, {}
[INFO] [2020-11-20 07:15:55,104] [20527:139871606757184] - hetero_decision_tree_host.py[line:116]: get tree node queue of depth 1
[DEBUG] [2020-11-20 07:15:55,107] [20527:139871606757184] - profile.py[line:237]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.tree_node_queue.fit.2.0.1]host<-[Party(role=guest, party_id=10000)] start
[DEBUG] [2020-11-20 07:15:55,126] [20527:139867748423424] - _federation.py[line:133]: [federation.eggroll.remote.hash.d8b4c7b00ef279c1dba0.dispatch_node_host_result.fit.2.0.0]future to remote to party: ('guest', '10000') done
[DEBUG] [2020-11-20 07:15:56,427] [20527:139871606757184] - _federation.py[line:196]: [federation.eggroll.get.hash.5c76808850a6d1fe24d8.tree_node_queue.fit.2.0.1] got object with type: <class 'list'>
[DEBUG] [2020-11-20 07:15:56,429] [20527:139871606757184] - profile.py[line:216]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.tree_node_queue.fit.2.0.1]host<-[Party(role=guest, party_id=10000)] done
[INFO] [2020-11-20 07:15:56,430] [20527:139871606757184] - hetero_decision_tree_host.py[line:110]: get tree node queue of depth 1
[DEBUG] [2020-11-20 07:15:56,431] [20527:139871606757184] - profile.py[line:237]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.node_positions.fit.2.0.1]host<-[Party(role=guest, party_id=10000)] start
[DEBUG] [2020-11-20 07:15:56,847] [20527:139871606757184] - _federation.py[line:176]: [federation.eggroll.get.hash.a50d3aea493b835a213f.node_positions.fit.2.0.1] got RollPair(namespace=202011200707112994524_hetero_secure_boost_0_0, name=__rsk#202011200707112994524_hetero_secure_boost_0_0#hash.a50d3aea493b835a213f.node_positions#fit.2.0.1#guest#10000#host#9999, partitions=4)
[DEBUG] [2020-11-20 07:15:56,850] [20527:139871606757184] - profile.py[line:216]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.node_positions.fit.2.0.1]host<-[Party(role=guest, party_id=10000)] done
[DEBUG] [2020-11-20 07:15:56,851] [20527:139871606757184] - _cleaner.py[line:62]: [CLEAN]deleting <RollPair(_store=<ErStore(store_locator=<ErStoreLocator(id=0, store_type=LMDB, namespace=202011200707112994524_hetero_secure_boost_0_0, name=__rsk#202011200707112994524_hetero_secure_boost_0_0#hash.a50d3aea493b835a213f.node_positions#fit.1.0.2#guest#10000#host#9999, path=, total_partitions=4, partitioner=BYTESTRING_HASH, serdes=PICKLE) at 0x7f35828a68d0>, partitions=[***, len=4], options=[{'eggroll.session.deploy.mode': 'cluster', 'eggroll.session.processors.per.node': '4', 'eggroll.session.id': '202011200707112994524_hetero_secure_boost_0_0_host_9999'}]) at 0x7f358077f160>) at 0x7f35828a6828>, destroy, {}
[DEBUG] [2020-11-20 07:15:57,129] [20527:139871606757184] - profile.py[line:87]: [computing#d30ffaa8fe]start
[DEBUG] [2020-11-20 07:15:57,365] [20527:139871606757184] - profile.py[line:93]: [computing#d30ffaa8fe]done, elapse: 0.23588228225708008, function: join(self: Table(partition=4), other: Table(partition=4), func: function) -> Table(partition=4)
[INFO] [2020-11-20 07:15:57,367] [20527:139871606757184] - decision_tree.py[line:114]: start to get node histograms
[INFO] [2020-11-20 07:15:57,369] [20527:139871606757184] - feature_histogram.py[line:197]: bin_shape is (20, 32), node num is 2
[DEBUG] [2020-11-20 07:15:57,378] [20527:139871606757184] - profile.py[line:87]: [computing#a2ad454bc4]start
[DEBUG] [2020-11-20 07:15:57,904] [20527:139871606757184] - profile.py[line:93]: [computing#a2ad454bc4]done, elapse: 0.5261023044586182, function: join(self: Table(partition=4), other: Table(partition=4), func: function) -> Table(partition=4)
[DEBUG] [2020-11-20 07:15:57,909] [20527:139871606757184] - profile.py[line:87]: [computing#7b3709c76f]start
[DEBUG] [2020-11-20 07:15:57,976] [20527:139871606757184] - profile.py[line:93]: [computing#7b3709c76f]done, elapse: 0.06673574447631836, function: count(self: Table(partition=4)) -> int
[DEBUG] [2020-11-20 07:15:57,982] [20527:139871606757184] - profile.py[line:87]: [computing#1564c72616]start
[DEBUG] [2020-11-20 07:16:00,691] [20527:139871606757184] - profile.py[line:93]: [computing#1564c72616]done, elapse: 2.7091116905212402, function: mapReducePartitions(self: Table(partition=4), mapper: partial, reducer: partial) -> Table(partition=4)
[DEBUG] [2020-11-20 07:16:00,698] [20527:139871606757184] - profile.py[line:87]: [computing#7527fb9b70]start
[DEBUG] [2020-11-20 07:16:00,919] [20527:139871606757184] - profile.py[line:93]: [computing#7527fb9b70]done, elapse: 0.22108817100524902, function: mapValues(self: Table(partition=4), func: function) -> Table(partition=4)
[INFO] [2020-11-20 07:16:00,920] [20527:139871606757184] - splitter.py[line:236]: splitter find split of host
[DEBUG] [2020-11-20 07:16:00,926] [20527:139871606757184] - profile.py[line:87]: [computing#bf91c5c623]start
[DEBUG] [2020-11-20 07:16:01,162] [20527:139871606757184] - profile.py[line:93]: [computing#bf91c5c623]done, elapse: 0.23588895797729492, function: mapValues(self: Table(partition=4), func: function) -> Table(partition=4)
[DEBUG] [2020-11-20 07:16:01,167] [20527:139871606757184] - profile.py[line:87]: [computing#8b18554d12]start
[DEBUG] [2020-11-20 07:16:01,172] [20527:139871606757184] - profile.py[line:93]: [computing#8b18554d12]done, elapse: 0.005036592483520508, function: collect(self: Table(partition=4)) -> generator
[DEBUG] [2020-11-20 07:16:01,734] [20527:139871606757184] - hetero_decision_tree_host.py[line:336]: sending en_splitinfo <federatedml.ensemble.basic_algorithms.decision_tree.tree_core.splitter.BigObjectTransfer object at 0x7f35828e61d0>
[INFO] [2020-11-20 07:16:01,735] [20527:139871606757184] - hetero_decision_tree_host.py[line:121]: send encrypted splitinfo of depth 1, batch 0
[DEBUG] [2020-11-20 07:16:01,737] [20527:139871606757184] - profile.py[line:232]: [federation.remote.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.encrypted_splitinfo_host.fit.2.0.1.0]host->[Party(role=guest, party_id=10000)] start
[DEBUG] [2020-11-20 07:16:01,738] [20527:139871606757184] - _federation.py[line:76]: [federation.eggroll.remote.hash.3392347e7e0faef9835a.encrypted_splitinfo_host.fit.2.0.1.0[('guest', '10000')])]remote split object with type: <class 'federatedml.ensemble.basic_algorithms.decision_tree.tree_core.splitter.BigObjectTransfer'>
[DEBUG] [2020-11-20 07:16:01,825] [20527:139871606757184] - profile.py[line:185]: [federation.remote.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.encrypted_splitinfo_host.fit.2.0.1.0]host->[Party(role=guest, party_id=10000)] done
[INFO] [2020-11-20 07:16:01,827] [20527:139871606757184] - hetero_decision_tree_host.py[line:128]: get federated best splitinfo of depth 1, batch 0
[DEBUG] [2020-11-20 07:16:01,829] [20527:139871606757184] - profile.py[line:237]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.federated_best_splitinfo_host.fit.2.0.1.0]host<-[Party(role=guest, party_id=10000)] start
[DEBUG] [2020-11-20 07:16:06,043] [20527:139867784877824] - _federation.py[line:133]: [federation.eggroll.remote.hash.3392347e7e0faef9835a.encrypted_splitinfo_host.fit.2.0.1.0]future to remote to party: ('guest', '10000') done
[DEBUG] [2020-11-20 07:16:08,202] [20527:139871606757184] - _federation.py[line:196]: [federation.eggroll.get.hash.2037679d27978ce15bad.federated_best_splitinfo_host.fit.2.0.1.0] got object with type: <class 'list'>
[DEBUG] [2020-11-20 07:16:08,203] [20527:139871606757184] - profile.py[line:216]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.federated_best_splitinfo_host.fit.2.0.1.0]host<-[Party(role=guest, party_id=10000)] done
[INFO] [2020-11-20 07:16:08,203] [20527:139871606757184] - hetero_decision_tree_host.py[line:135]: send host final splitinfo of depth 1, batch 0
[DEBUG] [2020-11-20 07:16:08,204] [20527:139871606757184] - hetero_decision_tree_host.py[line:141]: sitename is host:9999, self.sitename is host:9999
[DEBUG] [2020-11-20 07:16:08,205] [20527:139871606757184] - hetero_decision_tree_host.py[line:141]: sitename is host:9999, self.sitename is host:9999
[DEBUG] [2020-11-20 07:16:08,205] [20527:139871606757184] - hetero_decision_tree_host.py[line:154]: final split info is ['**fid 7, bid None, sum_grad<federatedml.secureprotol.iterative_affine.DeterministicIterativeAffineCiphertext object at 0x7f35829a5400>, sum_hess<federatedml.secureprotol.iterative_affine.DeterministicIterativeAffineCiphertext object at 0x7f35829a5438>, gain<federatedml.secureprotol.iterative_affine.DeterministicIterativeAffineCiphertext object at 0x7f35826f25c0>**', '**fid 6, bid None, sum_grad<federatedml.secureprotol.iterative_affine.DeterministicIterativeAffineCiphertext object at 0x7f35827ac940>, sum_hess<federatedml.secureprotol.iterative_affine.DeterministicIterativeAffineCiphertext object at 0x7f35827ac978>, gain<federatedml.secureprotol.iterative_affine.DeterministicIterativeAffineCiphertext object at 0x7f35826f2550>**']
[DEBUG] [2020-11-20 07:16:08,206] [20527:139871606757184] - profile.py[line:232]: [federation.remote.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.final_splitinfo_host.fit.2.0.1.0]host->[Party(role=guest, party_id=10000)] start
[DEBUG] [2020-11-20 07:16:08,207] [20527:139871606757184] - _federation.py[line:86]: [federation.eggroll.remote.hash.91e654d2705dfcc49758.final_splitinfo_host.fit.2.0.1.0[('guest', '10000')])]remote object with type: <class 'list'>
[DEBUG] [2020-11-20 07:16:08,216] [20527:139871606757184] - profile.py[line:185]: [federation.remote.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.final_splitinfo_host.fit.2.0.1.0]host->[Party(role=guest, party_id=10000)] done
[DEBUG] [2020-11-20 07:16:08,218] [20527:139871606757184] - hetero_decision_tree_host.py[line:340]: computing host splits done
[INFO] [2020-11-20 07:16:08,218] [20527:139871606757184] - hetero_decision_tree_host.py[line:161]: get node from host to dispath, depth is 1
[DEBUG] [2020-11-20 07:16:08,220] [20527:139871606757184] - profile.py[line:237]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.dispatch_node_host.fit.2.0.1]host<-[Party(role=guest, party_id=10000)] start
[DEBUG] [2020-11-20 07:16:08,481] [20527:139867740030720] - _federation.py[line:133]: [federation.eggroll.remote.hash.91e654d2705dfcc49758.final_splitinfo_host.fit.2.0.1.0]future to remote to party: ('guest', '10000') done
[DEBUG] [2020-11-20 07:16:11,527] [20527:139871606757184] - _federation.py[line:176]: [federation.eggroll.get.hash.57bcc44b755b74edb18c.dispatch_node_host.fit.2.0.1] got RollPair(namespace=202011200707112994524_hetero_secure_boost_0_0, name=__rsk#202011200707112994524_hetero_secure_boost_0_0#hash.57bcc44b755b74edb18c.dispatch_node_host#fit.2.0.1#guest#10000#host#9999, partitions=4)
[DEBUG] [2020-11-20 07:16:11,528] [20527:139871606757184] - profile.py[line:216]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.dispatch_node_host.fit.2.0.1]host<-[Party(role=guest, party_id=10000)] done
[DEBUG] [2020-11-20 07:16:11,529] [20527:139871606757184] - _cleaner.py[line:62]: [CLEAN]deleting <RollPair(_store=<ErStore(store_locator=<ErStoreLocator(id=0, store_type=LMDB, namespace=202011200707112994524_hetero_secure_boost_0_0, name=__rsk#202011200707112994524_hetero_secure_boost_0_0#hash.57bcc44b755b74edb18c.dispatch_node_host#fit.1.0.2#guest#10000#host#9999, path=, total_partitions=4, partitioner=BYTESTRING_HASH, serdes=PICKLE) at 0x7f3582815550>, partitions=[***, len=4], options=[{'eggroll.session.id': '202011200707112994524_hetero_secure_boost_0_0_host_9999', 'eggroll.session.deploy.mode': 'cluster', 'eggroll.session.processors.per.node': '4'}]) at 0x7f35825b96a0>) at 0x7f358267c710>, destroy, {}
[INFO] [2020-11-20 07:16:11,765] [20527:139871606757184] - hetero_decision_tree_host.py[line:247]: start to find host dispath of depth 1
[DEBUG] [2020-11-20 07:16:11,770] [20527:139871606757184] - profile.py[line:87]: [computing#be69352869]start
[DEBUG] [2020-11-20 07:16:12,107] [20527:139871606757184] - profile.py[line:93]: [computing#be69352869]done, elapse: 0.3366076946258545, function: join(self: Table(partition=4), other: Table(partition=4), func: partial) -> Table(partition=4)
[INFO] [2020-11-20 07:16:12,109] [20527:139871606757184] - hetero_decision_tree_host.py[line:167]: send host dispatch result, depth is 1
[DEBUG] [2020-11-20 07:16:12,111] [20527:139871606757184] - profile.py[line:232]: [federation.remote.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.dispatch_node_host_result.fit.2.0.1]host->[Party(role=guest, party_id=10000)] start
[DEBUG] [2020-11-20 07:16:12,112] [20527:139871606757184] - _federation.py[line:69]: [federation.eggroll.remote.hash.d8b4c7b00ef279c1dba0.dispatch_node_host_result.fit.2.0.1[('guest', '10000')])]remote RollPair(namespace=202011200707112994524_hetero_secure_boost_0_0, name=__rsk#202011200707112994524_hetero_secure_boost_0_0#hash.57bcc44b755b74edb18c.dispatch_node_20201120.071611.778416.1, partitions=4)
[DEBUG] [2020-11-20 07:16:12,121] [20527:139871606757184] - profile.py[line:185]: [federation.remote.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.dispatch_node_host_result.fit.2.0.1]host->[Party(role=guest, party_id=10000)] done
[DEBUG] [2020-11-20 07:16:12,123] [20527:139871606757184] - _cleaner.py[line:62]: [CLEAN]deleting <RollPair(_store=<ErStore(store_locator=<ErStoreLocator(id=0, store_type=LMDB, namespace=202011200707112994524_hetero_secure_boost_0_0, name=__rsk#202011200707112994524_hetero_secure_boost_0_0#hash.57bcc44b755b74edb18c.dispatch_node_20201120.071524.410899.1, path=, total_partitions=4, partitioner=BYTESTRING_HASH, serdes=PICKLE) at 0x7f3582885978>, partitions=[***, len=4], options=[{'eggroll.session.deploy.mode': 'cluster', 'eggroll.session.processors.per.node': '4', 'eggroll.session.id': '202011200707112994524_hetero_secure_boost_0_0_host_9999'}]) at 0x7f35828859e8>) at 0x7f35825b97f0>, destroy, {}
[INFO] [2020-11-20 07:16:12,409] [20527:139871606757184] - hetero_decision_tree_host.py[line:116]: get tree node queue of depth 2
[DEBUG] [2020-11-20 07:16:12,411] [20527:139871606757184] - profile.py[line:237]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.tree_node_queue.fit.2.0.2]host<-[Party(role=guest, party_id=10000)] start
[DEBUG] [2020-11-20 07:16:12,492] [20527:139867776485120] - _federation.py[line:133]: [federation.eggroll.remote.hash.d8b4c7b00ef279c1dba0.dispatch_node_host_result.fit.2.0.1]future to remote to party: ('guest', '10000') done
[DEBUG] [2020-11-20 07:16:13,635] [20527:139871606757184] - _federation.py[line:196]: [federation.eggroll.get.hash.5c76808850a6d1fe24d8.tree_node_queue.fit.2.0.2] got object with type: <class 'list'>
[DEBUG] [2020-11-20 07:16:13,638] [20527:139871606757184] - profile.py[line:216]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.tree_node_queue.fit.2.0.2]host<-[Party(role=guest, party_id=10000)] done
[INFO] [2020-11-20 07:16:13,639] [20527:139871606757184] - hetero_decision_tree_host.py[line:110]: get tree node queue of depth 2
[DEBUG] [2020-11-20 07:16:13,641] [20527:139871606757184] - profile.py[line:237]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.node_positions.fit.2.0.2]host<-[Party(role=guest, party_id=10000)] start
[DEBUG] [2020-11-20 07:16:14,090] [20527:139871606757184] - _federation.py[line:176]: [federation.eggroll.get.hash.a50d3aea493b835a213f.node_positions.fit.2.0.2] got RollPair(namespace=202011200707112994524_hetero_secure_boost_0_0, name=__rsk#202011200707112994524_hetero_secure_boost_0_0#hash.a50d3aea493b835a213f.node_positions#fit.2.0.2#guest#10000#host#9999, partitions=4)
[DEBUG] [2020-11-20 07:16:14,092] [20527:139871606757184] - profile.py[line:216]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.node_positions.fit.2.0.2]host<-[Party(role=guest, party_id=10000)] done
[DEBUG] [2020-11-20 07:16:14,093] [20527:139871606757184] - _cleaner.py[line:62]: [CLEAN]deleting <RollPair(_store=<ErStore(store_locator=<ErStoreLocator(id=0, store_type=LMDB, namespace=202011200707112994524_hetero_secure_boost_0_0, name=__rsk#202011200707112994524_hetero_secure_boost_0_0#hash.a50d3aea493b835a213f.node_positions#fit.2.0.0#guest#10000#host#9999, path=, total_partitions=4, partitioner=BYTESTRING_HASH, serdes=PICKLE) at 0x7f358280f208>, partitions=[***, len=4], options=[{'eggroll.session.id': '202011200707112994524_hetero_secure_boost_0_0_host_9999', 'eggroll.session.deploy.mode': 'cluster', 'eggroll.session.processors.per.node': '4'}]) at 0x7f358076c358>) at 0x7f3582888898>, destroy, {}
[DEBUG] [2020-11-20 07:16:14,393] [20527:139871606757184] - profile.py[line:87]: [computing#d30ffaa8fe]start
[DEBUG] [2020-11-20 07:16:14,903] [20527:139871606757184] - profile.py[line:93]: [computing#d30ffaa8fe]done, elapse: 0.5100619792938232, function: join(self: Table(partition=4), other: Table(partition=4), func: function) -> Table(partition=4)
[INFO] [2020-11-20 07:16:14,905] [20527:139871606757184] - decision_tree.py[line:114]: start to get node histograms
[INFO] [2020-11-20 07:16:14,906] [20527:139871606757184] - feature_histogram.py[line:197]: bin_shape is (20, 32), node num is 4
[DEBUG] [2020-11-20 07:16:14,917] [20527:139871606757184] - profile.py[line:87]: [computing#a2ad454bc4]start
[DEBUG] [2020-11-20 07:16:15,393] [20527:139871606757184] - profile.py[line:93]: [computing#a2ad454bc4]done, elapse: 0.475677490234375, function: join(self: Table(partition=4), other: Table(partition=4), func: function) -> Table(partition=4)
[DEBUG] [2020-11-20 07:16:15,399] [20527:139871606757184] - profile.py[line:87]: [computing#7b3709c76f]start
[DEBUG] [2020-11-20 07:16:15,512] [20527:139871606757184] - profile.py[line:93]: [computing#7b3709c76f]done, elapse: 0.1127932071685791, function: count(self: Table(partition=4)) -> int
[DEBUG] [2020-11-20 07:16:15,517] [20527:139871606757184] - profile.py[line:87]: [computing#1564c72616]start
[DEBUG] [2020-11-20 07:16:19,166] [20527:139871606757184] - profile.py[line:93]: [computing#1564c72616]done, elapse: 3.648421287536621, function: mapReducePartitions(self: Table(partition=4), mapper: partial, reducer: partial) -> Table(partition=4)
[DEBUG] [2020-11-20 07:16:19,170] [20527:139871606757184] - profile.py[line:87]: [computing#7527fb9b70]start
[DEBUG] [2020-11-20 07:16:19,492] [20527:139871606757184] - profile.py[line:93]: [computing#7527fb9b70]done, elapse: 0.3216826915740967, function: mapValues(self: Table(partition=4), func: function) -> Table(partition=4)
[INFO] [2020-11-20 07:16:19,493] [20527:139871606757184] - splitter.py[line:236]: splitter find split of host
[DEBUG] [2020-11-20 07:16:19,497] [20527:139871606757184] - profile.py[line:87]: [computing#bf91c5c623]start
[DEBUG] [2020-11-20 07:16:19,914] [20527:139871606757184] - profile.py[line:93]: [computing#bf91c5c623]done, elapse: 0.41695308685302734, function: mapValues(self: Table(partition=4), func: function) -> Table(partition=4)
[DEBUG] [2020-11-20 07:16:19,920] [20527:139871606757184] - profile.py[line:87]: [computing#8b18554d12]start
[DEBUG] [2020-11-20 07:16:19,927] [20527:139871606757184] - profile.py[line:93]: [computing#8b18554d12]done, elapse: 0.007062673568725586, function: collect(self: Table(partition=4)) -> generator
[DEBUG] [2020-11-20 07:16:20,630] [20527:139871606757184] - hetero_decision_tree_host.py[line:336]: sending en_splitinfo <federatedml.ensemble.basic_algorithms.decision_tree.tree_core.splitter.BigObjectTransfer object at 0x7f358237c0b8>
[INFO] [2020-11-20 07:16:20,632] [20527:139871606757184] - hetero_decision_tree_host.py[line:121]: send encrypted splitinfo of depth 2, batch 0
[DEBUG] [2020-11-20 07:16:20,634] [20527:139871606757184] - profile.py[line:232]: [federation.remote.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.encrypted_splitinfo_host.fit.2.0.2.0]host->[Party(role=guest, party_id=10000)] start
[DEBUG] [2020-11-20 07:16:20,636] [20527:139871606757184] - _federation.py[line:76]: [federation.eggroll.remote.hash.3392347e7e0faef9835a.encrypted_splitinfo_host.fit.2.0.2.0[('guest', '10000')])]remote split object with type: <class 'federatedml.ensemble.basic_algorithms.decision_tree.tree_core.splitter.BigObjectTransfer'>
[DEBUG] [2020-11-20 07:16:20,819] [20527:139871606757184] - profile.py[line:185]: [federation.remote.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.encrypted_splitinfo_host.fit.2.0.2.0]host->[Party(role=guest, party_id=10000)] done
[INFO] [2020-11-20 07:16:20,821] [20527:139871606757184] - hetero_decision_tree_host.py[line:128]: get federated best splitinfo of depth 2, batch 0
[DEBUG] [2020-11-20 07:16:20,824] [20527:139871606757184] - profile.py[line:237]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.federated_best_splitinfo_host.fit.2.0.2.0]host<-[Party(role=guest, party_id=10000)] start
[DEBUG] [2020-11-20 07:16:27,842] [20527:139867776485120] - _federation.py[line:133]: [federation.eggroll.remote.hash.3392347e7e0faef9835a.encrypted_splitinfo_host.fit.2.0.2.0]future to remote to party: ('guest', '10000') done
[DEBUG] [2020-11-20 07:16:30,097] [20527:139871606757184] - _federation.py[line:196]: [federation.eggroll.get.hash.2037679d27978ce15bad.federated_best_splitinfo_host.fit.2.0.2.0] got object with type: <class 'list'>
[DEBUG] [2020-11-20 07:16:30,099] [20527:139871606757184] - profile.py[line:216]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.federated_best_splitinfo_host.fit.2.0.2.0]host<-[Party(role=guest, party_id=10000)] done
[INFO] [2020-11-20 07:16:30,099] [20527:139871606757184] - hetero_decision_tree_host.py[line:135]: send host final splitinfo of depth 2, batch 0
[DEBUG] [2020-11-20 07:16:30,100] [20527:139871606757184] - hetero_decision_tree_host.py[line:141]: sitename is host:9999, self.sitename is host:9999
[DEBUG] [2020-11-20 07:16:30,101] [20527:139871606757184] - hetero_decision_tree_host.py[line:141]: sitename is host:9999, self.sitename is host:9999
[DEBUG] [2020-11-20 07:16:30,101] [20527:139871606757184] - hetero_decision_tree_host.py[line:141]: sitename is host:9999, self.sitename is host:9999
[DEBUG] [2020-11-20 07:16:30,103] [20527:139871606757184] - hetero_decision_tree_host.py[line:141]: sitename is host:9999, self.sitename is host:9999
[DEBUG] [2020-11-20 07:16:30,104] [20527:139871606757184] - hetero_decision_tree_host.py[line:154]: final split info is ['**fid 13, bid None, sum_grad<federatedml.secureprotol.iterative_affine.DeterministicIterativeAffineCiphertext object at 0x7f35824d0128>, sum_hess<federatedml.secureprotol.iterative_affine.DeterministicIterativeAffineCiphertext object at 0x7f35824d0160>, gain<federatedml.secureprotol.iterative_affine.DeterministicIterativeAffineCiphertext object at 0x7f358263e710>**', '**fid 1, bid None, sum_grad<federatedml.secureprotol.iterative_affine.DeterministicIterativeAffineCiphertext object at 0x7f358240da90>, sum_hess<federatedml.secureprotol.iterative_affine.DeterministicIterativeAffineCiphertext object at 0x7f358240dac8>, gain<federatedml.secureprotol.iterative_affine.DeterministicIterativeAffineCiphertext object at 0x7f35823213c8>**', '**fid 1, bid None, sum_grad<federatedml.secureprotol.iterative_affine.DeterministicIterativeAffineCiphertext object at 0x7f3582488ef0>, sum_hess<federatedml.secureprotol.iterative_affine.DeterministicIterativeAffineCiphertext object at 0x7f3582488f28>, gain<federatedml.secureprotol.iterative_affine.DeterministicIterativeAffineCiphertext object at 0x7f3582321b70>**', '**fid 10, bid None, sum_grad<federatedml.secureprotol.iterative_affine.DeterministicIterativeAffineCiphertext object at 0x7f35822fa908>, sum_hess<federatedml.secureprotol.iterative_affine.DeterministicIterativeAffineCiphertext object at 0x7f35822fa940>, gain<federatedml.secureprotol.iterative_affine.DeterministicIterativeAffineCiphertext object at 0x7f35823219b0>**']
[DEBUG] [2020-11-20 07:16:30,105] [20527:139871606757184] - profile.py[line:232]: [federation.remote.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.final_splitinfo_host.fit.2.0.2.0]host->[Party(role=guest, party_id=10000)] start
[DEBUG] [2020-11-20 07:16:30,106] [20527:139871606757184] - _federation.py[line:86]: [federation.eggroll.remote.hash.91e654d2705dfcc49758.final_splitinfo_host.fit.2.0.2.0[('guest', '10000')])]remote object with type: <class 'list'>
[DEBUG] [2020-11-20 07:16:30,117] [20527:139871606757184] - profile.py[line:185]: [federation.remote.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.final_splitinfo_host.fit.2.0.2.0]host->[Party(role=guest, party_id=10000)] done
[DEBUG] [2020-11-20 07:16:30,117] [20527:139871606757184] - hetero_decision_tree_host.py[line:340]: computing host splits done
[INFO] [2020-11-20 07:16:30,130] [20527:139871606757184] - hetero_decision_tree_host.py[line:161]: get node from host to dispath, depth is 2
[DEBUG] [2020-11-20 07:16:30,132] [20527:139871606757184] - profile.py[line:237]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.dispatch_node_host.fit.2.0.2]host<-[Party(role=guest, party_id=10000)] start
[DEBUG] [2020-11-20 07:16:30,331] [20527:139867765208832] - _federation.py[line:133]: [federation.eggroll.remote.hash.91e654d2705dfcc49758.final_splitinfo_host.fit.2.0.2.0]future to remote to party: ('guest', '10000') done
[DEBUG] [2020-11-20 07:16:32,905] [20527:139871606757184] - _federation.py[line:176]: [federation.eggroll.get.hash.57bcc44b755b74edb18c.dispatch_node_host.fit.2.0.2] got RollPair(namespace=202011200707112994524_hetero_secure_boost_0_0, name=__rsk#202011200707112994524_hetero_secure_boost_0_0#hash.57bcc44b755b74edb18c.dispatch_node_host#fit.2.0.2#guest#10000#host#9999, partitions=4)
[DEBUG] [2020-11-20 07:16:32,908] [20527:139871606757184] - profile.py[line:216]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.dispatch_node_host.fit.2.0.2]host<-[Party(role=guest, party_id=10000)] done
[DEBUG] [2020-11-20 07:16:32,909] [20527:139871606757184] - _cleaner.py[line:62]: [CLEAN]deleting <RollPair(_store=<ErStore(store_locator=<ErStoreLocator(id=0, store_type=LMDB, namespace=202011200707112994524_hetero_secure_boost_0_0, name=__rsk#202011200707112994524_hetero_secure_boost_0_0#hash.57bcc44b755b74edb18c.dispatch_node_host#fit.2.0.0#guest#10000#host#9999, path=, total_partitions=4, partitioner=BYTESTRING_HASH, serdes=PICKLE) at 0x7f358280f0b8>, partitions=[***, len=4], options=[{'eggroll.session.id': '202011200707112994524_hetero_secure_boost_0_0_host_9999', 'eggroll.session.deploy.mode': 'cluster', 'eggroll.session.processors.per.node': '4'}]) at 0x7f35827fd8d0>) at 0x7f358280f080>, destroy, {}
[INFO] [2020-11-20 07:16:33,143] [20527:139871606757184] - hetero_decision_tree_host.py[line:247]: start to find host dispath of depth 2
[DEBUG] [2020-11-20 07:16:33,147] [20527:139871606757184] - profile.py[line:87]: [computing#be69352869]start
[DEBUG] [2020-11-20 07:16:33,531] [20527:139871606757184] - profile.py[line:93]: [computing#be69352869]done, elapse: 0.38400864601135254, function: join(self: Table(partition=4), other: Table(partition=4), func: partial) -> Table(partition=4)
[INFO] [2020-11-20 07:16:33,533] [20527:139871606757184] - hetero_decision_tree_host.py[line:167]: send host dispatch result, depth is 2
[DEBUG] [2020-11-20 07:16:33,534] [20527:139871606757184] - profile.py[line:232]: [federation.remote.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.dispatch_node_host_result.fit.2.0.2]host->[Party(role=guest, party_id=10000)] start
[DEBUG] [2020-11-20 07:16:33,536] [20527:139871606757184] - _federation.py[line:69]: [federation.eggroll.remote.hash.d8b4c7b00ef279c1dba0.dispatch_node_host_result.fit.2.0.2[('guest', '10000')])]remote RollPair(namespace=202011200707112994524_hetero_secure_boost_0_0, name=__rsk#202011200707112994524_hetero_secure_boost_0_0#hash.57bcc44b755b74edb18c.dispatch_node_20201120.071633.154113.1, partitions=4)
[DEBUG] [2020-11-20 07:16:33,544] [20527:139871606757184] - profile.py[line:185]: [federation.remote.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.dispatch_node_host_result.fit.2.0.2]host->[Party(role=guest, party_id=10000)] done
[DEBUG] [2020-11-20 07:16:33,562] [20527:139871606757184] - _cleaner.py[line:62]: [CLEAN]deleting <RollPair(_store=<ErStore(store_locator=<ErStoreLocator(id=0, store_type=LMDB, namespace=202011200707112994524_hetero_secure_boost_0_0, name=__rsk#202011200707112994524_hetero_secure_boost_0_0#hash.57bcc44b755b74edb18c.dispatch_node_20201120.071554.249822.1, path=, total_partitions=4, partitioner=BYTESTRING_HASH, serdes=PICKLE) at 0x7f35827d4898>, partitions=[***, len=4], options=[{'eggroll.session.id': '202011200707112994524_hetero_secure_boost_0_0_host_9999', 'eggroll.session.deploy.mode': 'cluster', 'eggroll.session.processors.per.node': '4'}]) at 0x7f35827d4940>) at 0x7f3582672630>, destroy, {}
[INFO] [2020-11-20 07:16:33,798] [20527:139871606757184] - hetero_decision_tree_host.py[line:175]: sync tree from guest
[DEBUG] [2020-11-20 07:16:33,801] [20527:139871606757184] - profile.py[line:237]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.tree.fit.2.0]host<-[Party(role=guest, party_id=10000)] start
[DEBUG] [2020-11-20 07:16:33,946] [20527:139867756816128] - _federation.py[line:133]: [federation.eggroll.remote.hash.d8b4c7b00ef279c1dba0.dispatch_node_host_result.fit.2.0.2]future to remote to party: ('guest', '10000') done
[DEBUG] [2020-11-20 07:16:36,816] [20527:139871606757184] - _federation.py[line:196]: [federation.eggroll.get.hash.6f9233a3e0ba7978235b.tree.fit.2.0] got object with type: <class 'list'>
[DEBUG] [2020-11-20 07:16:36,818] [20527:139871606757184] - profile.py[line:216]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfer_variable.HeteroDecisionTreeTransferVariable.tree.fit.2.0]host<-[Party(role=guest, party_id=10000)] done
[INFO] [2020-11-20 07:16:36,820] [20527:139871606757184] - hetero_decision_tree_host.py[line:278]: convert tree node bins to real value
[DEBUG] [2020-11-20 07:16:36,822] [20527:139871606757184] - hetero_decision_tree_host.py[line:287]: shape of bin_split_points is 32
[DEBUG] [2020-11-20 07:16:36,822] [20527:139871606757184] - hetero_decision_tree_host.py[line:287]: shape of bin_split_points is 32
[INFO] [2020-11-20 07:16:36,823] [20527:139871606757184] - hetero_decision_tree_host.py[line:272]: remove duplicated nodes from split mask dict
[INFO] [2020-11-20 07:16:36,825] [20527:139871606757184] - hetero_decision_tree_host.py[line:375]: end to fit guest decision tree
[DEBUG] [2020-11-20 07:16:36,828] [20527:139871606757184] - validation_strategy.py[line:99]: validation_freqs is 1
[DEBUG] [2020-11-20 07:16:36,829] [20527:139871606757184] - validation_strategy.py[line:278]: begin to check validate status, need_run_validation is True
[DEBUG] [2020-11-20 07:16:36,830] [20527:139871606757184] - validation_strategy.py[line:99]: validation_freqs is 1
[DEBUG] [2020-11-20 07:16:36,831] [20527:139871606757184] - validation_strategy.py[line:241]: start to evaluate data validate
[DEBUG] [2020-11-20 07:16:36,832] [20527:139871606757184] - model_base.py[line:162]: set flowid to transfer_variable, flowid: fit_iteration_2_validate
[DEBUG] [2020-11-20 07:16:36,837] [20527:139871606757184] - profile.py[line:87]: [computing#767c3132d3]start
[DEBUG] [2020-11-20 07:16:36,978] [20527:139871606757184] - profile.py[line:93]: [computing#767c3132d3]done, elapse: 0.1415572166442871, function: count(self: Table(partition=4)) -> int
[INFO] [2020-11-20 07:16:36,979] [20527:139871606757184] - hetero_secureboost_host.py[line:182]: running prediction
[DEBUG] [2020-11-20 07:16:36,980] [20527:139871606757184] - profile.py[line:237]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_boosting_transfer_variable.HeteroBoostingTransferVariable.predict_start_round.fit_iteration_2_validate]host<-[Party(role=guest, party_id=10000)] start
[DEBUG] [2020-11-20 07:16:37,759] [20527:139871606757184] - _federation.py[line:196]: [federation.eggroll.get.hash.55bac2e405cb1beee722.predict_start_round.fit_iteration_2_validate] got object with type: <class 'int'>
[DEBUG] [2020-11-20 07:16:37,760] [20527:139871606757184] - profile.py[line:216]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_boosting_transfer_variable.HeteroBoostingTransferVariable.predict_start_round.fit_iteration_2_validate]host<-[Party(role=guest, party_id=10000)] done
[INFO] [2020-11-20 07:16:37,761] [20527:139871606757184] - splitter.py[line:59]: splitter init!
[INFO] [2020-11-20 07:16:37,763] [20527:139871606757184] - decision_tree.py[line:229]: load tree model
[INFO] [2020-11-20 07:16:37,765] [20527:139871606757184] - boosting.py[line:391]: generate flowid, flowid fit_iteration_2_validate
[INFO] [2020-11-20 07:16:37,767] [20527:139871606757184] - decision_tree.py[line:93]: set flowid, flowid is fit_iteration_2_validate.2.0
[DEBUG] [2020-11-20 07:16:37,767] [20527:139871606757184] - hetero_secureboost_host.py[line:167]: cur predict round is 0
[DEBUG] [2020-11-20 07:16:37,768] [20527:139871606757184] - profile.py[line:237]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_secure_boosting_predict_transfer_variable.HeteroSecureBoostTransferVariable.predict_stop_flag.fit_iteration_2_validate.2.0.0]host<-[Party(role=guest, party_id=10000)] start
[DEBUG] [2020-11-20 07:16:40,831] [20527:139871606757184] - _federation.py[line:196]: [federation.eggroll.get.hash.361c9228f6769dcc3527.predict_stop_flag.fit_iteration_2_validate.2.0.0] got object with type: <class 'bool'>
[DEBUG] [2020-11-20 07:16:40,832] [20527:139871606757184] - profile.py[line:216]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_secure_boosting_predict_transfer_variable.HeteroSecureBoostTransferVariable.predict_stop_flag.fit_iteration_2_validate.2.0.0]host<-[Party(role=guest, party_id=10000)] done
[DEBUG] [2020-11-20 07:16:40,834] [20527:139871606757184] - profile.py[line:237]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_secure_boosting_predict_transfer_variable.HeteroSecureBoostTransferVariable.guest_predict_data.fit_iteration_2_validate.2.0.0]host<-[Party(role=guest, party_id=10000)] start
[DEBUG] [2020-11-20 07:16:41,156] [20527:139871606757184] - _federation.py[line:176]: [federation.eggroll.get.hash.8af87c9df261887caccf.guest_predict_data.fit_iteration_2_validate.2.0.0] got RollPair(namespace=202011200707112994524_hetero_secure_boost_0_0, name=__rsk#202011200707112994524_hetero_secure_boost_0_0#hash.8af87c9df261887caccf.guest_predict_data#fit_iteration_2_validate.2.0.0#guest#10000#host#9999, partitions=4)
[DEBUG] [2020-11-20 07:16:41,158] [20527:139871606757184] - profile.py[line:216]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_secure_boosting_predict_transfer_variable.HeteroSecureBoostTransferVariable.guest_predict_data.fit_iteration_2_validate.2.0.0]host<-[Party(role=guest, party_id=10000)] done
[DEBUG] [2020-11-20 07:16:41,162] [20527:139871606757184] - profile.py[line:87]: [computing#21f09ccc0a]start
[DEBUG] [2020-11-20 07:16:41,510] [20527:139871606757184] - profile.py[line:93]: [computing#21f09ccc0a]done, elapse: 0.3476901054382324, function: join(self: Table(partition=4), other: Table(partition=4), func: partial) -> Table(partition=4)
[DEBUG] [2020-11-20 07:16:41,511] [20527:139871606757184] - profile.py[line:232]: [federation.remote.federatedml.transfer_variable.transfer_class.hetero_secure_boosting_predict_transfer_variable.HeteroSecureBoostTransferVariable.host_predict_data.fit_iteration_2_validate.2.0.0]host->[Party(role=guest, party_id=10000)] start
[DEBUG] [2020-11-20 07:16:41,512] [20527:139871606757184] - _federation.py[line:69]: [federation.eggroll.remote.hash.817500759b04bc599183.host_predict_data.fit_iteration_2_validate.2.0.0[('guest', '10000')])]remote RollPair(namespace=202011200707112994524_hetero_secure_boost_0_0, name=__rsk#202011200707112994524_hetero_secure_boost_0_0#hash.8af87c9df261887caccf.guest_predict_data#fit_iteration_2_20201120.071641.185575.1, partitions=4)
[DEBUG] [2020-11-20 07:16:41,522] [20527:139871606757184] - profile.py[line:185]: [federation.remote.federatedml.transfer_variable.transfer_class.hetero_secure_boosting_predict_transfer_variable.HeteroSecureBoostTransferVariable.host_predict_data.fit_iteration_2_validate.2.0.0]host->[Party(role=guest, party_id=10000)] done
[DEBUG] [2020-11-20 07:16:41,524] [20527:139871606757184] - hetero_secureboost_host.py[line:167]: cur predict round is 1
[DEBUG] [2020-11-20 07:16:41,536] [20527:139871606757184] - profile.py[line:237]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_secure_boosting_predict_transfer_variable.HeteroSecureBoostTransferVariable.predict_stop_flag.fit_iteration_2_validate.2.0.1]host<-[Party(role=guest, party_id=10000)] start
[DEBUG] [2020-11-20 07:16:41,861] [20527:139867756816128] - _federation.py[line:133]: [federation.eggroll.remote.hash.817500759b04bc599183.host_predict_data.fit_iteration_2_validate.2.0.0]future to remote to party: ('guest', '10000') done
[DEBUG] [2020-11-20 07:16:44,110] [20527:139871606757184] - _federation.py[line:196]: [federation.eggroll.get.hash.361c9228f6769dcc3527.predict_stop_flag.fit_iteration_2_validate.2.0.1] got object with type: <class 'bool'>
[DEBUG] [2020-11-20 07:16:44,113] [20527:139871606757184] - profile.py[line:216]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_secure_boosting_predict_transfer_variable.HeteroSecureBoostTransferVariable.predict_stop_flag.fit_iteration_2_validate.2.0.1]host<-[Party(role=guest, party_id=10000)] done
[DEBUG] [2020-11-20 07:16:44,114] [20527:139871606757184] - model_base.py[line:162]: set flowid to transfer_variable, flowid: fit
[INFO] [2020-11-20 07:16:44,115] [20527:139871606757184] - hetero_boosting.py[line:268]: sync stop flag from guest, boosting_core round is 2
[DEBUG] [2020-11-20 07:16:44,116] [20527:139871606757184] - profile.py[line:237]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_boosting_transfer_variable.HeteroBoostingTransferVariable.stop_flag.fit.2]host<-[Party(role=guest, party_id=10000)] start
[DEBUG] [2020-11-20 07:16:47,533] [20527:139871606757184] - _federation.py[line:196]: [federation.eggroll.get.hash.dcd307c9973f180efdfb.stop_flag.fit.2] got object with type: <class 'bool'>
[DEBUG] [2020-11-20 07:16:47,536] [20527:139871606757184] - profile.py[line:216]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_boosting_transfer_variable.HeteroBoostingTransferVariable.stop_flag.fit.2]host<-[Party(role=guest, party_id=10000)] done
[DEBUG] [2020-11-20 07:16:47,537] [20527:139871606757184] - hetero_secureboost_host.py[line:130]: summary is {'best_iteration': -1, 'is_converged': False}
[DEBUG] [2020-11-20 07:16:47,592] [20527:139871606757184] - model_base.py[line:162]: set flowid to transfer_variable, flowid: validate
[DEBUG] [2020-11-20 07:16:47,597] [20527:139871606757184] - profile.py[line:84]: [computing#ee81c7eeaf]function_stack: [io_check.py:28]_func <-[model_base.py:101]run
[DEBUG] [2020-11-20 07:16:47,598] [20527:139871606757184] - profile.py[line:87]: [computing#ee81c7eeaf]start
[DEBUG] [2020-11-20 07:16:47,898] [20527:139871606757184] - profile.py[line:93]: [computing#ee81c7eeaf]done, elapse: 0.3007979393005371, function: count(self: Table(partition=4)) -> int
[INFO] [2020-11-20 07:16:47,899] [20527:139871606757184] - hetero_secureboost_host.py[line:182]: running prediction
[DEBUG] [2020-11-20 07:16:47,907] [20527:139871606757184] - profile.py[line:84]: [computing#5ec86a5a71]function_stack: [abnormal_detection.py:27]empty_table_detection <-[boosting.py:201]data_alignment <-[boosting.py:219]data_and_header_alignment <-[hetero_secureboost_host.py:184]predict <-[io_check.py:31]_func <-[model_base.py:101]run
[DEBUG] [2020-11-20 07:16:47,907] [20527:139871606757184] - profile.py[line:87]: [computing#5ec86a5a71]start
[DEBUG] [2020-11-20 07:16:47,960] [20527:139871606757184] - profile.py[line:93]: [computing#5ec86a5a71]done, elapse: 0.053693294525146484, function: count(self: Table(partition=4)) -> int
[DEBUG] [2020-11-20 07:16:47,963] [20527:139871606757184] - profile.py[line:84]: [computing#4295554d7a]function_stack: [data_overview.py:27]get_features_shape <-[data_overview.py:105]is_empty_feature <-[abnormal_detection.py:33]empty_feature_detection <-[boosting.py:202]data_alignment <-[boosting.py:219]data_and_header_alignment <-[hetero_secureboost_host.py:184]predict <-[io_check.py:31]_func <-[model_base.py:101]run
[DEBUG] [2020-11-20 07:16:47,964] [20527:139871606757184] - profile.py[line:87]: [computing#4295554d7a]start
[DEBUG] [2020-11-20 07:16:48,240] [20527:139871606757184] - profile.py[line:93]: [computing#4295554d7a]done, elapse: 0.27729225158691406, function: first(self: Table(partition=4)) -> tuple
[DEBUG] [2020-11-20 07:16:48,244] [20527:139871606757184] - profile.py[line:84]: [computing#48fad0d741]function_stack: [boosting.py:204]data_alignment <-[boosting.py:219]data_and_header_alignment <-[hetero_secureboost_host.py:184]predict <-[io_check.py:31]_func <-[model_base.py:101]run
[DEBUG] [2020-11-20 07:16:48,244] [20527:139871606757184] - profile.py[line:87]: [computing#48fad0d741]start
[DEBUG] [2020-11-20 07:16:49,146] [20527:139871606757184] - profile.py[line:93]: [computing#48fad0d741]done, elapse: 0.9017293453216553, function: mapValues(self: Table(partition=4), func: function) -> Table(partition=4)
[DEBUG] [2020-11-20 07:16:49,148] [20527:139871606757184] - profile.py[line:237]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_boosting_transfer_variable.HeteroBoostingTransferVariable.predict_start_round.validate]host<-[Party(role=guest, party_id=10000)] start
[DEBUG] [2020-11-20 07:16:49,864] [20527:139871606757184] - _federation.py[line:196]: [federation.eggroll.get.hash.55bac2e405cb1beee722.predict_start_round.validate] got object with type: <class 'int'>
[DEBUG] [2020-11-20 07:16:49,865] [20527:139871606757184] - profile.py[line:216]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_boosting_transfer_variable.HeteroBoostingTransferVariable.predict_start_round.validate]host<-[Party(role=guest, party_id=10000)] done
[INFO] [2020-11-20 07:16:49,867] [20527:139871606757184] - splitter.py[line:59]: splitter init!
[INFO] [2020-11-20 07:16:49,868] [20527:139871606757184] - decision_tree.py[line:229]: load tree model
[INFO] [2020-11-20 07:16:49,870] [20527:139871606757184] - boosting.py[line:391]: generate flowid, flowid validate
[INFO] [2020-11-20 07:16:49,871] [20527:139871606757184] - decision_tree.py[line:93]: set flowid, flowid is validate.0.0
[INFO] [2020-11-20 07:16:49,872] [20527:139871606757184] - splitter.py[line:59]: splitter init!
[INFO] [2020-11-20 07:16:49,873] [20527:139871606757184] - decision_tree.py[line:229]: load tree model
[INFO] [2020-11-20 07:16:49,875] [20527:139871606757184] - boosting.py[line:391]: generate flowid, flowid validate
[INFO] [2020-11-20 07:16:49,876] [20527:139871606757184] - decision_tree.py[line:93]: set flowid, flowid is validate.1.0
[INFO] [2020-11-20 07:16:49,877] [20527:139871606757184] - splitter.py[line:59]: splitter init!
[INFO] [2020-11-20 07:16:49,879] [20527:139871606757184] - decision_tree.py[line:229]: load tree model
[INFO] [2020-11-20 07:16:49,881] [20527:139871606757184] - boosting.py[line:391]: generate flowid, flowid validate
[INFO] [2020-11-20 07:16:49,883] [20527:139871606757184] - decision_tree.py[line:93]: set flowid, flowid is validate.2.0
[DEBUG] [2020-11-20 07:16:49,884] [20527:139871606757184] - hetero_secureboost_host.py[line:167]: cur predict round is 0
[DEBUG] [2020-11-20 07:16:49,885] [20527:139871606757184] - profile.py[line:237]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_secure_boosting_predict_transfer_variable.HeteroSecureBoostTransferVariable.predict_stop_flag.validate.2.0.0]host<-[Party(role=guest, party_id=10000)] start
[DEBUG] [2020-11-20 07:16:50,520] [20527:139871606757184] - _federation.py[line:196]: [federation.eggroll.get.hash.361c9228f6769dcc3527.predict_stop_flag.validate.2.0.0] got object with type: <class 'bool'>
[DEBUG] [2020-11-20 07:16:50,522] [20527:139871606757184] - profile.py[line:216]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_secure_boosting_predict_transfer_variable.HeteroSecureBoostTransferVariable.predict_stop_flag.validate.2.0.0]host<-[Party(role=guest, party_id=10000)] done
[DEBUG] [2020-11-20 07:16:50,524] [20527:139871606757184] - profile.py[line:237]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_secure_boosting_predict_transfer_variable.HeteroSecureBoostTransferVariable.guest_predict_data.validate.2.0.0]host<-[Party(role=guest, party_id=10000)] start
[DEBUG] [2020-11-20 07:16:50,948] [20527:139871606757184] - _federation.py[line:176]: [federation.eggroll.get.hash.8af87c9df261887caccf.guest_predict_data.validate.2.0.0] got RollPair(namespace=202011200707112994524_hetero_secure_boost_0_0, name=__rsk#202011200707112994524_hetero_secure_boost_0_0#hash.8af87c9df261887caccf.guest_predict_data#validate.2.0.0#guest#10000#host#9999, partitions=4)
[DEBUG] [2020-11-20 07:16:50,950] [20527:139871606757184] - profile.py[line:216]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_secure_boosting_predict_transfer_variable.HeteroSecureBoostTransferVariable.guest_predict_data.validate.2.0.0]host<-[Party(role=guest, party_id=10000)] done
[DEBUG] [2020-11-20 07:16:50,951] [20527:139871606757184] - _cleaner.py[line:62]: [CLEAN]deleting <RollPair(_store=<ErStore(store_locator=<ErStoreLocator(id=0, store_type=LMDB, namespace=202011200707112994524_hetero_secure_boost_0_0, name=__rsk#202011200707112994524_hetero_secure_boost_0_0#hash.8af87c9df261887caccf.guest_predict_data#fit_iteration_1_validate.1.0.0#guest#10000#host#9999, path=, total_partitions=4, partitioner=BYTESTRING_HASH, serdes=PICKLE) at 0x7f3582888550>, partitions=[***, len=4], options=[{'eggroll.session.deploy.mode': 'cluster', 'eggroll.session.processors.per.node': '4', 'eggroll.session.id': '202011200707112994524_hetero_secure_boost_0_0_host_9999'}]) at 0x7f35827fd048>) at 0x7f3582888f60>, destroy, {}
[DEBUG] [2020-11-20 07:16:51,199] [20527:139871606757184] - profile.py[line:84]: [computing#f887cfda92]function_stack: [hetero_secureboost_host.py:174]boosting_fast_predict <-[hetero_secureboost_host.py:197]predict <-[io_check.py:31]_func <-[model_base.py:101]run
[DEBUG] [2020-11-20 07:16:51,201] [20527:139871606757184] - profile.py[line:87]: [computing#f887cfda92]start
[DEBUG] [2020-11-20 07:16:52,013] [20527:139871606757184] - profile.py[line:93]: [computing#f887cfda92]done, elapse: 0.8133690357208252, function: join(self: Table(partition=4), other: Table(partition=4), func: partial) -> Table(partition=4)
[DEBUG] [2020-11-20 07:16:52,015] [20527:139871606757184] - profile.py[line:232]: [federation.remote.federatedml.transfer_variable.transfer_class.hetero_secure_boosting_predict_transfer_variable.HeteroSecureBoostTransferVariable.host_predict_data.validate.2.0.0]host->[Party(role=guest, party_id=10000)] start
[DEBUG] [2020-11-20 07:16:52,016] [20527:139871606757184] - _federation.py[line:69]: [federation.eggroll.remote.hash.817500759b04bc599183.host_predict_data.validate.2.0.0[('guest', '10000')])]remote RollPair(namespace=202011200707112994524_hetero_secure_boost_0_0, name=__rsk#202011200707112994524_hetero_secure_boost_0_0#hash.8af87c9df261887caccf.guest_predict_20201120.071651.249365.1, partitions=4)
[DEBUG] [2020-11-20 07:16:52,027] [20527:139871606757184] - profile.py[line:185]: [federation.remote.federatedml.transfer_variable.transfer_class.hetero_secure_boosting_predict_transfer_variable.HeteroSecureBoostTransferVariable.host_predict_data.validate.2.0.0]host->[Party(role=guest, party_id=10000)] done
[DEBUG] [2020-11-20 07:16:52,028] [20527:139871606757184] - _cleaner.py[line:62]: [CLEAN]deleting <RollPair(_store=<ErStore(store_locator=<ErStoreLocator(id=0, store_type=LMDB, namespace=202011200707112994524_hetero_secure_boost_0_0, name=__rsk#202011200707112994524_hetero_secure_boost_0_0#hash.8af87c9df261887caccf.guest_predict_data#fit_iteration_1_20201120.071532.145746.1, path=, total_partitions=4, partitioner=BYTESTRING_HASH, serdes=PICKLE) at 0x7f358280fa20>, partitions=[***, len=4], options=[{'eggroll.session.id': '202011200707112994524_hetero_secure_boost_0_0_host_9999', 'eggroll.session.deploy.mode': 'cluster', 'eggroll.session.processors.per.node': '4'}]) at 0x7f358280fa90>) at 0x7f3582944630>, destroy, {}
[DEBUG] [2020-11-20 07:16:52,404] [20527:139871606757184] - hetero_secureboost_host.py[line:167]: cur predict round is 1
[DEBUG] [2020-11-20 07:16:52,406] [20527:139871606757184] - profile.py[line:237]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_secure_boosting_predict_transfer_variable.HeteroSecureBoostTransferVariable.predict_stop_flag.validate.2.0.1]host<-[Party(role=guest, party_id=10000)] start
[DEBUG] [2020-11-20 07:16:52,462] [20527:139867740030720] - _federation.py[line:133]: [federation.eggroll.remote.hash.817500759b04bc599183.host_predict_data.validate.2.0.0]future to remote to party: ('guest', '10000') done
[DEBUG] [2020-11-20 07:16:55,092] [20527:139871606757184] - _federation.py[line:196]: [federation.eggroll.get.hash.361c9228f6769dcc3527.predict_stop_flag.validate.2.0.1] got object with type: <class 'bool'>
[DEBUG] [2020-11-20 07:16:55,094] [20527:139871606757184] - profile.py[line:216]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_secure_boosting_predict_transfer_variable.HeteroSecureBoostTransferVariable.predict_stop_flag.validate.2.0.1]host<-[Party(role=guest, party_id=10000)] done
[DEBUG] [2020-11-20 07:16:55,095] [20527:139871606757184] - model_base.py[line:162]: set flowid to transfer_variable, flowid: predict
[DEBUG] [2020-11-20 07:16:55,097] [20527:139871606757184] - profile.py[line:87]: [computing#ee81c7eeaf]start
[DEBUG] [2020-11-20 07:16:55,507] [20527:139871606757184] - profile.py[line:93]: [computing#ee81c7eeaf]done, elapse: 0.41032981872558594, function: count(self: Table(partition=4)) -> int
[INFO] [2020-11-20 07:16:55,509] [20527:139871606757184] - hetero_secureboost_host.py[line:182]: running prediction
[DEBUG] [2020-11-20 07:16:55,511] [20527:139871606757184] - profile.py[line:237]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_boosting_transfer_variable.HeteroBoostingTransferVariable.predict_start_round.predict]host<-[Party(role=guest, party_id=10000)] start
[DEBUG] [2020-11-20 07:16:56,155] [20527:139871606757184] - _federation.py[line:196]: [federation.eggroll.get.hash.55bac2e405cb1beee722.predict_start_round.predict] got object with type: <class 'int'>
[DEBUG] [2020-11-20 07:16:56,157] [20527:139871606757184] - profile.py[line:216]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_boosting_transfer_variable.HeteroBoostingTransferVariable.predict_start_round.predict]host<-[Party(role=guest, party_id=10000)] done
[DEBUG] [2020-11-20 07:16:56,160] [20527:139871606757184] - hetero_secureboost_host.py[line:167]: cur predict round is 0
[DEBUG] [2020-11-20 07:16:56,161] [20527:139871606757184] - profile.py[line:237]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_secure_boosting_predict_transfer_variable.HeteroSecureBoostTransferVariable.predict_stop_flag.predict.0]host<-[Party(role=guest, party_id=10000)] start
[DEBUG] [2020-11-20 07:16:57,942] [20527:139871606757184] - _federation.py[line:196]: [federation.eggroll.get.hash.361c9228f6769dcc3527.predict_stop_flag.predict.0] got object with type: <class 'bool'>
[DEBUG] [2020-11-20 07:16:57,944] [20527:139871606757184] - profile.py[line:216]: [federation.get.federatedml.transfer_variable.transfer_class.hetero_secure_boosting_predict_transfer_variable.HeteroSecureBoostTransferVariable.predict_stop_flag.predict.0]host<-[Party(role=guest, party_id=10000)] done
[DEBUG] [2020-11-20 07:16:57,945] [20527:139871606757184] - model_base.py[line:97]: func: <function ComponentProperties.union_data at 0x7f35893b8400>
[DEBUG] [2020-11-20 07:16:57,946] [20527:139871606757184] - model_base.py[line:97]: func: <function ModelBase.set_predict_data_schema at 0x7f35893bc598>
[DEBUG] [2020-11-20 07:16:57,947] [20527:139871606757184] - model_base.py[line:109]: saved_result is : [None], data_output: None
[INFO] [2020-11-20 07:16:57,948] [20527:139871606757184] - tracker_client.py[line:173]: Request save job 202011200707112994524 task 202011200707112994524_hetero_secure_boost_0 0 on host 9999 component summary
[INFO] [2020-11-20 07:17:01,998] [20527:139871606757184] - profile.py[line:249]: 
Computing:
+----------+--------------------------------------------------------+
| function |       function         n    sum(s)   mean(s)   max(s)  |
|          | --------------------- ---- -------- --------- -------- |
|          |  mapReducePartitions   10   23.273    2.327    5.921   |
|          |       mapValues        22   19.996    0.909    12.676  |
|          |         join           30   11.761    0.392    0.813   |
|          |         count          20   2.091     0.105     0.41   |
|          |         first          6     1.55     0.258    0.386   |
|          |         load           2    0.845     0.423    0.484   |
|          |        collect         10   0.054     0.005    0.007   |
+----------+--------------------------------------------------------+
|  total   |      n=100, sum=59.5700, mean=0.5957, max=12.6755      |
+----------+--------------------------------------------------------+

Federation:
+--------+-------------------------------------------------------------------------------------------------------------+
|  get   |                                    name                                    | n | sum(s) | mean(s) | max(s)  |
|        | ---------------------------------------------------------------------------+---+--------+---------+-------- |
|        |  federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfe | 9 | 61.26  |  6.807  | 9.274   |
|        |  r_variable.HeteroDecisionTreeTransferVariable.federated_best_splitinfo_ho |   |        |         |         |
|        |                                     st                                     |   |        |         |         |
|        | ---------------------------------------------------------------------------+---+--------+---------+-------- |
|        |  federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfe | 9 | 25.553 |  2.839  | 3.307   |
|        |      r_variable.HeteroDecisionTreeTransferVariable.dispatch_node_host      |   |        |         |         |
|        | ---------------------------------------------------------------------------+---+--------+---------+-------- |
|        |  federatedml.transfer_variable.transfer_class.hetero_secure_boosting_predi | 8 | 18.665 |  2.333  | 3.353   |
|        |  ct_transfer_variable.HeteroSecureBoostTransferVariable.predict_stop_flag  |   |        |         |         |
|        | ---------------------------------------------------------------------------+---+--------+---------+-------- |
|        |  federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfe | 9 | 11.322 |  1.258  | 2.456   |
|        |        r_variable.HeteroDecisionTreeTransferVariable.tree_node_queue       |   |        |         |         |
|        | ---------------------------------------------------------------------------+---+--------+---------+-------- |
|        |  federatedml.transfer_variable.transfer_class.hetero_boosting_transfer_var | 3 | 8.826  |  2.942  | 3.419   |
|        |               iable.HeteroBoostingTransferVariable.stop_flag               |   |        |         |         |
|        | ---------------------------------------------------------------------------+---+--------+---------+-------- |
|        |  federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfe | 3 | 7.793  |  2.598  | 3.017   |
|        |             r_variable.HeteroDecisionTreeTransferVariable.tree             |   |        |         |         |
|        | ---------------------------------------------------------------------------+---+--------+---------+-------- |
|        |  federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfe | 3 | 7.074  |  2.358  | 3.486   |
|        |    r_variable.HeteroDecisionTreeTransferVariable.encrypted_grad_and_hess   |   |        |         |         |
|        | ---------------------------------------------------------------------------+---+--------+---------+-------- |
|        |  federatedml.transfer_variable.transfer_class.hetero_boosting_transfer_var | 5 | 4.644  |  0.929  |  1.49   |
|        |          iable.HeteroBoostingTransferVariable.predict_start_round          |   |        |         |         |
|        | ---------------------------------------------------------------------------+---+--------+---------+-------- |
|        |  federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfe | 9 | 3.251  |  0.361  |  0.45   |
|        |        r_variable.HeteroDecisionTreeTransferVariable.node_positions        |   |        |         |         |
|        | ---------------------------------------------------------------------------+---+--------+---------+-------- |
|        |  federatedml.transfer_variable.transfer_class.hetero_secure_boosting_predi | 3 | 1.001  |  0.334  | 0.425   |
|        |  ct_transfer_variable.HeteroSecureBoostTransferVariable.guest_predict_data |   |        |         |         |
|        | ---------------------------------------------------------------------------+---+--------+---------+-------- |
|        |  federatedml.transfer_variable.transfer_class.hetero_boosting_transfer_var | 1 | 0.799  |  0.799  | 0.799   |
|        |              iable.HeteroBoostingTransferVariable.booster_dim              |   |        |         |         |
+--------+-------------------------------------------------------------------------------------------------------------+
| remote |                                    name                                    | n | sum(s) | mean(s) | max(s)  |
|        | ---------------------------------------------------------------------------+---+--------+---------+-------- |
|        |  federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfe | 9 | 0.866  |  0.096  | 0.183   |
|        |   r_variable.HeteroDecisionTreeTransferVariable.encrypted_splitinfo_host   |   |        |         |         |
|        | ---------------------------------------------------------------------------+---+--------+---------+-------- |
|        |  federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfe | 9 |  0.15  |  0.017  | 0.048   |
|        |   r_variable.HeteroDecisionTreeTransferVariable.dispatch_node_host_result  |   |        |         |         |
|        | ---------------------------------------------------------------------------+---+--------+---------+-------- |
|        |  federatedml.transfer_variable.transfer_class.hetero_decision_tree_transfe | 9 | 0.108  |  0.012  | 0.026   |
|        |     r_variable.HeteroDecisionTreeTransferVariable.final_splitinfo_host     |   |        |         |         |
|        | ---------------------------------------------------------------------------+---+--------+---------+-------- |
|        |  federatedml.transfer_variable.transfer_class.hetero_secure_boosting_predi | 3 | 0.031  |  0.01   | 0.011   |
|        |  ct_transfer_variable.HeteroSecureBoostTransferVariable.host_predict_data  |   |        |         |         |
+--------+-------------------------------------------------------------------------------------------------------------+
| total  |                                 n=92, sum=151.3435, mean=1.6450, max=9.2742                                 |
+--------+-------------------------------------------------------------------------------------------------------------+

[INFO] [2020-11-20 07:17:02,013] [20527:139871606757184] - pipelined_model.py[line:73]: Save hetero_secure_boost_0 model HeteroSecureBoostingTreeHostMeta buffer
[INFO] [2020-11-20 07:17:02,016] [20527:139871606757184] - pipelined_model.py[line:73]: Save hetero_secure_boost_0 model HeteroSecureBoostingTreeHostParam buffer
[INFO] [2020-11-20 07:17:02,062] [20527:139871606757184] - pipelined_model.py[line:78]: Save hetero_secure_boost_0 model successfully
[INFO] [2020-11-20 07:17:02,064] [20527:139871606757184] - task_executor.py[line:302]: report task 202011200707112994524_hetero_secure_boost_0 0 host 9999 to driver
[INFO] [2020-11-20 07:17:02,066] [20527:139871606757184] - control_client.py[line:42]: request update job 202011200707112994524 task 202011200707112994524_hetero_secure_boost_0 0 on host 9999
[INFO] [2020-11-20 07:17:03,389] [20527:139871606757184] - task_executor.py[line:207]: task 202011200707112994524_hetero_secure_boost_0 host 9999 start time: 2020-11-20 07:12:48
[INFO] [2020-11-20 07:17:03,390] [20527:139871606757184] - task_executor.py[line:209]: task 202011200707112994524_hetero_secure_boost_0 host 9999 end time: 2020-11-20 07:17:02
[INFO] [2020-11-20 07:17:03,391] [20527:139871606757184] - task_executor.py[line:211]: task 202011200707112994524_hetero_secure_boost_0 host 9999 takes 254.014s
[INFO] [2020-11-20 07:17:03,392] [20527:139871606757184] - task_executor.py[line:214]: Finish 202011200707112994524 hetero_secure_boost_0 202011200707112994524_hetero_secure_boost_0 0 host 9999 task success
[INFO] [2020-11-20 07:17:03,393] [20527:139871606757184] - task_executor.py[line:302]: report task 202011200707112994524_hetero_secure_boost_0 0 host 9999 to driver
[INFO] [2020-11-20 07:17:03,393] [20527:139871606757184] - control_client.py[line:42]: request update job 202011200707112994524 task 202011200707112994524_hetero_secure_boost_0 0 on host 9999
[INFO] [2020-11-20 07:17:36,375] [22527:140352875779904] - task_executor.py[line:302]: report task 202011200707112994524_evaluation_0 0 host 9999 to driver
[INFO] [2020-11-20 07:17:36,378] [22527:140352875779904] - control_client.py[line:42]: request update job 202011200707112994524 task 202011200707112994524_evaluation_0 0 on host 9999
[DEBUG] [2020-11-20 07:17:48,819] [22527:140352875779904] - _federation.py[line:35]: [federation.eggroll]init federation: rp_session_id=202011200707112994524_evaluation_0_0_host_9999, rs_session_id=202011200707112994524_evaluation_0_0, party=Party(role=host, party_id=9999), proxy_endpoint=rollsite:9370
[DEBUG] [2020-11-20 07:17:48,822] [22527:140352875779904] - _federation.py[line:45]: [federation.eggroll]init federation context done
[INFO] [2020-11-20 07:17:48,823] [22527:140352875779904] - task_executor.py[line:156]: Run 202011200707112994524 evaluation_0 202011200707112994524_evaluation_0 host 9999 task
[INFO] [2020-11-20 07:17:48,825] [22527:140352875779904] - task_executor.py[line:157]: Component parameters on party {'EvaluateParam': {'eval_type': 'binary', 'pos_label': 1, 'need_run': True, 'metrics': None, 'run_clustering_arbiter_metric': False, 'default_metrics': {'binary': ['auc', 'ks', 'lift', 'gain', 'accuracy', 'precision', 'recall', 'roc', 'confusion_mat', 'psi', 'f1_score', 'quantile_pr'], 'multi': ['accuracy', 'precision', 'recall'], 'regression': ['explained_variance', 'mean_absolute_error', 'mean_squared_error', 'median_absolute_error', 'r2_score', 'root_mean_squared_error'], 'clustering': ['jaccard_similarity_score', 'fowlkes_mallows_score', 'adjusted_rand_score', 'davies_bouldin_index', 'distance_measure', 'contingency_matrix']}, 'allowed_metrics': {'binary': ['auc', 'ks', 'lift', 'gain', 'accuracy', 'precision', 'recall', 'roc', 'confusion_mat', 'psi', 'f1_score', 'quantile_pr'], 'multi': ['accuracy', 'precision', 'recall'], 'regression': ['explained_variance', 'mean_absolute_error', 'mean_squared_error', 'median_absolute_error', 'r2_score', 'root_mean_squared_error'], 'clustering': ['jaccard_similarity_score', 'fowlkes_mallows_score', 'adjusted_rand_score', 'davies_bouldin_index', 'distance_measure', 'contingency_matrix']}}, 'dsl_version': 2, 'initiator': {'role': 'guest', 'party_id': 10000}, 'role': {'host': [9999], 'guest': [10000]}, 'job_parameters': {'job_type': 'train', 'work_mode': 1, 'backend': 0, 'computing_engine': 'EGGROLL', 'federation_engine': 'EGGROLL', 'storage_engine': 'EGGROLL', 'engines_address': {'computing': {'cores_per_node': 20, 'nodes': 1}, 'federation': {'host': 'rollsite', 'port': 9370}, 'storage': {'cores_per_node': 20, 'nodes': 1}}, 'federated_mode': 'MULTIPLE', 'task_parallelism': 1, 'computing_partitions': 4, 'federated_status_collect_type': 'PUSH', 'model_id': 'guest-10000#host-9999#model', 'model_version': '202011200707112994524', 'eggroll_run': {'eggroll.session.processors.per.node': 4}, 'spark_run': {}, 'rabbitmq_run': {}, 'adaptation_parameters': {'task_nodes': 1, 'task_cores_per_node': 4, 'task_memory_per_node': 0}}, 'component_parameters': {'common': {'hetero_secure_boost_0': {'task_type': 'classification', 'objective_param': {'objective': 'cross_entropy'}, 'num_trees': 3, 'validation_freqs': 1, 'encrypt_param': {'method': 'iterativeAffine'}, 'tree_param': {'max_depth': 3}}, 'evaluation_0': {'eval_type': 'binary'}}, 'role': {'guest': {'0': {'reader_1': {'table': {'name': 'breast_hetero_guest', 'namespace': 'experiment'}}, 'reader_0': {'table': {'name': 'breast_hetero_guest', 'namespace': 'experiment'}}, 'dataio_0': {'with_label': True, 'output_format': 'dense'}, 'dataio_1': {'with_label': True, 'output_format': 'dense'}}}, 'host': {'0': {'reader_1': {'table': {'name': 'breast_hetero_host', 'namespace': 'experiment'}}, 'reader_0': {'table': {'name': 'breast_hetero_host', 'namespace': 'experiment'}}, 'dataio_0': {'with_label': False}, 'dataio_1': {'with_label': False}}}}}, 'config': '/data/projects/fate/python/fate_flow/examples/hetero_secureboost_conf.json', 'dsl': 'examples/hetero_secureboost_dsl.json', 'function': 'submit_job', 'local': {'role': 'host', 'party_id': 9999}, 'CodePath': 'federatedml/evaluation/evaluation.py/Evaluation', 'module': 'Evaluation', 'output_data_name': ['data']}
[INFO] [2020-11-20 07:17:48,827] [22527:140352875779904] - task_executor.py[line:158]: Task input dsl {'data': {'data': ['hetero_secure_boost_0.data']}}
[INFO] [2020-11-20 07:17:48,828] [22527:140352875779904] - tracker_client.py[line:150]: Request read job 202011200707112994524 task None None on host 9999 data data info
[WARNING] [2020-11-20 07:17:51,745] [22527:140352875779904] - evaluation_param.py[line:130]: use default metric ['auc', 'ks', 'lift', 'gain', 'accuracy', 'precision', 'recall', 'roc', 'confusion_mat', 'psi', 'f1_score', 'quantile_pr'] for eval type binary
[INFO] [2020-11-20 07:17:51,748] [22527:140352875779904] - evaluation_param.py[line:134]: Finish evaluation parameter check!
[DEBUG] [2020-11-20 07:17:51,749] [22527:140352875779904] - component_properties.py[line:73]: {'EvaluateParam': {'eval_type': 'binary', 'pos_label': 1, 'need_run': True, 'metrics': None, 'run_clustering_arbiter_metric': False, 'default_metrics': {'binary': ['auc', 'ks', 'lift', 'gain', 'accuracy', 'precision', 'recall', 'roc', 'confusion_mat', 'psi', 'f1_score', 'quantile_pr'], 'multi': ['accuracy', 'precision', 'recall'], 'regression': ['explained_variance', 'mean_absolute_error', 'mean_squared_error', 'median_absolute_error', 'r2_score', 'root_mean_squared_error'], 'clustering': ['jaccard_similarity_score', 'fowlkes_mallows_score', 'adjusted_rand_score', 'davies_bouldin_index', 'distance_measure', 'contingency_matrix']}, 'allowed_metrics': {'binary': ['auc', 'ks', 'lift', 'gain', 'accuracy', 'precision', 'recall', 'roc', 'confusion_mat', 'psi', 'f1_score', 'quantile_pr'], 'multi': ['accuracy', 'precision', 'recall'], 'regression': ['explained_variance', 'mean_absolute_error', 'mean_squared_error', 'median_absolute_error', 'r2_score', 'root_mean_squared_error'], 'clustering': ['jaccard_similarity_score', 'fowlkes_mallows_score', 'adjusted_rand_score', 'davies_bouldin_index', 'distance_measure', 'contingency_matrix']}}, 'dsl_version': 2, 'initiator': {'role': 'guest', 'party_id': 10000}, 'role': {'host': [9999], 'guest': [10000]}, 'job_parameters': {'job_type': 'train', 'work_mode': 1, 'backend': 0, 'computing_engine': 'EGGROLL', 'federation_engine': 'EGGROLL', 'storage_engine': 'EGGROLL', 'engines_address': {'computing': {'cores_per_node': 20, 'nodes': 1}, 'federation': {'host': 'rollsite', 'port': 9370}, 'storage': {'cores_per_node': 20, 'nodes': 1}}, 'federated_mode': 'MULTIPLE', 'task_parallelism': 1, 'computing_partitions': 4, 'federated_status_collect_type': 'PUSH', 'model_id': 'guest-10000#host-9999#model', 'model_version': '202011200707112994524', 'eggroll_run': {'eggroll.session.processors.per.node': 4}, 'spark_run': {}, 'rabbitmq_run': {}, 'adaptation_parameters': {'task_nodes': 1, 'task_cores_per_node': 4, 'task_memory_per_node': 0}}, 'component_parameters': {'common': {'hetero_secure_boost_0': {'task_type': 'classification', 'objective_param': {'objective': 'cross_entropy'}, 'num_trees': 3, 'validation_freqs': 1, 'encrypt_param': {'method': 'iterativeAffine'}, 'tree_param': {'max_depth': 3}}, 'evaluation_0': {'eval_type': 'binary'}}, 'role': {'guest': {'0': {'reader_1': {'table': {'name': 'breast_hetero_guest', 'namespace': 'experiment'}}, 'reader_0': {'table': {'name': 'breast_hetero_guest', 'namespace': 'experiment'}}, 'dataio_0': {'with_label': True, 'output_format': 'dense'}, 'dataio_1': {'with_label': True, 'output_format': 'dense'}}}, 'host': {'0': {'reader_1': {'table': {'name': 'breast_hetero_host', 'namespace': 'experiment'}}, 'reader_0': {'table': {'name': 'breast_hetero_host', 'namespace': 'experiment'}}, 'dataio_0': {'with_label': False}, 'dataio_1': {'with_label': False}}}}}, 'config': '/data/projects/fate/python/fate_flow/examples/hetero_secureboost_conf.json', 'dsl': 'examples/hetero_secureboost_dsl.json', 'function': 'submit_job', 'local': {'role': 'host', 'party_id': 9999}, 'CodePath': 'federatedml/evaluation/evaluation.py/Evaluation', 'module': 'Evaluation', 'output_data_name': ['data']}
[DEBUG] [2020-11-20 07:17:51,751] [22527:140352875779904] - component_properties.py[line:80]: need_run: True, need_cv: False
[DEBUG] [2020-11-20 07:17:51,752] [22527:140352875779904] - component_properties.py[line:102]: parse_dsl_args data_sets: {'hetero_secure_boost_0': {'data': [None]}}
[DEBUG] [2020-11-20 07:17:51,752] [22527:140352875779904] - component_properties.py[line:112]: [Data Parser], has_train_data: False
[DEBUG] [2020-11-20 07:17:51,753] [22527:140352875779904] - component_properties.py[line:112]: [Data Parser], has_eval_data: False
[DEBUG] [2020-11-20 07:17:51,754] [22527:140352875779904] - component_properties.py[line:112]: [Data Parser], has_validate_data: False
[DEBUG] [2020-11-20 07:17:51,754] [22527:140352875779904] - component_properties.py[line:112]: [Data Parser], has_test_data: False
[DEBUG] [2020-11-20 07:17:51,755] [22527:140352875779904] - component_properties.py[line:118]: [Data Parser], has_normal_data: True
[DEBUG] [2020-11-20 07:17:51,757] [22527:140352875779904] - component_properties.py[line:179]: Input data_sets: {'hetero_secure_boost_0': {'data': [None]}}
[DEBUG] [2020-11-20 07:17:51,758] [22527:140352875779904] - component_properties.py[line:189]: data_dict: {'data': [None]}
[DEBUG] [2020-11-20 07:17:51,759] [22527:140352875779904] - component_properties.py[line:192]: data_list: [None]
[DEBUG] [2020-11-20 07:17:51,760] [22527:140352875779904] - component_properties.py[line:231]: train_data: None, validate_data: None, test_data: None, data: {'hetero_secure_boost_0.data.0': None}
[DEBUG] [2020-11-20 07:17:51,761] [22527:140352875779904] - model_base.py[line:88]: running_funcs: [<function Evaluation.extract_data at 0x7fa5f18efe18>, <bound method ModelBase.set_flowid of <federatedml.evaluation.evaluation.Evaluation object at 0x7fa66286d438>>, <bound method Evaluation.fit of <federatedml.evaluation.evaluation.Evaluation object at 0x7fa66286d438>>]
[DEBUG] [2020-11-20 07:17:51,761] [22527:140352875779904] - model_base.py[line:97]: func: <bound method Evaluation.fit of <federatedml.evaluation.evaluation.Evaluation object at 0x7fa66286d438>>
[DEBUG] [2020-11-20 07:17:51,762] [22527:140352875779904] - evaluation.py[line:266]: running eval, data: {'hetero_secure_boost_0': None}
[DEBUG] [2020-11-20 07:17:51,763] [22527:140352875779904] - evaluation.py[line:271]: data with hetero_secure_boost_0 is None, skip metric computation
[DEBUG] [2020-11-20 07:17:51,763] [22527:140352875779904] - evaluation.py[line:596]: callback metric called
[DEBUG] [2020-11-20 07:17:51,764] [22527:140352875779904] - model_base.py[line:109]: saved_result is : [None], data_output: None
[INFO] [2020-11-20 07:17:51,765] [22527:140352875779904] - tracker_client.py[line:173]: Request save job 202011200707112994524 task 202011200707112994524_evaluation_0 0 on host 9999 component summary
[INFO] [2020-11-20 07:17:52,010] [22527:140352875779904] - profile.py[line:249]: 
Computing:
+----------+------------------------------------------+
| function |                                          |
+----------+------------------------------------------+
|  total   | n=0, sum=0.0000, mean=0.0000, max=0.0000 |
+----------+------------------------------------------+

Federation:
+--------+------------------------------------------+
|  get   |                                          |
+--------+------------------------------------------+
| remote |                                          |
+--------+------------------------------------------+
| total  | n=0, sum=0.0000, mean=0.0000, max=0.0000 |
+--------+------------------------------------------+

[DEBUG] [2020-11-20 07:17:52,013] [22527:140352875779904] - profile.py[line:250]: 
Detailed Computing:
+-------+------------------------------------------+
| stack |                                          |
+-------+------------------------------------------+
| total | n=0, sum=0.0000, mean=0.0000, max=0.0000 |
+-------+------------------------------------------+

[INFO] [2020-11-20 07:17:52,016] [22527:140352875779904] - task_executor.py[line:302]: report task 202011200707112994524_evaluation_0 0 host 9999 to driver
[INFO] [2020-11-20 07:17:52,017] [22527:140352875779904] - control_client.py[line:42]: request update job 202011200707112994524 task 202011200707112994524_evaluation_0 0 on host 9999
[INFO] [2020-11-20 07:17:53,363] [22527:140352875779904] - task_executor.py[line:207]: task 202011200707112994524_evaluation_0 host 9999 start time: 2020-11-20 07:17:35
[INFO] [2020-11-20 07:17:53,365] [22527:140352875779904] - task_executor.py[line:209]: task 202011200707112994524_evaluation_0 host 9999 end time: 2020-11-20 07:17:52
[INFO] [2020-11-20 07:17:53,366] [22527:140352875779904] - task_executor.py[line:211]: task 202011200707112994524_evaluation_0 host 9999 takes 16.136s
[INFO] [2020-11-20 07:17:53,367] [22527:140352875779904] - task_executor.py[line:214]: Finish 202011200707112994524 evaluation_0 202011200707112994524_evaluation_0 0 host 9999 task success
[INFO] [2020-11-20 07:17:53,370] [22527:140352875779904] - task_executor.py[line:302]: report task 202011200707112994524_evaluation_0 0 host 9999 to driver
[INFO] [2020-11-20 07:17:53,372] [22527:140352875779904] - control_client.py[line:42]: request update job 202011200707112994524 task 202011200707112994524_evaluation_0 0 on host 9999
